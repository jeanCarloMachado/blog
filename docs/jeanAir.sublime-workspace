{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"news",
				"newsletter"
			],
			[
				"getB",
				"getBruteVal"
			],
			[
				"inclu",
				"inclusion_date"
			],
			[
				"Newslet",
				"Newsletters"
			],
			[
				"where",
				"whereToFindModel"
			],
			[
				"para",
				"parametros"
			],
			[
				"diversida",
				"diversidadeNaRuaUrl"
			],
			[
				"curr",
				"currentCategory"
			],
			[
				"getNew",
				"getNewsIdsFromCategoryId"
			],
			[
				"Service",
				"ServiceLocatorAwareInterface"
			],
			[
				"categor",
				"categoria"
			],
			[
				"cate",
				"categoryId"
			],
			[
				"repres",
				"representante_id"
			],
			[
				"tac",
				"taCombinadoId"
			],
			[
				"div",
				"diversidadeNaRuaId"
			],
			[
				"cur",
				"currentCitiesBucket"
			],
			[
				"wher",
				"whereRepresentatives"
			],
			[
				"model",
				"modelCity"
			],
			[
				"newP",
				"newPasswordConfirmation"
			],
			[
				"toBO",
				"toObjectEnabled"
			],
			[
				"inst",
				"institucionais"
			],
			[
				"view",
				"viewModel"
			],
			[
				"hi",
				"hightlightImage"
			],
			[
				"category",
				"categoryTitle"
			],
			[
				"cateGORY",
				"categoryTitle"
			],
			[
				"argu",
				"argumentsCpy"
			],
			[
				"DES",
				"DESCRIPTION_LIST_SIZE"
			],
			[
				"wna",
				"wantedViewFile"
			],
			[
				"Stora",
				"StoragePaginas"
			],
			[
				"name",
				"lowerNamespace"
			],
			[
				"main",
				"MAIN_USER_HOME"
			],
			[
				"MAIN_",
				"MAIN_USER_HOME"
			],
			[
				"auten",
				"authenticate"
			],
			[
				"dis",
				"displayable_name"
			],
			[
				"al",
				"alternadoresResult"
			],
			[
				"dados",
				"dadosJSON"
			],
			[
				"result",
				"resultProduto"
			],
			[
				"whe",
				"whereClausule"
			],
			[
				"resul",
				"resultFather"
			],
			[
				"FTP",
				"FTP_EXPIRATION"
			],
			[
				"_vs",
				"_versionDefault"
			],
			[
				"ve",
				"versionDefault"
			],
			[
				"_ver",
				"_versionDefault"
			],
			[
				"co",
				"columnName"
			],
			[
				"path",
				"pathFull"
			],
			[
				"utf",
				"utf8_encode"
			],
			[
				"asc",
				"idn_to_ascii"
			],
			[
				"re",
				"resultRegister"
			],
			[
				"com",
				"comparação"
			],
			[
				"hasC",
				"hasComparationChar"
			],
			[
				"colum",
				"columnName"
			],
			[
				"ele",
				"elementId"
			],
			[
				"PRO",
				"productId"
			],
			[
				"en",
				"endereco_site"
			],
			[
				"pro",
				"product"
			],
			[
				"prod",
				"productId"
			],
			[
				"onde",
				"ondeComprar"
			],
			[
				"ci",
				"cities"
			],
			[
				"city",
				"cityId"
			],
			[
				"arraykey",
				"array_key_exists"
			],
			[
				"utf8_",
				"utf8_encode"
			],
			[
				"ut",
				"utf8_encode"
			],
			[
				"elem",
				"elementId"
			],
			[
				"dado",
				"dadosFotos"
			],
			[
				"youtu",
				"youtubeThumb"
			],
			[
				"new",
				"newElement"
			],
			[
				"obj",
				"objName"
			],
			[
				"reslt",
				"resultGrouped"
			],
			[
				"to",
				"totalPedidos"
			],
			[
				"pedid",
				"pedidosResult"
			],
			[
				"ARR",
				"arrMask"
			],
			[
				"date",
				"dateElement"
			],
			[
				"mask",
				"maskElementId"
			],
			[
				"mas",
				"maskElement"
			],
			[
				"se",
				"separator"
			],
			[
				"authe",
				"authenticationIsEnabled"
			],
			[
				"row",
				"rowCounter"
			],
			[
				"ro",
				"rowCounter"
			],
			[
				"fa",
				"fatherTable"
			],
			[
				"element",
				"elementKey"
			],
			[
				"eleme",
				"element"
			],
			[
				"el",
				"elementId"
			],
			[
				"produt",
				"produtosResult"
			],
			[
				"categ",
				"categoriasArray"
			],
			[
				"res",
				"resultPais"
			],
			[
				"id",
				"idProduct"
			],
			[
				"cu",
				"currProduto"
			],
			[
				"linh",
				"linhaId"
			],
			[
				"modulo",
				"moduloVerifica"
			],
			[
				"modu",
				"moduloVerifica"
			],
			[
				"mod",
				"modelSite"
			],
			[
				"de",
				"destaqueCol1"
			],
			[
				"pr",
				"produtos"
			],
			[
				"DA",
				"dadosJSON"
			],
			[
				"sus",
				"substitutoResult"
			],
			[
				"orcam",
				"orcamentoKind"
			],
			[
				"da",
				"dados_gerais"
			],
			[
				"strto",
				"strtolower"
			],
			[
				"values",
				"valuesSchema"
			],
			[
				"fili",
				"filiaisArray"
			],
			[
				"cds",
				"cdsPermissions"
			],
			[
				"or",
				"orcamentoId"
			],
			[
				"orcament",
				"orcamentoId"
			],
			[
				"_log",
				"_logFlag"
			],
			[
				"elmen",
				"elementId"
			],
			[
				"userA",
				"userAckResult"
			],
			[
				"preco",
				"preco_aproveitamento"
			],
			[
				"tmp",
				"tmp_orcamento"
			],
			[
				"user",
				"userData"
			],
			[
				"item",
				"itemId"
			],
			[
				"cotr",
				"controllerName"
			],
			[
				"orcamento",
				"orcamentoBody"
			],
			[
				"gene",
				"generatedPassword"
			],
			[
				"Coor",
				"coordinate2"
			],
			[
				"fi",
				"finalResult"
			],
			[
				"kilo",
				"kilometragem_origem_destino"
			],
			[
				"string",
				"stringPre"
			],
			[
				"dataFim",
				"dataFim"
			],
			[
				"dataFi",
				"dataFinal"
			],
			[
				"requ",
				"request_url"
			],
			[
				"coordi",
				"coordinate2"
			],
			[
				"esta",
				"estadoResult"
			],
			[
				"des",
				"destinoAddr"
			],
			[
				"data",
				"dataIniOrc"
			],
			[
				"setDat",
				"setDateTime"
			],
			[
				"cont",
				"contatoResult"
			],
			[
				"contato",
				"contatosResult"
			],
			[
				"filiais",
				"filiaisArray"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/jean/Projects/blog/config/autoload/local.php",
			"settings":
			{
				"buffer_size": 540,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "earching 25671 files for \"redirect\"\n\nUnable to open ~/Prblogojects/\n\n/Users/jean/Projects/mercur/.git/hooks/pre-commit.sample:\n   19  allownonascii=$(git config hooks.allownonascii)\n   20  \n   21: # Redirect output to stderr.\n   22  exec 1>&2\n   23  \n\n~/Projects/mercur/.git/index:\n    <binary>\n\n/Users/jean/Projects/mercur/.git/logs/HEAD:\n   92  efb8381cecf5da3404a0e2c990d8b3d4d667ac20 97571c6c20135a0d7307e5591f64d8ae59d30ea0 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409252775 -0300	commit: changed main menu -diversidade na rual links\n   93  97571c6c20135a0d7307e5591f64d8ae59d30ea0 a37fb8591a50b099be92bcba8616686dde73a966 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409253341 -0300	commit: added manual da marca menu ack\n   94: a37fb8591a50b099be92bcba8616686dde73a966 e72dd25e8b15111b038611bca4a17621b83034ef Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254178 -0300	commit: solved institutional redirects to undefined\n   95  e72dd25e8b15111b038611bca4a17621b83034ef 3b55dd31e298a8d5139238d397a44b302aac07aa Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254536 -0300	commit: added label to city and state of speak with us\n   96  3b55dd31e298a8d5139238d397a44b302aac07aa 8e0bb5ead9671a07e7d14b529372f418e3f94ba0 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254869 -0300	commit: added no image for Image::setupPath calls\n\n/Users/jean/Projects/mercur/.git/logs/refs/heads/master:\n   89  efb8381cecf5da3404a0e2c990d8b3d4d667ac20 97571c6c20135a0d7307e5591f64d8ae59d30ea0 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409252775 -0300	commit: changed main menu -diversidade na rual links\n   90  97571c6c20135a0d7307e5591f64d8ae59d30ea0 a37fb8591a50b099be92bcba8616686dde73a966 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409253341 -0300	commit: added manual da marca menu ack\n   91: a37fb8591a50b099be92bcba8616686dde73a966 e72dd25e8b15111b038611bca4a17621b83034ef Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254178 -0300	commit: solved institutional redirects to undefined\n   92  e72dd25e8b15111b038611bca4a17621b83034ef 3b55dd31e298a8d5139238d397a44b302aac07aa Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254536 -0300	commit: added label to city and state of speak with us\n   93  3b55dd31e298a8d5139238d397a44b302aac07aa 8e0bb5ead9671a07e7d14b529372f418e3f94ba0 Jean Carlo Machado <j34nc4rl0@gmail.com> 1409254869 -0300	commit: added no image for Image::setupPath calls\n\n~/Projects/mercur/composer.phar:\n    <binary>\n\n/Users/jean/Projects/mercur/docs/jeanAir.sublime-workspace:\n  553  		},\n  554  		{\n  555: 			\"contents\": \"Searching 25580 files for \\\"TESTE\\\" (case sensitive)\\n\\nUnable to open ~/Projects/mercur\\n\\n\\n\\nSearching 25580 files for \\\"teste\\\" (case sensitive)\\n\\nUnable to open ~/Projects/mercur\\n\\n~/Projects/mercur/.git/index:\\n    <binary>\\n\\n/Users/jean/Projects/mercur/data/cache/module-config-cache.496fe9daf9baed5ab03314f04518b928.php:\\n  804          ),\\n  805        ),\\n  806:       'sacteste' => \\n  807        array (\\n  808          'type' => 'Segment',\\n  ...\\n  817              '__NAMESPACE__' => 'Sac\\\\\\\\Controller',\\n  818              'controller' => 'Index',\\n  819:             'action' => 'teste',\\n  820              'codigo' => false,\\n  821            ),\\n\\n~/Projects/mercur/docs/MercurRequests:\\n    <binary>\\n\\n~/Projects/mercur/docs/requests:\\n    <binary>\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/autoload/sfCoreAutoload.class.php:\\n  413      'sftestfunctional' => 'test/sfTestFunctional.class.php',\\n  414      'sftestfunctionalbase' => 'test/sfTestFunctionalBase.class.php',\\n  415:     'sftester' => 'test/sfTester.class.php',\\n  416:     'sftesterform' => 'test/sfTesterForm.class.php',\\n  417:     'sftestermailer' => 'test/sfTesterMailer.class.php',\\n  418:     'sftesterrequest' => 'test/sfTesterRequest.class.php',\\n  419:     'sftesterresponse' => 'test/sfTesterResponse.class.php',\\n  420:     'sftesteruser' => 'test/sfTesterUser.class.php',\\n  421:     'sftesterviewcache' => 'test/sfTesterViewCache.class.php',\\n  422      'sfbasicsecurityuser' => 'user/sfBasicSecurityUser.class.php',\\n  423      'sfsecurityuser' => 'user/sfSecurityUser.class.php',\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/i18n/data/pt.dat:\\n    1: a:19:{s:9:\\\"Countries\\\";a:278:{i:1;s:9:\\\"Américas\\\";i:2;s:6:\\\"Caribe\\\";i:3;s:13:\\\"Europa do Sul\\\";i:5;s:15:\\\"América do Sul\\\";i:0;s:7:\\\"Oceania\\\";i:9;s:17:\\\"África Ocidental\\\";i:11;s:16:\\\"América Central\\\";i:12;s:16:\\\"África Oriental\\\";i:13;s:16:\\\"África do Norte\\\";i:15;s:15:\\\"África Central\\\";i:17;s:21:\\\"América Setentrional\\\";i:24;s:14:\\\"Ásia Oriental\\\";i:28;s:12:\\\"Ásia do Sul\\\";i:29;s:21:\\\"Ásia Centro-Oriental\\\";i:43;s:27:\\\"Austrália e Nova Zelândia\\\";i:44;s:10:\\\"Melanésia\\\";i:47;s:22:\\\"Região da Micronésia\\\";i:49;s:10:\\\"Polinésia\\\";i:50;s:23:\\\"Ásia Centro-Meridional\\\";i:142;s:5:\\\"Ásia\\\";i:143;s:13:\\\"Ásia Central\\\";i:145;s:15:\\\"Ásia Ocidental\\\";i:150;s:6:\\\"Europa\\\";i:151;s:15:\\\"Europa Oriental\\\";i:154;s:19:\\\"Europa Setentrional\\\";i:155;s:16:\\\"Europa Ocidental\\\";i:172;s:36:\\\"Comunidade dos Estados Independentes\\\";i:419;s:24:\\\"América Latina e Caribe\\\";s:2:\\\"AD\\\";s:7:\\\"Andorra\\\";s:2:\\\"AE\\\";s:23:\\\"Emirados Árabes Unidos\\\";s:2:\\\"AF\\\";s:12:\\\"Afeganistão\\\";s:2:\\\"AG\\\";s:18:\\\"Antígua e Barbuda\\\";s:2:\\\"AI\\\";s:8:\\\"Anguilla\\\";s:2:\\\"AL\\\";s:8:\\\"Albânia\\\";s:2:\\\"AM\\\";s:8:\\\"Armênia\\\";s:2:\\\"AN\\\";s:19:\\\"Antilhas Holandesas\\\";s:2:\\\"AO\\\";s:6:\\\"Angola\\\";s:2:\\\"AQ\\\";s:10:\\\"Antártida\\\";s:2:\\\"AR\\\";s:9:\\\"Argentina\\\";s:2:\\\"AS\\\";s:15:\\\"Samoa Americana\\\";s:2:\\\"AT\\\";s:8:\\\"Áustria\\\";s:2:\\\"AU\\\";s:10:\\\"Austrália\\\";s:2:\\\"AW\\\";s:5:\\\"Aruba\\\";s:2:\\\"AX\\\";s:11:\\\"Ilhas Aland\\\";s:2:\\\"AZ\\\";s:11:\\\"Azerbaijão\\\";s:2:\\\"BA\\\";s:19:\\\"Bósnia-Herzegovina\\\";s:2:\\\"BB\\\";s:8:\\\"Barbados\\\";s:2:\\\"BD\\\";s:10:\\\"Bangladesh\\\";s:2:\\\"BE\\\";s:8:\\\"Bélgica\\\";s:2:\\\"BF\\\";s:13:\\\"Burquina Faso\\\";s:2:\\\"BG\\\";s:9:\\\"Bulgária\\\";s:2:\\\"BH\\\";s:7:\\\"Bahrain\\\";s:2:\\\"BI\\\";s:7:\\\"Burundi\\\";s:2:\\\"BJ\\\";s:5:\\\"Benin\\\";s:2:\\\"BL\\\";s:15:\\\"São Bartolomeu\\\";s:2:\\\"BM\\\";s:8:\\\"Bermudas\\\";s:2:\\\"BN\\\";s:6:\\\"Brunei\\\";s:2:\\\"BO\\\";s:8:\\\"Bolívia\\\";s:2:\\\"BR\\\";s:6:\\\"Brasil\\\";s:2:\\\"BS\\\";s:7:\\\"Bahamas\\\";s:2:\\\"BT\\\";s:6:\\\"Butão\\\";s:2:\\\"BV\\\";s:11:\\\"Ilha Bouvet\\\";s:2:\\\"BW\\\";s:8:\\\"Botsuana\\\";s:2:\\\"BY\\\";s:7:\\\"Belarus\\\";s:2:\\\"BZ\\\";s:6:\\\"Belize\\\";s:2:\\\"CA\\\";s:7:\\\"Canadá\\\";s:2:\\\"CC\\\";s:10:\\\"Ilhas Coco\\\";s:2:\\\"CD\\\";s:14:\\\"Congo-Kinshasa\\\";s:2:\\\"CF\\\";s:26:\\\"República Centro-Africana\\\";s:2:\\\"CG\\\";s:5:\\\"Congo\\\";s:2:\\\"CH\\\";s:7:\\\"Suíça\\\";s:2:\\\"CI\\\";s:15:\\\"Costa do Marfim\\\";s:2:\\\"CK\\\";s:10:\\\"Ilhas Cook\\\";s:2:\\\"CL\\\";s:5:\\\"Chile\\\";s:2:\\\"CM\\\";s:24:\\\"República dos Camarões\\\";s:2:\\\"CN\\\";s:5:\\\"China\\\";s:2:\\\"CO\\\";s:9:\\\"Colômbia\\\";s:2:\\\"CR\\\";s:10:\\\"Costa Rica\\\";s:2:\\\"CS\\\";s:20:\\\"Sérvia e Montenegro\\\";s:2:\\\"CU\\\";s:4:\\\"Cuba\\\";s:2:\\\"CV\\\";s:10:\\\"Cabo Verde\\\";s:2:\\\"CX\\\";s:11:\\\"Ilhas Natal\\\";s:2:\\\"CY\\\";s:6:\\\"Chipre\\\";s:2:\\\"CZ\\\";s:17:\\\"República Tcheca\\\";s:2:\\\"DE\\\";s:8:\\\"Alemanha\\\";s:2:\\\"DJ\\\";s:7:\\\"Djibuti\\\";s:2:\\\"DK\\\";s:9:\\\"Dinamarca\\\";s:2:\\\"DM\\\";s:8:\\\"Dominica\\\";s:2:\\\"DO\\\";s:21:\\\"República Dominicana\\\";s:2:\\\"DZ\\\";s:8:\\\"Argélia\\\";s:2:\\\"EC\\\";s:7:\\\"Equador\\\";s:2:\\\"EE\\\";s:8:\\\"Estônia\\\";s:2:\\\"EG\\\";s:5:\\\"Egito\\\";s:2:\\\"EH\\\";s:15:\\\"Saara Ocidental\\\";s:2:\\\"ER\\\";s:8:\\\"Eritreia\\\";s:2:\\\"ES\\\";s:7:\\\"Espanha\\\";s:2:\\\"ET\\\";s:8:\\\"Etiópia\\\";s:2:\\\"FI\\\";s:10:\\\"Finlândia\\\";s:2:\\\"FJ\\\";s:4:\\\"Fiji\\\";s:2:\\\"FK\\\";s:14:\\\"Ilhas Malvinas\\\";s:2:\\\"FM\\\";s:11:\\\"Micronésia\\\";s:2:\\\"FO\\\";s:11:\\\"Ilhas Faroe\\\";s:2:\\\"FR\\\";s:7:\\\"França\\\";s:2:\\\"GA\\\";s:6:\\\"Gabão\\\";s:2:\\\"GB\\\";s:11:\\\"Reino Unido\\\";s:2:\\\"GD\\\";s:7:\\\"Granada\\\";s:2:\\\"GE\\\";s:8:\\\"Geórgia\\\";s:2:\\\"GF\\\";s:15:\\\"Guiana Francesa\\\";s:2:\\\"GG\\\";s:8:\\\"Guernsey\\\";s:2:\\\"GH\\\";s:4:\\\"Gana\\\";s:2:\\\"GI\\\";s:9:\\\"Gibraltar\\\";s:2:\\\"GL\\\";s:12:\\\"Groênlandia\\\";s:2:\\\"GM\\\";s:7:\\\"Gâmbia\\\";s:2:\\\"GN\\\";s:6:\\\"Guiné\\\";s:2:\\\"GP\\\";s:9:\\\"Guadalupe\\\";s:2:\\\"GQ\\\";s:17:\\\"Guiné Equatorial\\\";s:2:\\\"GR\\\";s:7:\\\"Grécia\\\";s:2:\\\"GS\\\";s:39:\\\"Geórgia do Sul e Ilhas Sandwich do Sul\\\";s:2:\\\"GT\\\";s:9:\\\"Guatemala\\\";s:2:\\\"GU\\\";s:4:\\\"Guam\\\";s:2:\\\"GW\\\";s:13:\\\"Guiné Bissau\\\";s:2:\\\"GY\\\";s:6:\\\"Guiana\\\";s:2:\\\"HK\\\";s:43:\\\"Hong Kong, Região Admin. Especial da China\\\";s:2:\\\"HM\\\";s:27:\\\"Ilha Heard e Ilhas McDonald\\\";s:2:\\\"HN\\\";s:8:\\\"Honduras\\\";s:2:\\\"HR\\\";s:8:\\\"Croácia\\\";s:2:\\\"HT\\\";s:5:\\\"Haiti\\\";s:2:\\\"HU\\\";s:7:\\\"Hungria\\\";s:2:\\\"ID\\\";s:10:\\\"Indonésia\\\";s:2:\\\"IE\\\";s:7:\\\"Irlanda\\\";s:2:\\\"IL\\\";s:6:\\\"Israel\\\";s:2:\\\"IM\\\";s:11:\\\"Ilha de Man\\\";s:2:\\\"IN\\\";s:6:\\\"Índia\\\";s:2:\\\"IO\\\";s:40:\\\"Território Britânico do Oceano Índico\\\";s:2:\\\"IQ\\\";s:6:\\\"Iraque\\\";s:2:\\\"IR\\\";s:4:\\\"Irã\\\";s:2:\\\"IS\\\";s:9:\\\"Islândia\\\";s:2:\\\"IT\\\";s:7:\\\"Itália\\\";s:2:\\\"JE\\\";s:6:\\\"Jersey\\\";s:2:\\\"JM\\\";s:7:\\\"Jamaica\\\";s:2:\\\"JO\\\";s:9:\\\"Jordânia\\\";s:2:\\\"JP\\\";s:6:\\\"Japão\\\";s:2:\\\"KE\\\";s:7:\\\"Quênia\\\";s:2:\\\"KG\\\";s:12:\\\"Quirguistão\\\";s:2:\\\"KH\\\";s:7:\\\"Camboja\\\";s:2:\\\"KI\\\";s:9:\\\"Quiribati\\\";s:2:\\\"KM\\\";s:7:\\\"Comores\\\";s:2:\\\"KN\\\";s:23:\\\"São Cristovão e Nevis\\\";s:2:\\\"KP\\\";s:15:\\\"Coreia do Norte\\\";s:2:\\\"KR\\\";s:13:\\\"Coreia do Sul\\\";s:2:\\\"KW\\\";s:6:\\\"Kuwait\\\";s:2:\\\"KY\\\";s:12:\\\"Ilhas Caiman\\\";s:2:\\\"KZ\\\";s:12:\\\"Casaquistão\\\";s:2:\\\"LA\\\";s:39:\\\"República Popular Democrática do Laos\\\";s:2:\\\"LB\\\";s:7:\\\"Líbano\\\";s:2:\\\"LC\\\";s:12:\\\"Santa Lúcia\\\";s:2:\\\"LI\\\";s:13:\\\"Liechtenstein\\\";s:2:\\\"LK\\\";s:9:\\\"Sri Lanka\\\";s:2:\\\"LR\\\";s:8:\\\"Libéria\\\";s:2:\\\"LS\\\";s:6:\\\"Lesoto\\\";s:2:\\\"LT\\\";s:9:\\\"Lituânia\\\";s:2:\\\"LU\\\";s:10:\\\"Luxemburgo\\\";s:2:\\\"LV\\\";s:8:\\\"Letônia\\\";s:2:\\\"LY\\\";s:6:\\\"Líbia\\\";s:2:\\\"MA\\\";s:8:\\\"Marrocos\\\";s:2:\\\"MC\\\";s:7:\\\"Mônaco\\\";s:2:\\\"MD\\\";s:9:\\\"Moldávia\\\";s:2:\\\"ME\\\";s:10:\\\"Montenegro\\\";s:2:\\\"MF\\\";s:13:\\\"São Martinho\\\";s:2:\\\"MG\\\";s:10:\\\"Madagascar\\\";s:2:\\\"MH\\\";s:14:\\\"Ilhas Marshall\\\";s:2:\\\"MK\\\";s:10:\\\"Macedônia\\\";s:2:\\\"ML\\\";s:4:\\\"Mali\\\";s:2:\\\"MM\\\";s:7:\\\"Mianmar\\\";s:2:\\\"MN\\\";s:9:\\\"Mongólia\\\";s:2:\\\"MO\\\";s:39:\\\"Macau, Região Admin. Especial da China\\\";s:2:\\\"MP\\\";s:23:\\\"Ilhas Marianas do Norte\\\";s:2:\\\"MQ\\\";s:9:\\\"Martinica\\\";s:2:\\\"MR\\\";s:11:\\\"Mauritânia\\\";s:2:\\\"MS\\\";s:10:\\\"Montserrat\\\";s:2:\\\"MT\\\";s:5:\\\"Malta\\\";s:2:\\\"MU\\\";s:9:\\\"Maurício\\\";s:2:\\\"MV\\\";s:8:\\\"Maldivas\\\";s:2:\\\"MW\\\";s:6:\\\"Malawi\\\";s:2:\\\"MX\\\";s:7:\\\"México\\\";s:2:\\\"MY\\\";s:8:\\\"Malásia\\\";s:2:\\\"MZ\\\";s:11:\\\"Moçambique\\\";s:2:\\\"NA\\\";s:8:\\\"Namíbia\\\";s:2:\\\"NC\\\";s:15:\\\"Nova Caledônia\\\";s:2:\\\"NE\\\";s:6:\\\"Níger\\\";s:2:\\\"NF\\\";s:12:\\\"Ilha Norfolk\\\";s:2:\\\"NG\\\";s:8:\\\"Nigéria\\\";s:2:\\\"NI\\\";s:10:\\\"Nicarágua\\\";s:2:\\\"NL\\\";s:7:\\\"Holanda\\\";s:2:\\\"NO\\\";s:7:\\\"Noruega\\\";s:2:\\\"NP\\\";s:5:\\\"Nepal\\\";s:2:\\\"NR\\\";s:5:\\\"Nauru\\\";s:2:\\\"NU\\\";s:4:\\\"Niue\\\";s:2:\\\"NZ\\\";s:14:\\\"Nova Zelândia\\\";s:2:\\\"OM\\\";s:4:\\\"Omã\\\";s:2:\\\"PA\\\";s:7:\\\"Panamá\\\";s:2:\\\"PE\\\";s:4:\\\"Peru\\\";s:2:\\\"PF\\\";s:19:\\\"Polinésia Francesa\\\";s:2:\\\"PG\\\";s:17:\\\"Papua-Nova Guiné\\\";s:2:\\\"PH\\\";s:9:\\\"Filipinas\\\";s:2:\\\"PK\\\";s:10:\\\"Paquistão\\\";s:2:\\\"PL\\\";s:8:\\\"Polônia\\\";s:2:\\\"PM\\\";s:23:\\\"Saint Pierre e Miquelon\\\";s:2:\\\"PN\\\";s:8:\\\"Pitcairn\\\";s:2:\\\"PR\\\";s:10:\\\"Porto Rico\\\";s:2:\\\"PS\\\";s:24:\\\"Território da Palestina\\\";s:2:\\\"PT\\\";s:8:\\\"Portugal\\\";s:2:\\\"PW\\\";s:5:\\\"Palau\\\";s:2:\\\"PY\\\";s:8:\\\"Paraguai\\\";s:2:\\\"QA\\\";s:5:\\\"Catar\\\";s:2:\\\"QO\\\";s:14:\\\"Oceania Remota\\\";s:2:\\\"QU\\\";s:15:\\\"União Europeia\\\";s:2:\\\"RE\\\";s:8:\\\"Reunião\\\";s:2:\\\"RO\\\";s:8:\\\"Romênia\\\";s:2:\\\"RS\\\";s:7:\\\"Sérvia\\\";s:2:\\\"RU\\\";s:7:\\\"Rússia\\\";s:2:\\\"RW\\\";s:6:\\\"Ruanda\\\";s:2:\\\"SA\\\";s:15:\\\"Arábia Saudita\\\";s:2:\\\"SB\\\";s:14:\\\"Ilhas Salomão\\\";s:2:\\\"SC\\\";s:10:\\\"Seychelles\\\";s:2:\\\"SD\\\";s:6:\\\"Sudão\\\";s:2:\\\"SE\\\";s:7:\\\"Suécia\\\";s:2:\\\"SG\\\";s:9:\\\"Cingapura\\\";s:2:\\\"SH\\\";s:12:\\\"Santa Helena\\\";s:2:\\\"SI\\\";s:10:\\\"Eslovênia\\\";s:2:\\\"SJ\\\";s:20:\\\"Svalbard e Jan Mayen\\\";s:2:\\\"SK\\\";s:11:\\\"Eslováquia\\\";s:2:\\\"SL\\\";s:10:\\\"Serra Leoa\\\";s:2:\\\"SM\\\";s:10:\\\"San Marino\\\";s:2:\\\"SN\\\";s:7:\\\"Senegal\\\";s:2:\\\"SO\\\";s:8:\\\"Somália\\\";s:2:\\\"SR\\\";s:8:\\\"Suriname\\\";s:2:\\\"ST\\\";s:22:\\\"São Tomé e Príncipe\\\";s:2:\\\"SV\\\";s:11:\\\"El Salvador\\\";s:2:\\\"SY\\\";s:6:\\\"Síria\\\";s:2:\\\"SZ\\\";s:12:\\\"Suazilândia\\\";s:2:\\\"TC\\\";s:20:\\\"Ilhas Turks e Caicos\\\";s:2:\\\"TD\\\";s:5:\\\"Chade\\\";s:2:\\\"TF\\\";s:29:\\\"Territórios Franceses do Sul\\\";s:2:\\\"TG\\\";s:4:\\\"Togo\\\";s:2:\\\"TH\\\";s:10:\\\"Tailândia\\\";s:2:\\\"TJ\\\";s:13:\\\"Tadjiquistão\\\";s:2:\\\"TK\\\";s:7:\\\"Tokelau\\\";s:2:\\\"TL\\\";s:11:\\\"Timor Leste\\\";s:2:\\\"TM\\\";s:14:\\\"Turcomenistão\\\";s:2:\\\"TN\\\";s:8:\\\"Tunísia\\\";s:2:\\\"TO\\\";s:5:\\\"Tonga\\\";s:2:\\\"TR\\\";s:7:\\\"Turquia\\\";s:2:\\\"TT\\\";s:17:\\\"Trinidad e Tobago\\\";s:2:\\\"TV\\\";s:6:\\\"Tuvalu\\\";s:2:\\\"TW\\\";s:6:\\\"Taiwan\\\";s:2:\\\"TZ\\\";s:9:\\\"Tanzânia\\\";s:2:\\\"UA\\\";s:8:\\\"Ucrânia\\\";s:2:\\\"UG\\\";s:6:\\\"Uganda\\\";s:2:\\\"UM\\\";s:42:\\\"Ilhas Menores Distantes dos Estados Unidos\\\";s:2:\\\"US\\\";s:14:\\\"Estados Unidos\\\";s:2:\\\"UY\\\";s:7:\\\"Uruguai\\\";s:2:\\\"UZ\\\";s:12:\\\"Uzbequistão\\\";s:2:\\\"VA\\\";s:8:\\\"Vaticano\\\";s:2:\\\"VC\\\";s:25:\\\"São Vicente e Granadinas\\\";s:2:\\\"VE\\\";s:9:\\\"Venezuela\\\";s:2:\\\"VG\\\";s:25:\\\"Ilhas Virgens Britânicas\\\";s:2:\\\"VI\\\";s:21:\\\"Ilhas Virgens dos EUA\\\";s:2:\\\"VN\\\";s:7:\\\"Vietnã\\\";s:2:\\\"VU\\\";s:7:\\\"Vanuatu\\\";s:2:\\\"WF\\\";s:15:\\\"Wallis e Futuna\\\";s:2:\\\"WS\\\";s:5:\\\"Samoa\\\";s:2:\\\"YE\\\";s:6:\\\"Iêmen\\\";s:2:\\\"YT\\\";s:7:\\\"Mayotte\\\";s:2:\\\"ZA\\\";s:14:\\\"África do Sul\\\";s:2:\\\"ZM\\\";s:7:\\\"Zâmbia\\\";s:2:\\\"ZW\\\";s:9:\\\"Zimbábue\\\";s:2:\\\"ZZ\\\";s:33:\\\"Região desconhecida ou inválida\\\";}s:10:\\\"Currencies\\\";a:271:{s:3:\\\"ADP\\\";a:2:{i:0;s:3:\\\"ADP\\\";i:1;s:17:\\\"Peseta de Andorra\\\";}s:3:\\\"AED\\\";a:2:{i:0;s:3:\\\"AED\\\";i:1;s:34:\\\"Dirém dos Emirados Árabes Unidos\\\";}s:3:\\\"AFA\\\";a:2:{i:0;s:3:\\\"AFA\\\";i:1;s:19:\\\"Afegane (1927-2002)\\\";}s:3:\\\"AFN\\\";a:2:{i:0;s:2:\\\"Af\\\";i:1;s:7:\\\"Afegane\\\";}s:3:\\\"ALL\\\";a:2:{i:0;s:3:\\\"ALL\\\";i:1;s:12:\\\"Lek Albanês\\\";}s:3:\\\"AMD\\\";a:2:{i:0;s:3:\\\"AMD\\\";i:1;s:13:\\\"Dram armênio\\\";}s:3:\\\"ANG\\\";a:2:{i:0;s:4:\\\"NAf.\\\";i:1;s:31:\\\"Guilder das Antilhas Holandesas\\\";}s:3:\\\"AOA\\\";a:2:{i:0;s:2:\\\"Kz\\\";i:1;s:15:\\\"Cuanza angolano\\\";}s:3:\\\"AOK\\\";a:2:{i:0;s:3:\\\"AOK\\\";i:1;s:27:\\\"Cuanza angolano (1977-1990)\\\";}s:3:\\\"AON\\\";a:2:{i:0;s:3:\\\"AON\\\";i:1;s:32:\\\"Novo cuanza angolano (1990-2000)\\\";}s:3:\\\"AOR\\\";a:2:{i:0;s:3:\\\"AOR\\\";i:1;s:38:\\\"Cuanza angolano reajustado (1995-1999)\\\";}s:3:\\\"ARA\\\";a:2:{i:0;s:3:\\\"₳\\\";i:1;s:17:\\\"Austral argentino\\\";}s:3:\\\"ARP\\\";a:2:{i:0;s:3:\\\"ARP\\\";i:1;s:26:\\\"Peso argentino (1983-1985)\\\";}s:3:\\\"ARS\\\";a:2:{i:0;s:3:\\\"AR$\\\";i:1;s:14:\\\"Peso argentino\\\";}s:3:\\\"ATS\\\";a:2:{i:0;s:3:\\\"ATS\\\";i:1;s:16:\\\"Xelim austríaco\\\";}s:3:\\\"AUD\\\";a:2:{i:0;s:3:\\\"AU$\\\";i:1;s:18:\\\"Dólar australiano\\\";}s:3:\\\"AWG\\\";a:2:{i:0;s:4:\\\"Afl.\\\";i:1;s:16:\\\"Guilder de Aruba\\\";}s:3:\\\"AZM\\\";a:2:{i:0;s:3:\\\"AZM\\\";i:1;s:17:\\\"Manat azerbaijano\\\";}s:3:\\\"AZN\\\";a:2:{i:0;s:4:\\\"man.\\\";i:1;s:20:\\\"Manat do Azerbaijão\\\";}s:3:\\\"BAD\\\";a:2:{i:0;s:3:\\\"BAD\\\";i:1;s:28:\\\"Dinar da Bósnia-Herzegovina\\\";}s:3:\\\"BAM\\\";a:2:{i:0;s:2:\\\"KM\\\";i:1;s:38:\\\"Marco bósnio-herzegovino conversível\\\";}s:3:\\\"BBD\\\";a:2:{i:0;s:4:\\\"Bds$\\\";i:1;s:18:\\\"Dólar de Barbados\\\";}s:3:\\\"BDT\\\";a:2:{i:0;s:2:\\\"Tk\\\";i:1;s:18:\\\"Taka de Bangladesh\\\";}s:3:\\\"BEC\\\";a:2:{i:0;s:3:\\\"BEC\\\";i:1;s:27:\\\"Franco belga (conversível)\\\";}s:3:\\\"BEF\\\";a:2:{i:0;s:2:\\\"BF\\\";i:1;s:12:\\\"Franco belga\\\";}s:3:\\\"BEL\\\";a:2:{i:0;s:3:\\\"BEL\\\";i:1;s:25:\\\"Franco belga (financeiro)\\\";}s:3:\\\"BGL\\\";a:2:{i:0;s:3:\\\"BGL\\\";i:1;s:18:\\\"Lev forte búlgaro\\\";}s:3:\\\"BGN\\\";a:2:{i:0;s:3:\\\"BGN\\\";i:1;s:17:\\\"Lev novo búlgaro\\\";}s:3:\\\"BHD\\\";a:2:{i:0;s:2:\\\"BD\\\";i:1;s:15:\\\"Dinar bareinita\\\";}s:3:\\\"BIF\\\";a:2:{i:0;s:3:\\\"FBu\\\";i:1;s:17:\\\"Franco do Burundi\\\";}s:3:\\\"BMD\\\";a:2:{i:0;s:3:\\\"BD$\\\";i:1;s:19:\\\"Dólar das Bermudas\\\";}s:3:\\\"BND\\\";a:2:{i:0;s:3:\\\"BN$\\\";i:1;s:16:\\\"Dólar do Brunei\\\";}s:3:\\\"BOB\\\";a:2:{i:0;s:2:\\\"Bs\\\";i:1;s:9:\\\"Boliviano\\\";}s:3:\\\"BOP\\\";a:2:{i:0;s:3:\\\"$b.\\\";i:1;s:14:\\\"Peso boliviano\\\";}s:3:\\\"BOV\\\";a:2:{i:0;s:3:\\\"BOV\\\";i:1;s:15:\\\"Mvdol boliviano\\\";}s:3:\\\"BRB\\\";a:2:{i:0;s:3:\\\"BRB\\\";i:1;s:36:\\\"Cruzeiro novo brasileiro (1967-1986)\\\";}s:3:\\\"BRC\\\";a:2:{i:0;s:3:\\\"BRC\\\";i:1;s:18:\\\"Cruzado brasileiro\\\";}s:3:\\\"BRE\\\";a:2:{i:0;s:3:\\\"BRE\\\";i:1;s:31:\\\"Cruzeiro brasileiro (1990-1993)\\\";}s:3:\\\"BRL\\\";a:2:{i:0;s:2:\\\"R$\\\";i:1;s:15:\\\"Real brasileiro\\\";}s:3:\\\"BRN\\\";a:2:{i:0;s:3:\\\"BRN\\\";i:1;s:23:\\\"Cruzado novo brasileiro\\\";}s:3:\\\"BRR\\\";a:2:{i:0;s:3:\\\"BRR\\\";i:1;s:19:\\\"Cruzeiro brasileiro\\\";}s:3:\\\"BSD\\\";a:2:{i:0;s:3:\\\"BS$\\\";i:1;s:18:\\\"Dólar das Bahamas\\\";}s:3:\\\"BTN\\\";a:2:{i:0;s:3:\\\"Nu.\\\";i:1;s:18:\\\"Ngultrum do Butão\\\";}s:3:\\\"BUK\\\";a:2:{i:0;s:3:\\\"BUK\\\";i:1;s:14:\\\"Kyat birmanês\\\";}s:3:\\\"BWP\\\";a:2:{i:0;s:3:\\\"BWP\\\";i:1;s:15:\\\"Pula botsuanesa\\\";}s:3:\\\"BYB\\\";a:2:{i:0;s:3:\\\"BYB\\\";i:1;s:34:\\\"Rublo novo bielo-russo (1994-1999)\\\";}s:3:\\\"BYR\\\";a:2:{i:0;s:3:\\\"BYR\\\";i:1;s:17:\\\"Rublo bielo-russo\\\";}s:3:\\\"BZD\\\";a:2:{i:0;s:3:\\\"BZ$\\\";i:1;s:16:\\\"Dólar do Belize\\\";}s:3:\\\"CAD\\\";a:2:{i:0;s:3:\\\"CA$\\\";i:1;s:16:\\\"Dólar canadense\\\";}s:3:\\\"CDF\\\";a:2:{i:0;s:3:\\\"CDF\\\";i:1;s:16:\\\"Franco congolês\\\";}s:3:\\\"CHE\\\";a:2:{i:0;s:3:\\\"CHE\\\";i:1;s:8:\\\"Euro WIR\\\";}s:3:\\\"CHF\\\";a:2:{i:0;s:3:\\\"Fr.\\\";i:1;s:14:\\\"Franco suíço\\\";}s:3:\\\"CHW\\\";a:2:{i:0;s:3:\\\"CHW\\\";i:1;s:10:\\\"Franco WIR\\\";}s:3:\\\"CLF\\\";a:2:{i:0;s:3:\\\"CLF\\\";i:1;s:28:\\\"Unidades de Fomento chilenas\\\";}s:3:\\\"CLP\\\";a:2:{i:0;s:3:\\\"CL$\\\";i:1;s:12:\\\"Peso chileno\\\";}s:3:\\\"CNY\\\";a:2:{i:0;s:4:\\\"CN¥\\\";i:1;s:21:\\\"Yuan Renminbi chinês\\\";}s:3:\\\"COP\\\";a:2:{i:0;s:3:\\\"CO$\\\";i:1;s:15:\\\"Peso colombiano\\\";}s:3:\\\"COU\\\";a:2:{i:0;s:3:\\\"COU\\\";i:1;s:21:\\\"Unidade de Valor Real\\\";}s:3:\\\"CRC\\\";a:2:{i:0;s:3:\\\"₡\\\";i:1;s:19:\\\"Colon da Costa Rica\\\";}s:3:\\\"CSD\\\";a:2:{i:0;s:3:\\\"CSD\\\";i:1;s:20:\\\"Dinar sérvio antigo\\\";}s:3:\\\"CSK\\\";a:2:{i:0;s:3:\\\"CSK\\\";i:1;s:24:\\\"Coroa Forte checoslovaca\\\";}s:3:\\\"CUP\\\";a:2:{i:0;s:3:\\\"CU$\\\";i:1;s:11:\\\"Peso cubano\\\";}s:3:\\\"CVE\\\";a:2:{i:0;s:3:\\\"CV$\\\";i:1;s:20:\\\"Escudo cabo-verdiano\\\";}s:3:\\\"CYP\\\";a:2:{i:0;s:4:\\\"CY£\\\";i:1;s:14:\\\"Libra cipriota\\\";}s:3:\\\"CZK\\\";a:2:{i:0;s:3:\\\"Kč\\\";i:1;s:11:\\\"Coroa checa\\\";}s:3:\\\"DDM\\\";a:2:{i:0;s:3:\\\"DDM\\\";i:1;s:28:\\\"Ostmark da Alemanha Oriental\\\";}s:3:\\\"DEM\\\";a:2:{i:0;s:2:\\\"DM\\\";i:1;s:13:\\\"Marco alemão\\\";}s:3:\\\"DJF\\\";a:2:{i:0;s:3:\\\"Fdj\\\";i:1;s:17:\\\"Franco do Djibuti\\\";}s:3:\\\"DKK\\\";a:2:{i:0;s:3:\\\"Dkr\\\";i:1;s:18:\\\"Coroa dinamarquesa\\\";}s:3:\\\"DOP\\\";a:2:{i:0;s:3:\\\"RD$\\\";i:1;s:15:\\\"Peso dominicano\\\";}s:3:\\\"DZD\\\";a:2:{i:0;s:2:\\\"DA\\\";i:1;s:14:\\\"Dinar argelino\\\";}s:3:\\\"ECS\\\";a:2:{i:0;s:3:\\\"ECS\\\";i:1;s:17:\\\"Sucre equatoriano\\\";}s:3:\\\"ECV\\\";a:2:{i:0;s:3:\\\"ECV\\\";i:1;s:43:\\\"Unidade de Valor Constante (UVC) do Equador\\\";}s:3:\\\"EEK\\\";a:2:{i:0;s:3:\\\"Ekr\\\";i:1;s:15:\\\"Coroa estoniana\\\";}s:3:\\\"EGP\\\";a:2:{i:0;s:4:\\\"EG£\\\";i:1;s:14:\\\"Libra egípcia\\\";}s:3:\\\"ERN\\\";a:2:{i:0;s:3:\\\"Nfk\\\";i:1;s:17:\\\"Nakfa da Eritreia\\\";}s:3:\\\"ESA\\\";a:2:{i:0;s:3:\\\"ESA\\\";i:1;s:26:\\\"Peseta espanhola (conta A)\\\";}s:3:\\\"ESB\\\";a:2:{i:0;s:3:\\\"ESB\\\";i:1;s:37:\\\"Peseta espanhola (conta conversível)\\\";}s:3:\\\"ESP\\\";a:2:{i:0;s:3:\\\"Pts\\\";i:1;s:16:\\\"Peseta espanhola\\\";}s:3:\\\"ETB\\\";a:2:{i:0;s:2:\\\"Br\\\";i:1;s:12:\\\"Birr etíope\\\";}s:3:\\\"EUR\\\";a:2:{i:0;s:3:\\\"€\\\";i:1;s:4:\\\"Euro\\\";}s:3:\\\"FIM\\\";a:2:{i:0;s:2:\\\"mk\\\";i:1;s:16:\\\"Marca finlandesa\\\";}s:3:\\\"FJD\\\";a:2:{i:0;s:3:\\\"FJ$\\\";i:1;s:14:\\\"Dólar de Fiji\\\";}s:3:\\\"FKP\\\";a:2:{i:0;s:4:\\\"FK£\\\";i:1;s:18:\\\"Libra das Malvinas\\\";}s:3:\\\"FRF\\\";a:2:{i:0;s:3:\\\"₣\\\";i:1;s:15:\\\"Franco francês\\\";}s:3:\\\"GBP\\\";a:2:{i:0;s:2:\\\"£\\\";i:1;s:26:\\\"Libra esterlina britânica\\\";}s:3:\\\"GEK\\\";a:2:{i:0;s:3:\\\"GEK\\\";i:1;s:20:\\\"Cupom Lari georgiano\\\";}s:3:\\\"GEL\\\";a:2:{i:0;s:3:\\\"GEL\\\";i:1;s:14:\\\"Lari georgiano\\\";}s:3:\\\"GHC\\\";a:2:{i:0;s:3:\\\"₵\\\";i:1;s:24:\\\"Cedi de Gana (1979-2007)\\\";}s:3:\\\"GHS\\\";a:2:{i:0;s:5:\\\"GH₵\\\";i:1;s:11:\\\"Cedi ganês\\\";}s:3:\\\"GIP\\\";a:2:{i:0;s:4:\\\"GI£\\\";i:1;s:18:\\\"Libra de Gibraltar\\\";}s:3:\\\"GMD\\\";a:2:{i:0;s:3:\\\"GMD\\\";i:1;s:17:\\\"Dalasi de Gâmbia\\\";}s:3:\\\"GNF\\\";a:2:{i:0;s:2:\\\"FG\\\";i:1;s:16:\\\"Franco de Guiné\\\";}s:3:\\\"GNS\\\";a:2:{i:0;s:3:\\\"GNS\\\";i:1;s:14:\\\"Syli da Guiné\\\";}s:3:\\\"GQE\\\";a:2:{i:0;s:3:\\\"GQE\\\";i:1;s:27:\\\"Ekwele da Guiné Equatorial\\\";}s:3:\\\"GRD\\\";a:2:{i:0;s:3:\\\"₯\\\";i:1;s:12:\\\"Dracma grego\\\";}s:3:\\\"GTQ\\\";a:2:{i:0;s:3:\\\"GTQ\\\";i:1;s:21:\\\"Quetçal da Guatemala\\\";}s:3:\\\"GWE\\\";a:2:{i:0;s:3:\\\"GWE\\\";i:1;s:27:\\\"Escudo da Guiné Portuguesa\\\";}s:3:\\\"GWP\\\";a:2:{i:0;s:3:\\\"GWP\\\";i:1;s:21:\\\"Peso da Guiné-Bissau\\\";}s:3:\\\"GYD\\\";a:2:{i:0;s:3:\\\"GY$\\\";i:1;s:16:\\\"Dólar da Guiana\\\";}s:3:\\\"HKD\\\";a:2:{i:0;s:3:\\\"HK$\\\";i:1;s:19:\\\"Dólar de Hong Kong\\\";}s:3:\\\"HNL\\\";a:2:{i:0;s:3:\\\"HNL\\\";i:1;s:19:\\\"Lempira de Honduras\\\";}s:3:\\\"HRD\\\";a:2:{i:0;s:3:\\\"HRD\\\";i:1;s:12:\\\"Dinar croata\\\";}s:3:\\\"HRK\\\";a:2:{i:0;s:2:\\\"kn\\\";i:1;s:11:\\\"Kuna croata\\\";}s:3:\\\"HTG\\\";a:2:{i:0;s:3:\\\"HTG\\\";i:1;s:14:\\\"Gurde do Haiti\\\";}s:3:\\\"HUF\\\";a:2:{i:0;s:2:\\\"Ft\\\";i:1;s:16:\\\"Forinte húngaro\\\";}s:3:\\\"IDR\\\";a:2:{i:0;s:2:\\\"Rp\\\";i:1;s:16:\\\"Rupia indonésia\\\";}s:3:\\\"IEP\\\";a:2:{i:0;s:4:\\\"IR£\\\";i:1;s:15:\\\"Libra irlandesa\\\";}s:3:\\\"ILP\\\";a:2:{i:0;s:3:\\\"I£\\\";i:1;s:15:\\\"Libra israelita\\\";}s:3:\\\"ILR\\\";a:2:{i:0;s:3:\\\"ILR\\\";i:1;s:23:\\\"Sheqel antigo israelita\\\";}s:3:\\\"ILS\\\";a:2:{i:0;s:3:\\\"₪\\\";i:1;s:21:\\\"Sheqel Novo israelita\\\";}s:3:\\\"INR\\\";a:2:{i:0;s:2:\\\"Rs\\\";i:1;s:14:\\\"Rúpia indiana\\\";}s:3:\\\"IQD\\\";a:2:{i:0;s:3:\\\"IQD\\\";i:1;s:15:\\\"Dinar iraquiano\\\";}s:3:\\\"IRR\\\";a:2:{i:0;s:3:\\\"IRR\\\";i:1;s:13:\\\"Rial iraniano\\\";}s:3:\\\"ISJ\\\";a:2:{i:0;s:3:\\\"ISJ\\\";i:1;s:22:\\\"Coroa antiga islandesa\\\";}s:3:\\\"ISK\\\";a:2:{i:0;s:3:\\\"Ikr\\\";i:1;s:15:\\\"Coroa islandesa\\\";}s:3:\\\"ITL\\\";a:2:{i:0;s:5:\\\"IT₤\\\";i:1;s:13:\\\"Lira italiana\\\";}s:3:\\\"JMD\\\";a:2:{i:0;s:2:\\\"J$\\\";i:1;s:16:\\\"Dólar jamaicano\\\";}s:3:\\\"JOD\\\";a:2:{i:0;s:2:\\\"JD\\\";i:1;s:16:\\\"Dinar jordaniano\\\";}s:3:\\\"JPY\\\";a:2:{i:0;s:4:\\\"JP¥\\\";i:1;s:13:\\\"Iene japonês\\\";}s:3:\\\"KES\\\";a:2:{i:0;s:3:\\\"Ksh\\\";i:1;s:14:\\\"Xelim queniano\\\";}s:3:\\\"KGS\\\";a:2:{i:0;s:3:\\\"KGS\\\";i:1;s:12:\\\"Som quirguiz\\\";}s:3:\\\"KHR\\\";a:2:{i:0;s:3:\\\"KHR\\\";i:1;s:14:\\\"Riel cambojano\\\";}s:3:\\\"KMF\\\";a:2:{i:0;s:2:\\\"CF\\\";i:1;s:17:\\\"Franco de Comores\\\";}s:3:\\\"KPW\\\";a:2:{i:0;s:3:\\\"KPW\\\";i:1;s:17:\\\"Won norte-coreano\\\";}s:3:\\\"KRW\\\";a:2:{i:0;s:3:\\\"₩\\\";i:1;s:15:\\\"Won sul-coreano\\\";}s:3:\\\"KWD\\\";a:2:{i:0;s:2:\\\"KD\\\";i:1;s:16:\\\"Dinar coveitiano\\\";}s:3:\\\"KYD\\\";a:2:{i:0;s:3:\\\"KY$\\\";i:1;s:23:\\\"Dólar das Ilhas Caiman\\\";}s:3:\\\"KZT\\\";a:2:{i:0;s:3:\\\"KZT\\\";i:1;s:21:\\\"Tenge do Cazaquistão\\\";}s:3:\\\"LAK\\\";a:2:{i:0;s:3:\\\"₭\\\";i:1;s:11:\\\"Kip de Laos\\\";}s:3:\\\"LBP\\\";a:2:{i:0;s:4:\\\"LB£\\\";i:1;s:14:\\\"Libra libanesa\\\";}s:3:\\\"LKR\\\";a:2:{i:0;s:4:\\\"SLRs\\\";i:1;s:18:\\\"Rupia do Sri Lanka\\\";}s:3:\\\"LRD\\\";a:2:{i:0;s:2:\\\"L$\\\";i:1;s:16:\\\"Dólar liberiano\\\";}s:3:\\\"LSL\\\";a:2:{i:0;s:3:\\\"LSL\\\";i:1;s:14:\\\"Loti do Lesoto\\\";}s:3:\\\"LTL\\\";a:2:{i:0;s:2:\\\"Lt\\\";i:1;s:12:\\\"Lita lituano\\\";}s:3:\\\"LTT\\\";a:2:{i:0;s:3:\\\"LTT\\\";i:1;s:15:\\\"Talonas lituano\\\";}s:3:\\\"LUC\\\";a:2:{i:0;s:3:\\\"LUC\\\";i:1;s:33:\\\"Franco conversível de Luxemburgo\\\";}s:3:\\\"LUF\\\";a:2:{i:0;s:3:\\\"LUF\\\";i:1;s:20:\\\"Franco luxemburguês\\\";}s:3:\\\"LUL\\\";a:2:{i:0;s:3:\\\"LUL\\\";i:1;s:31:\\\"Franco financeiro de Luxemburgo\\\";}s:3:\\\"LVL\\\";a:2:{i:0;s:2:\\\"Ls\\\";i:1;s:11:\\\"Lats letão\\\";}s:3:\\\"LVR\\\";a:2:{i:0;s:3:\\\"LVR\\\";i:1;s:12:\\\"Rublo letão\\\";}s:3:\\\"LYD\\\";a:2:{i:0;s:2:\\\"LD\\\";i:1;s:12:\\\"Dinar líbio\\\";}s:3:\\\"MAD\\\";a:2:{i:0;s:3:\\\"MAD\\\";i:1;s:17:\\\"Dirém marroquino\\\";}s:3:\\\"MAF\\\";a:2:{i:0;s:3:\\\"MAF\\\";i:1;s:17:\\\"Franco marroquino\\\";}s:3:\\\"MDL\\\";a:2:{i:0;s:3:\\\"MDL\\\";i:1;s:13:\\\"Leu moldávio\\\";}s:3:\\\"MGA\\\";a:2:{i:0;s:3:\\\"MGA\\\";i:1;s:20:\\\"Ariary de Madagascar\\\";}s:3:\\\"MGF\\\";a:2:{i:0;s:3:\\\"MGF\\\";i:1;s:20:\\\"Franco de Madagascar\\\";}s:3:\\\"MKD\\\";a:2:{i:0;s:3:\\\"MKD\\\";i:1;s:16:\\\"Dinar macedônio\\\";}s:3:\\\"MLF\\\";a:2:{i:0;s:3:\\\"MLF\\\";i:1;s:14:\\\"Franco de Mali\\\";}s:3:\\\"MMK\\\";a:2:{i:0;s:3:\\\"MMK\\\";i:1;s:15:\\\"Kyat de Mianmar\\\";}s:3:\\\"MNT\\\";a:2:{i:0;s:3:\\\"₮\\\";i:1;s:13:\\\"Tugrik mongol\\\";}s:3:\\\"MOP\\\";a:2:{i:0;s:4:\\\"MOP$\\\";i:1;s:15:\\\"Pataca macaense\\\";}s:3:\\\"MRO\\\";a:2:{i:0;s:2:\\\"UM\\\";i:1;s:22:\\\"Ouguiya da Mauritânia\\\";}s:3:\\\"MTL\\\";a:2:{i:0;s:2:\\\"Lm\\\";i:1;s:12:\\\"Lira maltesa\\\";}s:3:\\\"MTP\\\";a:2:{i:0;s:4:\\\"MT£\\\";i:1;s:13:\\\"Libra maltesa\\\";}s:3:\\\"MUR\\\";a:2:{i:0;s:4:\\\"MURs\\\";i:1;s:18:\\\"Rupia de Maurício\\\";}s:3:\\\"MVR\\\";a:2:{i:0;s:3:\\\"MVR\\\";i:1;s:25:\\\"Rupias das Ilhas Maldivas\\\";}s:3:\\\"MWK\\\";a:2:{i:0;s:3:\\\"MWK\\\";i:1;s:17:\\\"Cuacha do Maláui\\\";}s:3:\\\"MXN\\\";a:2:{i:0;s:3:\\\"MXN\\\";i:1;s:13:\\\"Peso mexicano\\\";}s:3:\\\"MXP\\\";a:2:{i:0;s:3:\\\"MX$\\\";i:1;s:31:\\\"Peso Prata mexicano (1861-1992)\\\";}s:3:\\\"MXV\\\";a:2:{i:0;s:3:\\\"MXV\\\";i:1;s:38:\\\"Unidade Mexicana de Investimento (UDI)\\\";}s:3:\\\"MYR\\\";a:2:{i:0;s:2:\\\"RM\\\";i:1;s:14:\\\"Ringgit malaio\\\";}s:3:\\\"MZE\\\";a:2:{i:0;s:3:\\\"MZE\\\";i:1;s:21:\\\"Escudo de Moçambique\\\";}s:3:\\\"MZM\\\";a:2:{i:0;s:2:\\\"Mt\\\";i:1;s:29:\\\"Metical antigo de Moçambique\\\";}s:3:\\\"MZN\\\";a:2:{i:0;s:3:\\\"MTn\\\";i:1;s:22:\\\"Metical do Moçambique\\\";}s:3:\\\"NAD\\\";a:2:{i:0;s:2:\\\"N$\\\";i:1;s:18:\\\"Dólar da Namíbia\\\";}s:3:\\\"NGN\\\";a:2:{i:0;s:3:\\\"₦\\\";i:1;s:15:\\\"Naira nigeriana\\\";}s:3:\\\"NIC\\\";a:2:{i:0;s:3:\\\"NIC\\\";i:1;s:21:\\\"Córdoba nicaraguense\\\";}s:3:\\\"NIO\\\";a:2:{i:0;s:2:\\\"C$\\\";i:1;s:26:\\\"Córdoba Ouro nicaraguense\\\";}s:3:\\\"NLG\\\";a:2:{i:0;s:2:\\\"fl\\\";i:1;s:16:\\\"Florim holandês\\\";}s:3:\\\"NOK\\\";a:2:{i:0;s:3:\\\"Nkr\\\";i:1;s:16:\\\"Coroa norueguesa\\\";}s:3:\\\"NPR\\\";a:2:{i:0;s:4:\\\"NPRs\\\";i:1;s:14:\\\"Rupia nepalesa\\\";}s:3:\\\"NZD\\\";a:2:{i:0;s:3:\\\"NZ$\\\";i:1;s:24:\\\"Dólar da Nova Zelândia\\\";}s:3:\\\"OMR\\\";a:2:{i:0;s:3:\\\"OMR\\\";i:1;s:12:\\\"Rial de Omã\\\";}s:3:\\\"PAB\\\";a:2:{i:0;s:3:\\\"B/.\\\";i:1;s:16:\\\"Balboa panamenho\\\";}s:3:\\\"PEI\\\";a:2:{i:0;s:3:\\\"I/.\\\";i:1;s:12:\\\"Inti peruano\\\";}s:3:\\\"PEN\\\";a:2:{i:0;s:3:\\\"S/.\\\";i:1;s:16:\\\"Sol Novo peruano\\\";}s:3:\\\"PES\\\";a:2:{i:0;s:3:\\\"PES\\\";i:1;s:11:\\\"Sol peruano\\\";}s:3:\\\"PGK\\\";a:2:{i:0;s:3:\\\"PGK\\\";i:1;s:25:\\\"Kina da Papua-Nova Guiné\\\";}s:3:\\\"PHP\\\";a:2:{i:0;s:3:\\\"₱\\\";i:1;s:13:\\\"Peso filipino\\\";}s:3:\\\"PKR\\\";a:2:{i:0;s:4:\\\"PKRs\\\";i:1;s:18:\\\"Rupia paquistanesa\\\";}s:3:\\\"PLN\\\";a:2:{i:0;s:3:\\\"zł\\\";i:1;s:14:\\\"Zloti polonês\\\";}s:3:\\\"PLZ\\\";a:2:{i:0;s:3:\\\"PLZ\\\";i:1;s:26:\\\"Zloti polonês (1950-1995)\\\";}s:3:\\\"PTE\\\";a:2:{i:0;s:4:\\\"Esc.\\\";i:1;s:17:\\\"Escudo português\\\";}s:3:\\\"PYG\\\";a:2:{i:0;s:3:\\\"₲\\\";i:1;s:17:\\\"Guarani paraguaio\\\";}s:3:\\\"QAR\\\";a:2:{i:0;s:2:\\\"QR\\\";i:1;s:14:\\\"Rial catariano\\\";}s:3:\\\"RHD\\\";a:2:{i:0;s:3:\\\"RH$\\\";i:1;s:16:\\\"Dólar rodesiano\\\";}s:3:\\\"ROL\\\";a:2:{i:0;s:3:\\\"ROL\\\";i:1;s:17:\\\"Leu romeno antigo\\\";}s:3:\\\"RON\\\";a:2:{i:0;s:3:\\\"RON\\\";i:1;s:10:\\\"Leu romeno\\\";}s:3:\\\"RSD\\\";a:2:{i:0;s:4:\\\"din.\\\";i:1;s:13:\\\"Dinar sérvio\\\";}s:3:\\\"RUB\\\";a:2:{i:0;s:3:\\\"RUB\\\";i:1;s:11:\\\"Rublo russo\\\";}s:3:\\\"RUR\\\";a:2:{i:0;s:3:\\\"RUR\\\";i:1;s:23:\\\"Rublo russo (1991-1998)\\\";}s:3:\\\"RWF\\\";a:2:{i:0;s:3:\\\"RWF\\\";i:1;s:15:\\\"Franco ruandês\\\";}s:3:\\\"SAR\\\";a:2:{i:0;s:2:\\\"SR\\\";i:1;s:12:\\\"Rial saudita\\\";}s:3:\\\"SBD\\\";a:2:{i:0;s:3:\\\"SI$\\\";i:1;s:25:\\\"Dólar das Ilhas Salomão\\\";}s:3:\\\"SCR\\\";a:2:{i:0;s:3:\\\"SRe\\\";i:1;s:20:\\\"Rupia das Seychelles\\\";}s:3:\\\"SDD\\\";a:2:{i:0;s:3:\\\"LSd\\\";i:1;s:14:\\\"Dinar sudanês\\\";}s:3:\\\"SDG\\\";a:2:{i:0;s:3:\\\"SDG\\\";i:1;s:14:\\\"Libra sudanesa\\\";}s:3:\\\"SDP\\\";a:2:{i:0;s:3:\\\"SDP\\\";i:1;s:21:\\\"Libra sudanesa antiga\\\";}s:3:\\\"SEK\\\";a:2:{i:0;s:3:\\\"Skr\\\";i:1;s:11:\\\"Coroa sueca\\\";}s:3:\\\"SGD\\\";a:2:{i:0;s:2:\\\"S$\\\";i:1;s:19:\\\"Dólar de Cingapura\\\";}s:3:\\\"SHP\\\";a:2:{i:0;s:4:\\\"SH£\\\";i:1;s:21:\\\"Libra de Santa Helena\\\";}s:3:\\\"SIT\\\";a:2:{i:0;s:3:\\\"SIT\\\";i:1;s:19:\\\"Tolar Bons esloveno\\\";}s:3:\\\"SKK\\\";a:2:{i:0;s:2:\\\"Sk\\\";i:1;s:14:\\\"Coroa eslovaca\\\";}s:3:\\\"SLL\\\";a:2:{i:0;s:2:\\\"Le\\\";i:1;s:19:\\\"Leone de Serra Leoa\\\";}s:3:\\\"SOS\\\";a:2:{i:0;s:3:\\\"Ssh\\\";i:1;s:12:\\\"Xelim somali\\\";}s:3:\\\"SRD\\\";a:2:{i:0;s:3:\\\"SR$\\\";i:1;s:18:\\\"Dólar do Suriname\\\";}s:3:\\\"SRG\\\";a:2:{i:0;s:2:\\\"Sf\\\";i:1;s:18:\\\"Florim do Suriname\\\";}s:3:\\\"STD\\\";a:2:{i:0;s:2:\\\"Db\\\";i:1;s:31:\\\"Dobra de São Tomé e Príncipe\\\";}s:3:\\\"SUR\\\";a:2:{i:0;s:3:\\\"SUR\\\";i:1;s:16:\\\"Rublo soviético\\\";}s:3:\\\"SVC\\\";a:2:{i:0;s:5:\\\"SV₡\\\";i:1;s:18:\\\"Colom salvadorenho\\\";}s:3:\\\"SYP\\\";a:2:{i:0;s:4:\\\"SY£\\\";i:1;s:12:\\\"Libra síria\\\";}s:3:\\\"SZL\\\";a:2:{i:0;s:3:\\\"SZL\\\";i:1;s:25:\\\"Lilangeni da Suazilândia\\\";}s:3:\\\"THB\\\";a:2:{i:0;s:3:\\\"฿\\\";i:1;s:15:\\\"Baht tailandês\\\";}s:3:\\\"TJR\\\";a:2:{i:0;s:3:\\\"TJR\\\";i:1;s:22:\\\"Rublo do Tadjiquistão\\\";}s:3:\\\"TJS\\\";a:2:{i:0;s:3:\\\"TJS\\\";i:1;s:15:\\\"Somoni tadjique\\\";}s:3:\\\"TMM\\\";a:2:{i:0;s:3:\\\"TMM\\\";i:1;s:23:\\\"Manat do Turcomenistão\\\";}s:3:\\\"TND\\\";a:2:{i:0;s:2:\\\"DT\\\";i:1;s:15:\\\"Dinar tunisiano\\\";}s:3:\\\"TOP\\\";a:2:{i:0;s:2:\\\"T$\\\";i:1;s:17:\\\"Paʻanga de Tonga\\\";}s:3:\\\"TPE\\\";a:2:{i:0;s:3:\\\"TPE\\\";i:1;s:16:\\\"Escudo timorense\\\";}s:3:\\\"TRL\\\";a:2:{i:0;s:3:\\\"TRL\\\";i:1;s:17:\\\"Lira turca antiga\\\";}s:3:\\\"TRY\\\";a:2:{i:0;s:2:\\\"TL\\\";i:1;s:10:\\\"Lira turca\\\";}s:3:\\\"TTD\\\";a:2:{i:0;s:3:\\\"TT$\\\";i:1;s:27:\\\"Dólar de Trinidad e Tobago\\\";}s:3:\\\"TWD\\\";a:2:{i:0;s:3:\\\"NT$\\\";i:1;s:21:\\\"Dólar Novo de Taiwan\\\";}s:3:\\\"TZS\\\";a:2:{i:0;s:3:\\\"TSh\\\";i:1;s:18:\\\"Xelim da Tanzânia\\\";}s:3:\\\"UAH\\\";a:2:{i:0;s:3:\\\"₴\\\";i:1;s:17:\\\"Hryvnia ucraniano\\\";}s:3:\\\"UAK\\\";a:2:{i:0;s:3:\\\"UAK\\\";i:1;s:21:\\\"Karbovanetz ucraniano\\\";}s:3:\\\"UGS\\\";a:2:{i:0;s:3:\\\"UGS\\\";i:1;s:27:\\\"Xelim ugandense (1966-1987)\\\";}s:3:\\\"UGX\\\";a:2:{i:0;s:3:\\\"USh\\\";i:1;s:15:\\\"Xelim ugandense\\\";}s:3:\\\"USD\\\";a:2:{i:0;s:3:\\\"US$\\\";i:1;s:22:\\\"Dólar norte-americano\\\";}s:3:\\\"USN\\\";a:2:{i:0;s:3:\\\"USN\\\";i:1;s:37:\\\"Dólar norte-americano (Dia seguinte)\\\";}s:3:\\\"USS\\\";a:2:{i:0;s:3:\\\"USS\\\";i:1;s:34:\\\"Dólar norte-americano (Mesmo dia)\\\";}s:3:\\\"UYI\\\";a:2:{i:0;s:3:\\\"UYI\\\";i:1;s:35:\\\"Peso uruguaio en unidades indexadas\\\";}s:3:\\\"UYP\\\";a:2:{i:0;s:3:\\\"UYP\\\";i:1;s:25:\\\"Peso uruguaio (1975-1993)\\\";}s:3:\\\"UYU\\\";a:2:{i:0;s:2:\\\"$U\\\";i:1;s:13:\\\"Peso uruguaio\\\";}s:3:\\\"UZS\\\";a:2:{i:0;s:3:\\\"UZS\\\";i:1;s:19:\\\"Sum do Usbequistão\\\";}s:3:\\\"VEB\\\";a:2:{i:0;s:3:\\\"VEB\\\";i:1;s:20:\\\"Bolívar venezuelano\\\";}s:3:\\\"VEF\\\";a:2:{i:0;s:5:\\\"Bs.F.\\\";i:1;s:27:\\\"Bolívar v enezuelano forte\\\";}s:3:\\\"VND\\\";a:2:{i:0;s:3:\\\"₫\\\";i:1;s:15:\\\"Dong vietnamita\\\";}s:3:\\\"VUV\\\";a:2:{i:0;s:2:\\\"VT\\\";i:1;s:15:\\\"Vatu de Vanuatu\\\";}s:3:\\\"WST\\\";a:2:{i:0;s:3:\\\"WS$\\\";i:1;s:12:\\\"Tala samoano\\\";}s:3:\\\"XAF\\\";a:2:{i:0;s:4:\\\"FCFA\\\";i:1;s:15:\\\"Franco CFA BEAC\\\";}s:3:\\\"XAG\\\";a:2:{i:0;s:3:\\\"XAG\\\";i:1;s:5:\\\"Prata\\\";}s:3:\\\"XAU\\\";a:2:{i:0;s:3:\\\"XAU\\\";i:1;s:4:\\\"Ouro\\\";}s:3:\\\"XBA\\\";a:2:{i:0;s:3:\\\"XBA\\\";i:1;s:25:\\\"Unidade Composta Europeia\\\";}s:3:\\\"XBB\\\";a:2:{i:0;s:3:\\\"XBB\\\";i:1;s:27:\\\"Unidade Monetária Europeia\\\";}s:3:\\\"XBC\\\";a:2:{i:0;s:3:\\\"XBC\\\";i:1;s:31:\\\"Unidade de Conta Europeia (XBC)\\\";}s:3:\\\"XBD\\\";a:2:{i:0;s:3:\\\"XBD\\\";i:1;s:31:\\\"Unidade de Conta Europeia (XBD)\\\";}s:3:\\\"XCD\\\";a:2:{i:0;s:3:\\\"EC$\\\";i:1;s:25:\\\"Dólar do Caribe Oriental\\\";}s:3:\\\"XDR\\\";a:2:{i:0;s:3:\\\"XDR\\\";i:1;s:26:\\\"Direitos Especiais de Giro\\\";}s:3:\\\"XEU\\\";a:2:{i:0;s:3:\\\"XEU\\\";i:1;s:25:\\\"Unidade de Moeda Europeia\\\";}s:3:\\\"XFO\\\";a:2:{i:0;s:3:\\\"XFO\\\";i:1;s:20:\\\"Franco-ouro francês\\\";}s:3:\\\"XFU\\\";a:2:{i:0;s:3:\\\"XFU\\\";i:1;s:19:\\\"Franco UIC francês\\\";}s:3:\\\"XOF\\\";a:2:{i:0;s:3:\\\"CFA\\\";i:1;s:16:\\\"Franco CFA BCEAO\\\";}s:3:\\\"XPD\\\";a:2:{i:0;s:3:\\\"XPD\\\";i:1;s:8:\\\"Paládio\\\";}s:3:\\\"XPF\\\";a:2:{i:0;s:4:\\\"CFPF\\\";i:1;s:10:\\\"Franco CFP\\\";}s:3:\\\"XPT\\\";a:2:{i:0;s:3:\\\"XPT\\\";i:1;s:7:\\\"Platina\\\";}s:3:\\\"XRE\\\";a:2:{i:0;s:3:\\\"XRE\\\";i:1;s:12:\\\"Fundos RINET\\\";}s:3:\\\"XTS\\\";a:2:{i:0;s:3:\\\"XTS\\\";i:1;s:25:\\\"Código de Moeda de Teste\\\";}s:3:\\\"XXX\\\";a:2:{i:0;s:3:\\\"XXX\\\";i:1;s:31:\\\"Moeda Desconhecida ou Inválida\\\";}s:3:\\\"YDD\\\";a:2:{i:0;s:3:\\\"YDD\\\";i:1;s:14:\\\"Dinar iemenita\\\";}s:3:\\\"YER\\\";a:2:{i:0;s:2:\\\"YR\\\";i:1;s:13:\\\"Rial iemenita\\\";}s:3:\\\"YUD\\\";a:2:{i:0;s:3:\\\"YUD\\\";i:1;s:21:\\\"Dinar forte iugoslavo\\\";}s:3:\\\"YUM\\\";a:2:{i:0;s:3:\\\"YUM\\\";i:1;s:21:\\\"Dinar noviy iugoslavo\\\";}s:3:\\\"YUN\\\";a:2:{i:0;s:3:\\\"YUN\\\";i:1;s:28:\\\"Dinar conversível iugoslavo\\\";}s:3:\\\"ZAL\\\";a:2:{i:0;s:3:\\\"ZAL\\\";i:1;s:30:\\\"Rand sul-africano (financeiro)\\\";}s:3:\\\"ZAR\\\";a:2:{i:0;s:1:\\\"R\\\";i:1;s:17:\\\"Rand sul-africano\\\";}s:3:\\\"ZMK\\\";a:2:{i:0;s:2:\\\"ZK\\\";i:1;s:15:\\\"Cuacha zambiano\\\";}s:3:\\\"ZRN\\\";a:2:{i:0;s:2:\\\"NZ\\\";i:1;s:19:\\\"Zaire Novo zairense\\\";}s:3:\\\"ZRZ\\\";a:2:{i:0;s:3:\\\"ZRZ\\\";i:1;s:14:\\\"Zaire zairense\\\";}s:3:\\\"ZWD\\\";a:2:{i:0;s:2:\\\"Z$\\\";i:1;s:19:\\\"Dólar do Zimbábue\\\";}}s:15:\\\"CurrencyPlurals\\\";a:271:{s:3:\\\"ADP\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Peseta de Andorra\\\";s:5:\\\"other\\\";s:18:\\\"Pesetas de Andorra\\\";}s:3:\\\"AED\\\";a:2:{s:3:\\\"one\\\";s:34:\\\"Dirrã dos Emirados Árabes Unidos\\\";s:5:\\\"other\\\";s:35:\\\"Dirrãs dos Emirados Árabes Unidos\\\";}s:3:\\\"AFA\\\";a:2:{s:3:\\\"one\\\";s:29:\\\"Afegane do Afeganistão (AFA)\\\";s:5:\\\"other\\\";s:30:\\\"Afeganes do Afeganistão (AFA)\\\";}s:3:\\\"AFN\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Afegane do Afeganistão\\\";s:5:\\\"other\\\";s:24:\\\"Afeganes do Afeganistão\\\";}s:3:\\\"ALL\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Lek albanês\\\";s:5:\\\"other\\\";s:14:\\\"Leks albaneses\\\";}s:3:\\\"AMD\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Dram armênio\\\";s:5:\\\"other\\\";s:15:\\\"Drams armênios\\\";}s:3:\\\"ANG\\\";a:2:{s:3:\\\"one\\\";s:30:\\\"Florim das Antilhas Holandesas\\\";s:5:\\\"other\\\";s:31:\\\"Florins das Antilhas Holandesas\\\";}s:3:\\\"AOA\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Kwanza angolano\\\";s:5:\\\"other\\\";s:17:\\\"Kwanzas angolanos\\\";}s:3:\\\"AOK\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Kwanza angolano (AOK)\\\";s:5:\\\"other\\\";s:23:\\\"Kwanzas angolanos (AOK)\\\";}s:3:\\\"AON\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Novo kwanza angolano (AON)\\\";s:5:\\\"other\\\";s:29:\\\"Novos kwanzas angolanos (AON)\\\";}s:3:\\\"AOR\\\";a:2:{s:3:\\\"one\\\";s:32:\\\"Kwanza angolano reajustado (AOR)\\\";s:5:\\\"other\\\";s:35:\\\"Kwanzas angolanos reajustados (AOR)\\\";}s:3:\\\"ARA\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Austral argentino\\\";s:5:\\\"other\\\";s:19:\\\"Austrais argentinos\\\";}s:3:\\\"ARP\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Peso argentino (ARP)\\\";s:5:\\\"other\\\";s:22:\\\"Pesos argentinos (ARP)\\\";}s:3:\\\"ARS\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Peso argentino\\\";s:5:\\\"other\\\";s:16:\\\"Pesos argentinos\\\";}s:3:\\\"ATS\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Schilling australiano\\\";s:5:\\\"other\\\";s:23:\\\"Schillings australianos\\\";}s:3:\\\"AUD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar australiano\\\";s:5:\\\"other\\\";s:21:\\\"Dólares australianos\\\";}s:3:\\\"AWG\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Florim de Aruba\\\";s:5:\\\"other\\\";s:16:\\\"Florins de Aruba\\\";}s:3:\\\"AZM\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Manat do Azeibaijão (AZM)\\\";s:5:\\\"other\\\";s:27:\\\"Manats do Azeibaijão (AZM)\\\";}s:3:\\\"AZN\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Manat do Azeibaijão\\\";s:5:\\\"other\\\";s:21:\\\"Manats do Azeibaijão\\\";}s:3:\\\"BAD\\\";a:2:{s:3:\\\"one\\\";s:28:\\\"Dinar da Bósnia Herzegovina\\\";s:5:\\\"other\\\";s:30:\\\"Dinares da Bósnia Herzegovina\\\";}s:3:\\\"BAM\\\";a:2:{s:3:\\\"one\\\";s:41:\\\"Marca conversível da Bósnia Herzegovina\\\";s:5:\\\"other\\\";s:43:\\\"Marcas conversíveis da Bósnia Herzegovina\\\";}s:3:\\\"BBD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar de Barbados\\\";s:5:\\\"other\\\";s:20:\\\"Dólares de Barbados\\\";}s:3:\\\"BDT\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Taka de Bangladesh\\\";s:5:\\\"other\\\";s:19:\\\"Takas de Bangladesh\\\";}s:3:\\\"BEC\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Franco belga (conversível)\\\";s:5:\\\"other\\\";s:30:\\\"Francos belgas (conversíveis)\\\";}s:3:\\\"BEF\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Franco belga\\\";s:5:\\\"other\\\";s:14:\\\"Francos belgas\\\";}s:3:\\\"BEL\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Franco belga (financeiro)\\\";s:5:\\\"other\\\";s:28:\\\"Francos belgas (financeiros)\\\";}s:3:\\\"BGL\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Lev forte búlgaro\\\";s:5:\\\"other\\\";s:21:\\\"Levs fortes búlgaros\\\";}s:3:\\\"BGN\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Lev búlgaro\\\";s:5:\\\"other\\\";s:14:\\\"Levs búlgaros\\\";}s:3:\\\"BHD\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Dinar bareinita\\\";s:5:\\\"other\\\";s:18:\\\"Dinares bareinitas\\\";}s:3:\\\"BIF\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Franco burundiano\\\";s:5:\\\"other\\\";s:19:\\\"Francos burundianos\\\";}s:3:\\\"BMD\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Dólar bermudense\\\";s:5:\\\"other\\\";s:20:\\\"Dólares bermudenses\\\";}s:3:\\\"BND\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Dólar bruneano\\\";s:5:\\\"other\\\";s:18:\\\"Dólares bruneanos\\\";}s:3:\\\"BOB\\\";a:2:{s:3:\\\"one\\\";s:9:\\\"Boliviano\\\";s:5:\\\"other\\\";s:10:\\\"Bolivianos\\\";}s:3:\\\"BOP\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Peso boliviano\\\";s:5:\\\"other\\\";s:16:\\\"Pesos bolivianos\\\";}s:3:\\\"BOV\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Mvdol boliviano\\\";s:5:\\\"other\\\";s:17:\\\"Mvdols bolivianos\\\";}s:3:\\\"BRB\\\";a:2:{s:3:\\\"one\\\";s:30:\\\"Cruzeiro novo brasileiro (BRB)\\\";s:5:\\\"other\\\";s:33:\\\"Cruzeiros novos brasileiros (BRB)\\\";}s:3:\\\"BRC\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Cruzado brasileiro\\\";s:5:\\\"other\\\";s:20:\\\"Cruzados brasileiros\\\";}s:3:\\\"BRE\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Cruzeiro brasileiro (BRE)\\\";s:5:\\\"other\\\";s:27:\\\"Cruzeiros brasileiros (BRE)\\\";}s:3:\\\"BRL\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Real brasileiro\\\";s:5:\\\"other\\\";s:17:\\\"Reais brasileiros\\\";}s:3:\\\"BRN\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Cruzado novo brasileiro\\\";s:5:\\\"other\\\";s:26:\\\"Cruzados novos brasileiros\\\";}s:3:\\\"BRR\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Cruzeiro brasileiro\\\";s:5:\\\"other\\\";s:21:\\\"Cruzeiros brasileiros\\\";}s:3:\\\"BSD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar de Bahamian\\\";s:5:\\\"other\\\";s:20:\\\"Dólares de Bahamian\\\";}s:3:\\\"BTN\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Ngultrum butanês\\\";s:5:\\\"other\\\";s:19:\\\"Ngultruns butaneses\\\";}s:3:\\\"BUK\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Kyat burmês\\\";s:5:\\\"other\\\";s:14:\\\"Kyats burmeses\\\";}s:3:\\\"BWP\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Pula de Botsuana\\\";s:5:\\\"other\\\";s:17:\\\"Pulas de Botsuana\\\";}s:3:\\\"BYB\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Novo rublo bielorusso (BYB)\\\";s:5:\\\"other\\\";s:30:\\\"Novos rublos bielorussos (BYB)\\\";}s:3:\\\"BYR\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Rublo bielorusso\\\";s:5:\\\"other\\\";s:18:\\\"Rublos bielorussos\\\";}s:3:\\\"BZD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar belizenho\\\";s:5:\\\"other\\\";s:19:\\\"Dólares belizenhos\\\";}s:3:\\\"CAD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar canadense\\\";s:5:\\\"other\\\";s:19:\\\"Dólares canadenses\\\";}s:3:\\\"CDF\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Franco congolês\\\";s:5:\\\"other\\\";s:18:\\\"Francos congoleses\\\";}s:3:\\\"CHE\\\";a:2:{s:3:\\\"one\\\";s:8:\\\"Euro WIR\\\";s:5:\\\"other\\\";s:9:\\\"Euros WIR\\\";}s:3:\\\"CHF\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Franco suíço\\\";s:5:\\\"other\\\";s:16:\\\"Francos suíços\\\";}s:3:\\\"CHW\\\";a:2:{s:3:\\\"one\\\";s:10:\\\"Franco WIR\\\";s:5:\\\"other\\\";s:11:\\\"Francos WIR\\\";}s:3:\\\"CLF\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Unidade de fomento chilena\\\";s:5:\\\"other\\\";s:28:\\\"Unidades de fomento chilenas\\\";}s:3:\\\"CLP\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Peso chileno\\\";s:5:\\\"other\\\";s:14:\\\"Pesos chilenos\\\";}s:3:\\\"CNY\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Yuan chinês\\\";s:5:\\\"other\\\";s:14:\\\"Yuans chineses\\\";}s:3:\\\"COP\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Peso colombiano\\\";s:5:\\\"other\\\";s:17:\\\"Pesos colombianos\\\";}s:3:\\\"COU\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Unidade de valor real\\\";s:5:\\\"other\\\";s:22:\\\"Unidades de valor real\\\";}s:3:\\\"CRC\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Colon costa-riquenho\\\";s:5:\\\"other\\\";s:22:\\\"Colons costa-riquenhos\\\";}s:3:\\\"CSD\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Dinar antigo da Sérvia\\\";s:5:\\\"other\\\";s:26:\\\"Dinares antigos da Sérvia\\\";}s:3:\\\"CSK\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Coroa forte tchecoslovaca\\\";s:5:\\\"other\\\";s:28:\\\"Coroas fortes tchecoslovacas\\\";}s:3:\\\"CUP\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Peso cubano\\\";s:5:\\\"other\\\";s:13:\\\"Pesos cubanos\\\";}s:3:\\\"CVE\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Escudo cabo-verdiano\\\";s:5:\\\"other\\\";s:22:\\\"Escudos cabo-verdianos\\\";}s:3:\\\"CYP\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Libra cipriota\\\";s:5:\\\"other\\\";s:16:\\\"Libras cipriotas\\\";}s:3:\\\"CZK\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Coroa da República Tcheca\\\";s:5:\\\"other\\\";s:27:\\\"Coroas da República Tcheca\\\";}s:3:\\\"DDM\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Marco da Alemanha Oriental\\\";s:5:\\\"other\\\";s:27:\\\"Marcos da Alemanha Oriental\\\";}s:3:\\\"DEM\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Marco alemão\\\";s:5:\\\"other\\\";s:15:\\\"Marcos alemães\\\";}s:3:\\\"DJF\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Franco djibutiense\\\";s:5:\\\"other\\\";s:20:\\\"Francos djibutienses\\\";}s:3:\\\"DKK\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Coroa dinamarquesa\\\";s:5:\\\"other\\\";s:20:\\\"Coroas dinamarquesas\\\";}s:3:\\\"DOP\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Peso dominicano\\\";s:5:\\\"other\\\";s:17:\\\"Pesos dominicanos\\\";}s:3:\\\"DZD\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Dinar argelino\\\";s:5:\\\"other\\\";s:17:\\\"Dinares argelinos\\\";}s:3:\\\"ECS\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Sucre equatoriano\\\";s:5:\\\"other\\\";s:19:\\\"Sucres equatorianos\\\";}s:3:\\\"ECV\\\";a:2:{s:3:\\\"one\\\";s:44:\\\"Unidade de valor constante equatoriana (UVC)\\\";s:5:\\\"other\\\";s:46:\\\"Unidades de valor constante equatorianas (UVC)\\\";}s:3:\\\"EEK\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Coroa estoniana\\\";s:5:\\\"other\\\";s:17:\\\"Coroas estonianas\\\";}s:3:\\\"EGP\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Libra egípcia\\\";s:5:\\\"other\\\";s:16:\\\"Libras egípcias\\\";}s:3:\\\"ERN\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Nakfa da Eritreia\\\";s:5:\\\"other\\\";s:18:\\\"Nakfas da Eritreia\\\";}s:3:\\\"ESA\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Peseta espanhola (conta A)\\\";s:5:\\\"other\\\";s:28:\\\"Pesetas espanholas (conta A)\\\";}s:3:\\\"ESB\\\";a:2:{s:3:\\\"one\\\";s:37:\\\"Peseta espanhola (conta conversível)\\\";s:5:\\\"other\\\";s:39:\\\"Pesetas espanholas (conta conversível)\\\";}s:3:\\\"ESP\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Peseta espanhola\\\";s:5:\\\"other\\\";s:18:\\\"Pesetas espanholas\\\";}s:3:\\\"ETB\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Birr etíope\\\";s:5:\\\"other\\\";s:14:\\\"Birrs etíopes\\\";}s:3:\\\"EUR\\\";a:2:{s:3:\\\"one\\\";s:4:\\\"euro\\\";s:5:\\\"other\\\";s:5:\\\"euros\\\";}s:3:\\\"FIM\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Marco finlandês\\\";s:5:\\\"other\\\";s:18:\\\"Marcos finlandeses\\\";}s:3:\\\"FJD\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Dólar de Fiji\\\";s:5:\\\"other\\\";s:16:\\\"Dólares de Fiji\\\";}s:3:\\\"FKP\\\";a:2:{s:3:\\\"one\\\";s:24:\\\"Libra das Ilhas Falkland\\\";s:5:\\\"other\\\";s:25:\\\"Libras das Ilhas Falkland\\\";}s:3:\\\"FRF\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Franco francês\\\";s:5:\\\"other\\\";s:17:\\\"Francos franceses\\\";}s:3:\\\"GBP\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Libra esterlina britânica\\\";s:5:\\\"other\\\";s:29:\\\"Libras esterlinas britânicas\\\";}s:3:\\\"GEK\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Kupon larit da Geórgia\\\";s:5:\\\"other\\\";s:24:\\\"Kupon larits da Geórgia\\\";}s:3:\\\"GEL\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Lari da Geórgia\\\";s:5:\\\"other\\\";s:17:\\\"Laris da Geórgia\\\";}s:3:\\\"GHC\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Cedi de Gana (GHC)\\\";s:5:\\\"other\\\";s:19:\\\"Cedis de Gana (GHC)\\\";}s:3:\\\"GHS\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Cedi de Gana\\\";s:5:\\\"other\\\";s:13:\\\"Cedis de Gana\\\";}s:3:\\\"GIP\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Libra de Gibraltar\\\";s:5:\\\"other\\\";s:19:\\\"Libras de Gibraltar\\\";}s:3:\\\"GMD\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Dalasi da Gâmbia\\\";s:5:\\\"other\\\";s:18:\\\"Dalasis da Gâmbia\\\";}s:3:\\\"GNF\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Franco guineano\\\";s:5:\\\"other\\\";s:17:\\\"Francos guineanos\\\";}s:3:\\\"GNS\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Syli guineano\\\";s:5:\\\"other\\\";s:15:\\\"Sylis guineanos\\\";}s:3:\\\"GQE\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Ekwele da Guiné Equatorial\\\";s:5:\\\"other\\\";s:28:\\\"Ekweles da Guiné Equatorial\\\";}s:3:\\\"GRD\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Dracma grego\\\";s:5:\\\"other\\\";s:14:\\\"Dracmas gregos\\\";}s:3:\\\"GTQ\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Quetzal da Guatemala\\\";s:5:\\\"other\\\";s:22:\\\"Quetzales da Guatemala\\\";}s:3:\\\"GWE\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Escudo da Guiné Portuguesa\\\";s:5:\\\"other\\\";s:29:\\\"Escudos da Guinéa Portuguesa\\\";}s:3:\\\"GWP\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Peso de Guiné-Bissau\\\";s:5:\\\"other\\\";s:22:\\\"Pesos de Guiné-Bissau\\\";}s:3:\\\"GYD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar da Guiana\\\";s:5:\\\"other\\\";s:18:\\\"Dólares da Guiana\\\";}s:3:\\\"HKD\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Dólar de Hong Kong\\\";s:5:\\\"other\\\";s:21:\\\"Dólares de Hong Kong\\\";}s:3:\\\"HNL\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Lempira de Honduras\\\";s:5:\\\"other\\\";s:20:\\\"Lempiras de Honduras\\\";}s:3:\\\"HRD\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Dinar croata\\\";s:5:\\\"other\\\";s:15:\\\"Dinares croatas\\\";}s:3:\\\"HRK\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Kuna croata\\\";s:5:\\\"other\\\";s:13:\\\"Kunas croatas\\\";}s:3:\\\"HTG\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Gourde haitiano\\\";s:5:\\\"other\\\";s:17:\\\"Gourdes haitianos\\\";}s:3:\\\"HUF\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Forint húngaro\\\";s:5:\\\"other\\\";s:17:\\\"Forints húngaros\\\";}s:3:\\\"IDR\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Rúpia da Indonésia\\\";s:5:\\\"other\\\";s:21:\\\"Rúpias da Indonésia\\\";}s:3:\\\"IEP\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Libra irlandesa\\\";s:5:\\\"other\\\";s:17:\\\"Libras irlandesas\\\";}s:3:\\\"ILP\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Libra israelita\\\";s:5:\\\"other\\\";s:17:\\\"Libras israelitas\\\";}s:3:\\\"ILR\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Sheqel antigo israelita\\\";s:5:\\\"other\\\";s:26:\\\"Sheqels antigos israelitas\\\";}s:3:\\\"ILS\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Sheqel novo israelita\\\";s:5:\\\"other\\\";s:23:\\\"Sheqels novo israelitas\\\";}s:3:\\\"INR\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Rúpia indiana\\\";s:5:\\\"other\\\";s:16:\\\"Rúpias indianas\\\";}s:3:\\\"IQD\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Dinar iraquiano\\\";s:5:\\\"other\\\";s:18:\\\"Dinares iraquianos\\\";}s:3:\\\"IRR\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Rial iraniano\\\";s:5:\\\"other\\\";s:16:\\\"Riales iranianos\\\";}s:3:\\\"ISJ\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Coroa antiga islandesa\\\";s:5:\\\"other\\\";s:25:\\\"Coroas antigas islandesas\\\";}s:3:\\\"ISK\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Coroa islandesa\\\";s:5:\\\"other\\\";s:17:\\\"Coroas islandesas\\\";}s:3:\\\"ITL\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Lira italiana\\\";s:5:\\\"other\\\";s:15:\\\"Liras italianas\\\";}s:3:\\\"JMD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar jamaicano\\\";s:5:\\\"other\\\";s:19:\\\"Dólares jamaicanos\\\";}s:3:\\\"JOD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dinar jordaniano\\\";s:5:\\\"other\\\";s:19:\\\"Dinares jordanianos\\\";}s:3:\\\"JPY\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Iene japonês\\\";s:5:\\\"other\\\";s:15:\\\"Ienes japoneses\\\";}s:3:\\\"KES\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Shilling queniano\\\";s:5:\\\"other\\\";s:19:\\\"Shillings quenianos\\\";}s:3:\\\"KGS\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Som do Quirguistão\\\";s:5:\\\"other\\\";s:20:\\\"Soms do Quirguistão\\\";}s:3:\\\"KHR\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Riel cambojano\\\";s:5:\\\"other\\\";s:17:\\\"Rieles cambojanos\\\";}s:3:\\\"KMF\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Franco de Comoro\\\";s:5:\\\"other\\\";s:17:\\\"Francos de Comoro\\\";}s:3:\\\"KPW\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Won norte-coreano\\\";s:5:\\\"other\\\";s:19:\\\"Wons norte-coreanos\\\";}s:3:\\\"KRW\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Won sul-coreano\\\";s:5:\\\"other\\\";s:17:\\\"Wons sul-coreanos\\\";}s:3:\\\"KWD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dinar kuwaitiano\\\";s:5:\\\"other\\\";s:19:\\\"Dinares kuwaitianos\\\";}s:3:\\\"KYD\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Dólar das Ilhas Cayman\\\";s:5:\\\"other\\\";s:25:\\\"Dólares das Ilhas Caiman\\\";}s:3:\\\"KZT\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Tenge do Cazaquistão\\\";s:5:\\\"other\\\";s:22:\\\"Tenges do Cazaquistão\\\";}s:3:\\\"LAK\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Kip do Laos\\\";s:5:\\\"other\\\";s:12:\\\"Kips do Laos\\\";}s:3:\\\"LBP\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Libra libanesa\\\";s:5:\\\"other\\\";s:16:\\\"Libras libanesas\\\";}s:3:\\\"LKR\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Rúpia do Sri Lanka\\\";s:5:\\\"other\\\";s:20:\\\"Rúpias do Sri Lanka\\\";}s:3:\\\"LRD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar da Libéria\\\";s:5:\\\"other\\\";s:20:\\\"Dólares da Libéria\\\";}s:3:\\\"LSL\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Loti do Lesoto\\\";s:5:\\\"other\\\";s:15:\\\"Lotis do Lesoto\\\";}s:3:\\\"LTL\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Litas lituana\\\";s:5:\\\"other\\\";s:14:\\\"Litai lituanas\\\";}s:3:\\\"LTT\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Talonas lituanas\\\";s:5:\\\"other\\\";s:18:\\\"Talonases lituanas\\\";}s:3:\\\"LUC\\\";a:2:{s:3:\\\"one\\\";s:33:\\\"Franco conversível de Luxemburgo\\\";s:5:\\\"other\\\";s:35:\\\"Francos conversíveis de Luxemburgo\\\";}s:3:\\\"LUF\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Franco de Luxemburgo\\\";s:5:\\\"other\\\";s:21:\\\"Francos de Luxemburgo\\\";}s:3:\\\"LUL\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"Franco financeiro de Luxemburgo\\\";s:5:\\\"other\\\";s:33:\\\"Francos financeiros de Luxemburgo\\\";}s:3:\\\"LVL\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Lats da Letônia\\\";s:5:\\\"other\\\";s:18:\\\"Latses da Letônia\\\";}s:3:\\\"LVR\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Rublo da Letônia\\\";s:5:\\\"other\\\";s:18:\\\"Rublos da Letônia\\\";}s:3:\\\"LYD\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Dinar líbio\\\";s:5:\\\"other\\\";s:15:\\\"Dinares líbios\\\";}s:3:\\\"MAD\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Dirrã marroquino\\\";s:5:\\\"other\\\";s:19:\\\"Dirrãs marroquinos\\\";}s:3:\\\"MAF\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Franco marroquino\\\";s:5:\\\"other\\\";s:19:\\\"Francos marroquinos\\\";}s:3:\\\"MDL\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Leu da Moldávia\\\";s:5:\\\"other\\\";s:17:\\\"Leus da Moldávia\\\";}s:3:\\\"MGA\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Ariari de Madagascar\\\";s:5:\\\"other\\\";s:22:\\\"Ariaries de Madagascar\\\";}s:3:\\\"MGF\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Franco de Madagascar\\\";s:5:\\\"other\\\";s:21:\\\"Francos de Madagascar\\\";}s:3:\\\"MKD\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Dinar da Macedônia\\\";s:5:\\\"other\\\";s:21:\\\"Dinares da Macedônia\\\";}s:3:\\\"MLF\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Franco de Mali\\\";s:5:\\\"other\\\";s:15:\\\"Francos de Mali\\\";}s:3:\\\"MMK\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Kyat de Mianmar\\\";s:5:\\\"other\\\";s:16:\\\"Kyats de Mianmar\\\";}s:3:\\\"MNT\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Tugrik da Mongólia\\\";s:5:\\\"other\\\";s:20:\\\"Tugriks da Mongólia\\\";}s:3:\\\"MOP\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Pataca de Macau\\\";s:5:\\\"other\\\";s:16:\\\"Patacas de Macau\\\";}s:3:\\\"MRO\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Ouguiya da Mauritânia\\\";s:5:\\\"other\\\";s:23:\\\"Ouguiyas da Mauritânia\\\";}s:3:\\\"MTL\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Lira Maltesa\\\";s:5:\\\"other\\\";s:14:\\\"Liras maltesas\\\";}s:3:\\\"MTP\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Libra maltesa\\\";s:5:\\\"other\\\";s:15:\\\"Libras maltesas\\\";}s:3:\\\"MUR\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Rúpia mauriciana\\\";s:5:\\\"other\\\";s:19:\\\"Rúpias mauricianas\\\";}s:3:\\\"MVR\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Rufiyaa das Ilhas Maldivas\\\";s:5:\\\"other\\\";s:27:\\\"Rufiyaas das Ilhas Maldivas\\\";}s:3:\\\"MWK\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Kwacha do Malawi\\\";s:5:\\\"other\\\";s:17:\\\"Kwachas do Malawi\\\";}s:3:\\\"MXN\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Peso mexicano\\\";s:5:\\\"other\\\";s:15:\\\"Pesos mexicanos\\\";}s:3:\\\"MXP\\\";a:2:{s:3:\\\"one\\\";s:28:\\\"Peso de prata mexicano (MXP)\\\";s:5:\\\"other\\\";s:30:\\\"Pesos de prata mexicanos (MXP)\\\";}s:3:\\\"MXV\\\";a:2:{s:3:\\\"one\\\";s:38:\\\"Unidade de investimento mexicana (UDI)\\\";s:5:\\\"other\\\";s:40:\\\"Unidades de investimento mexicanas (UDI)\\\";}s:3:\\\"MYR\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Ringgit malaio\\\";s:5:\\\"other\\\";s:16:\\\"Ringgits malaios\\\";}s:3:\\\"MZE\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Escudo de Moçambique\\\";s:5:\\\"other\\\";s:22:\\\"Escudos de Moçambique\\\";}s:3:\\\"MZM\\\";a:2:{s:3:\\\"one\\\";s:29:\\\"Metical antigo de Moçambique\\\";s:5:\\\"other\\\";s:32:\\\"Meticales antigos de Moçambique\\\";}s:3:\\\"MZN\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Metical de Moçambique\\\";s:5:\\\"other\\\";s:24:\\\"Meticales de Moçambique\\\";}s:3:\\\"NAD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar da Namíbia\\\";s:5:\\\"other\\\";s:20:\\\"Dólares da Namíbia\\\";}s:3:\\\"NGN\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Naira da Nigéria\\\";s:5:\\\"other\\\";s:18:\\\"Nairas da Nigéria\\\";}s:3:\\\"NIC\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Córdoba nicaraguense\\\";s:5:\\\"other\\\";s:23:\\\"Córdobas da Nicarágua\\\";}s:3:\\\"NIO\\\";a:2:{s:3:\\\"one\\\";s:30:\\\"Córdoba de ouro da Nicarágua\\\";s:5:\\\"other\\\";s:31:\\\"Córdobas de ouro da Nicarágua\\\";}s:3:\\\"NLG\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Florim holandês\\\";s:5:\\\"other\\\";s:18:\\\"Florins holandeses\\\";}s:3:\\\"NOK\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Coroa norueguesa\\\";s:5:\\\"other\\\";s:18:\\\"Coroas norueguesas\\\";}s:3:\\\"NPR\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Rúpia nepalesa\\\";s:5:\\\"other\\\";s:17:\\\"Rúpias nepalesas\\\";}s:3:\\\"NZD\\\";a:2:{s:3:\\\"one\\\";s:24:\\\"Dólar da Nova Zelândia\\\";s:5:\\\"other\\\";s:26:\\\"Dólares da Nova Zelândia\\\";}s:3:\\\"OMR\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Rial de Omã\\\";s:5:\\\"other\\\";s:14:\\\"Riales de Omã\\\";}s:3:\\\"PAB\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Balboa do Panamá\\\";s:5:\\\"other\\\";s:18:\\\"Balboas do Panamá\\\";}s:3:\\\"PEI\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Inti peruano\\\";s:5:\\\"other\\\";s:14:\\\"Intis peruanos\\\";}s:3:\\\"PEN\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Novo sol peruano\\\";s:5:\\\"other\\\";s:20:\\\"Novos soles peruanos\\\";}s:3:\\\"PES\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Sol peruano\\\";s:5:\\\"other\\\";s:14:\\\"Soles peruanos\\\";}s:3:\\\"PGK\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Kina de Papua Nova Guiné\\\";s:5:\\\"other\\\";s:26:\\\"Kinas de Papua Nova Guiné\\\";}s:3:\\\"PHP\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Peso filipino\\\";s:5:\\\"other\\\";s:15:\\\"Pesos filipinos\\\";}s:3:\\\"PKR\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Rúpia paquistanesa\\\";s:5:\\\"other\\\";s:21:\\\"Rúpias paquistanesas\\\";}s:3:\\\"PLN\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Zloti polonês\\\";s:5:\\\"other\\\";s:16:\\\"Zlotis poloneses\\\";}s:3:\\\"PLZ\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Zloti polonês (PLZ)\\\";s:5:\\\"other\\\";s:22:\\\"Zlotis poloneses (PLZ)\\\";}s:3:\\\"PTE\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Escudo português\\\";s:5:\\\"other\\\";s:19:\\\"Escudos portugueses\\\";}s:3:\\\"PYG\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Guarani paraguaio\\\";s:5:\\\"other\\\";s:19:\\\"Guaranis paraguaios\\\";}s:3:\\\"QAR\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Rial do Qatar\\\";s:5:\\\"other\\\";s:15:\\\"Riales do Qatar\\\";}s:3:\\\"RHD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar da Rodésia\\\";s:5:\\\"other\\\";s:20:\\\"Dólares da Rodésia\\\";}s:3:\\\"ROL\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Leu antigo da Romênia\\\";s:5:\\\"other\\\";s:24:\\\"Leus antigos da Romênia\\\";}s:3:\\\"RON\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Leu da Romênia\\\";s:5:\\\"other\\\";s:16:\\\"Leus da Romênia\\\";}s:3:\\\"RSD\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Dinar sérvio\\\";s:5:\\\"other\\\";s:16:\\\"Dinares sérvios\\\";}s:3:\\\"RUB\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Rublo russo\\\";s:5:\\\"other\\\";s:13:\\\"Rublos russos\\\";}s:3:\\\"RUR\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Rublo russo (RUR)\\\";s:5:\\\"other\\\";s:19:\\\"Rublos russos (RUR)\\\";}s:3:\\\"RWF\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Franco de Ruanda\\\";s:5:\\\"other\\\";s:17:\\\"Francos de Ruanda\\\";}s:3:\\\"SAR\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Riyal saudita\\\";s:5:\\\"other\\\";s:16:\\\"Riyales sauditas\\\";}s:3:\\\"SBD\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Dólar das Ilhas Salomão\\\";s:5:\\\"other\\\";s:27:\\\"Dólares das Ilhas Salomão\\\";}s:3:\\\"SCR\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Rúpia das Ilhas Seychelles\\\";s:5:\\\"other\\\";s:28:\\\"Rúpias das Ilhas Seychelles\\\";}s:3:\\\"SDD\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Dinar antigo do Sudão\\\";s:5:\\\"other\\\";s:25:\\\"Dinares antigos do Sudão\\\";}s:3:\\\"SDG\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Libra sudanesa\\\";s:5:\\\"other\\\";s:16:\\\"Libras sudanesas\\\";}s:3:\\\"SDP\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Libra antiga sudanesa\\\";s:5:\\\"other\\\";s:24:\\\"Libras antigas sudanesas\\\";}s:3:\\\"SEK\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"Coroa sueca\\\";s:5:\\\"other\\\";s:13:\\\"Coroas suecas\\\";}s:3:\\\"SGD\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Dólar de Singapura\\\";s:5:\\\"other\\\";s:21:\\\"Dólares de Singapura\\\";}s:3:\\\"SHP\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Libra de Santa Helena\\\";s:5:\\\"other\\\";s:22:\\\"Libras de Santa Helena\\\";}s:3:\\\"SIT\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Tolar da Eslovênia\\\";s:5:\\\"other\\\";s:21:\\\"Tolares da Eslovênia\\\";}s:3:\\\"SKK\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Coroa eslovaca\\\";s:5:\\\"other\\\";s:16:\\\"Coroas eslovacas\\\";}s:3:\\\"SLL\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Leone de Serra Leoa\\\";s:5:\\\"other\\\";s:20:\\\"Leones de Serra Leoa\\\";}s:3:\\\"SOS\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Shilling da Somália\\\";s:5:\\\"other\\\";s:21:\\\"Shillings da Somália\\\";}s:3:\\\"SRD\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Dólar do Suriname\\\";s:5:\\\"other\\\";s:20:\\\"Dólares do Suriname\\\";}s:3:\\\"SRG\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Florim do Suriname\\\";s:5:\\\"other\\\";s:19:\\\"Florins do Suriname\\\";}s:3:\\\"STD\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"Dobra de São Tomé e Príncipe\\\";s:5:\\\"other\\\";s:32:\\\"Dobras de São Tomé e Príncipe\\\";}s:3:\\\"SUR\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Rublo soviético\\\";s:5:\\\"other\\\";s:18:\\\"Rublos soviéticos\\\";}s:3:\\\"SVC\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Colon de El Salvador\\\";s:5:\\\"other\\\";s:21:\\\"Colons de El Salvador\\\";}s:3:\\\"SYP\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Libra síria\\\";s:5:\\\"other\\\";s:14:\\\"Libras sírias\\\";}s:3:\\\"SZL\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Lilangeni da Suazilândia\\\";s:5:\\\"other\\\";s:26:\\\"Lilangenis da Suazilândia\\\";}s:3:\\\"THB\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Baht da Tailândia\\\";s:5:\\\"other\\\";s:19:\\\"Bahts da Tailândia\\\";}s:3:\\\"TJR\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Rublo do Tajaquistão\\\";s:5:\\\"other\\\";s:22:\\\"Rublos do Tajaquistão\\\";}s:3:\\\"TJS\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Somoni do Tajaquistão\\\";s:5:\\\"other\\\";s:23:\\\"Somonis do Tajaquistão\\\";}s:3:\\\"TMM\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Manat do Turcomenistão\\\";s:5:\\\"other\\\";s:24:\\\"Manats do Turcomenistão\\\";}s:3:\\\"TND\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Dinar da Tunísia\\\";s:5:\\\"other\\\";s:19:\\\"Dinares da Tunísia\\\";}s:3:\\\"TOP\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Paʻanga de Tonga\\\";s:5:\\\"other\\\";s:18:\\\"Paʻangas de Tonga\\\";}s:3:\\\"TPE\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Escudo do Timor\\\";s:5:\\\"other\\\";s:16:\\\"Escudos do Timor\\\";}s:3:\\\"TRL\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Lira turca antiga\\\";s:5:\\\"other\\\";s:20:\\\"Liras turcas antigas\\\";}s:3:\\\"TRY\\\";a:2:{s:3:\\\"one\\\";s:10:\\\"Lira turca\\\";s:5:\\\"other\\\";s:12:\\\"Liras turcas\\\";}s:3:\\\"TTD\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Dólar de Trinidad e Tobago\\\";s:5:\\\"other\\\";s:29:\\\"Dólares de Trinidad e Tobago\\\";}s:3:\\\"TWD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar de Taiwan\\\";s:5:\\\"other\\\";s:18:\\\"Dólares de Taiwan\\\";}s:3:\\\"TZS\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Shilling da Tanzânia\\\";s:5:\\\"other\\\";s:22:\\\"Shillings da Tanzânia\\\";}s:3:\\\"UAH\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Hryvnia da Ucrânia\\\";s:5:\\\"other\\\";s:20:\\\"Hryvnias da Ucrânia\\\";}s:3:\\\"UAK\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Karbovanetz da Ucrânia\\\";s:5:\\\"other\\\";s:24:\\\"Karbovanetzs da Ucrânia\\\";}s:3:\\\"UGS\\\";a:2:{s:3:\\\"one\\\";s:24:\\\"Shilling de Uganda (UGS)\\\";s:5:\\\"other\\\";s:25:\\\"Shillings de Uganda (UGS)\\\";}s:3:\\\"UGX\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Shilling de Uganda\\\";s:5:\\\"other\\\";s:19:\\\"Shillings de Uganda\\\";}s:3:\\\"USD\\\";a:2:{s:3:\\\"one\\\";s:16:\\\"Dólar americano\\\";s:5:\\\"other\\\";s:19:\\\"Dólares americanos\\\";}s:3:\\\"USN\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"Dólar americano (dia seguinte)\\\";s:5:\\\"other\\\";s:34:\\\"Dólares americanos (dia seguinte)\\\";}s:3:\\\"USS\\\";a:2:{s:3:\\\"one\\\";s:28:\\\"Dólar americano (mesmo dia)\\\";s:5:\\\"other\\\";s:31:\\\"Dólares americanos (mesmo dia)\\\";}s:3:\\\"UYI\\\";a:2:{s:3:\\\"one\\\";s:35:\\\"Peso uruguaio em unidades indexadas\\\";s:5:\\\"other\\\";s:37:\\\"Pesos uruguaios em unidades indexadas\\\";}s:3:\\\"UYP\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Peso uruguaio (UYP)\\\";s:5:\\\"other\\\";s:21:\\\"Pesos uruguaios (UYP)\\\";}s:3:\\\"UYU\\\";a:2:{s:3:\\\"one\\\";s:13:\\\"Peso uruguaio\\\";s:5:\\\"other\\\";s:15:\\\"Pesos uruguaios\\\";}s:3:\\\"UZS\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Som do Uzbequistão\\\";s:5:\\\"other\\\";s:21:\\\"Somes do Uzbequistão\\\";}s:3:\\\"VEB\\\";a:2:{s:3:\\\"one\\\";s:20:\\\"Bolívar venezuelano\\\";s:5:\\\"other\\\";s:23:\\\"Bolívares venezuelanos\\\";}s:3:\\\"VEF\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Bolívar forte da Venezuela\\\";s:5:\\\"other\\\";s:30:\\\"Bolívares fortes da Venezuela\\\";}s:3:\\\"VND\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Dong vietnamês\\\";s:5:\\\"other\\\";s:17:\\\"Dongs vietnameses\\\";}s:3:\\\"VUV\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Vatu de Vanuatu\\\";s:5:\\\"other\\\";s:16:\\\"Vatus de Vanuatu\\\";}s:3:\\\"WST\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Tala samoano\\\";s:5:\\\"other\\\";s:14:\\\"Talas samoanos\\\";}s:3:\\\"XAF\\\";a:2:{s:3:\\\"one\\\";s:18:\\\"Franco CFA de BEAC\\\";s:5:\\\"other\\\";s:19:\\\"Francos CFA de BEAC\\\";}s:3:\\\"XAG\\\";a:2:{s:3:\\\"one\\\";s:5:\\\"Prata\\\";s:5:\\\"other\\\";s:6:\\\"Pratas\\\";}s:3:\\\"XAU\\\";a:2:{s:3:\\\"one\\\";s:4:\\\"Ouro\\\";s:5:\\\"other\\\";s:5:\\\"Ouros\\\";}s:3:\\\"XBA\\\";a:2:{s:3:\\\"one\\\";s:32:\\\"Unidade de composição europeia\\\";s:5:\\\"other\\\";s:34:\\\"Unidades de composição europeias\\\";}s:3:\\\"XBB\\\";a:2:{s:3:\\\"one\\\";s:27:\\\"Unidade monetária europeia\\\";s:5:\\\"other\\\";s:30:\\\"Unidades monetárias europeias\\\";}s:3:\\\"XBC\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"Unidade europeia de conta (XBC)\\\";s:5:\\\"other\\\";s:33:\\\"Unidades europeias de conta (XBC)\\\";}s:3:\\\"XBD\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"Unidade europeia de conta (XBD)\\\";s:5:\\\"other\\\";s:33:\\\"Unidades europeias de conta (XBD)\\\";}s:3:\\\"XCD\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Dólar do Caribe Oriental\\\";s:5:\\\"other\\\";s:27:\\\"Dólares do Caribe Oriental\\\";}s:3:\\\"XDR\\\";a:2:{s:3:\\\"one\\\";s:29:\\\"direitos de desenho especiais\\\";s:5:\\\"other\\\";s:29:\\\"direitos de desenho especiais\\\";}s:3:\\\"XEU\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Unidade de moeda europeia\\\";s:5:\\\"other\\\";s:28:\\\"Unidades de moedas europeias\\\";}s:3:\\\"XFO\\\";a:2:{s:3:\\\"one\\\";s:23:\\\"Franco de ouro francês\\\";s:5:\\\"other\\\";s:25:\\\"Francos de ouro franceses\\\";}s:3:\\\"XFU\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Franco UIC francês\\\";s:5:\\\"other\\\";s:21:\\\"Francos UIC franceses\\\";}s:3:\\\"XOF\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Franco CFA de BCEAO\\\";s:5:\\\"other\\\";s:20:\\\"Francos CFA de BCEAO\\\";}s:3:\\\"XPD\\\";a:2:{s:3:\\\"one\\\";s:8:\\\"Paládio\\\";s:5:\\\"other\\\";s:9:\\\"Paládios\\\";}s:3:\\\"XPF\\\";a:2:{s:3:\\\"one\\\";s:10:\\\"Franco CFP\\\";s:5:\\\"other\\\";s:11:\\\"Francos CFP\\\";}s:3:\\\"XPT\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"Platina\\\";s:5:\\\"other\\\";s:8:\\\"Platinas\\\";}s:3:\\\"XRE\\\";a:2:{s:3:\\\"one\\\";s:12:\\\"Fundos RINET\\\";s:5:\\\"other\\\";s:12:\\\"Fundos RINET\\\";}s:3:\\\"XTS\\\";a:2:{s:3:\\\"one\\\";s:25:\\\"Código de moeda de teste\\\";s:5:\\\"other\\\";s:26:\\\"Códigos de moeda de teste\\\";}s:3:\\\"XXX\\\";a:2:{s:3:\\\"one\\\";s:31:\\\"moeda desconhecida ou inválida\\\";s:5:\\\"other\\\";s:34:\\\"Moedas inválidas ou desconhecidas\\\";}s:3:\\\"YDD\\\";a:2:{s:3:\\\"one\\\";s:15:\\\"Dinar do Iêmen\\\";s:5:\\\"other\\\";s:17:\\\"Dinares do Iêmen\\\";}s:3:\\\"YER\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Rial do Iêmen\\\";s:5:\\\"other\\\";s:16:\\\"Riales do Iêmen\\\";}s:3:\\\"YUD\\\";a:2:{s:3:\\\"one\\\";s:21:\\\"Dinar forte iugoslavo\\\";s:5:\\\"other\\\";s:25:\\\"Dinares fortes iugoslavos\\\";}s:3:\\\"YUM\\\";a:2:{s:3:\\\"one\\\";s:26:\\\"Dinar noviy da Iugoslávia\\\";s:5:\\\"other\\\";s:28:\\\"Dinares noviy da Iugoslávia\\\";}s:3:\\\"YUN\\\";a:2:{s:3:\\\"one\\\";s:33:\\\"Dinar conversível da Iugoslávia\\\";s:5:\\\"other\\\";s:36:\\\"Dinares conversíveis da Iugoslávia\\\";}s:3:\\\"ZAL\\\";a:2:{s:3:\\\"one\\\";s:35:\\\"Rand da África do Sul (financeiro)\\\";s:5:\\\"other\\\";s:36:\\\"Rands da África do Sul (financeiro)\\\";}s:3:\\\"ZAR\\\";a:2:{s:3:\\\"one\\\";s:22:\\\"Rand da África do Sul\\\";s:5:\\\"other\\\";s:23:\\\"Rands da África do Sul\\\";}s:3:\\\"ZMK\\\";a:2:{s:3:\\\"one\\\";s:17:\\\"Kwacha da Zâmbia\\\";s:5:\\\"other\\\";s:18:\\\"Kwachas da Zâmbia\\\";}s:3:\\\"ZRN\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Novo zaire do Zaire\\\";s:5:\\\"other\\\";s:21:\\\"Novos zaires do Zaire\\\";}s:3:\\\"ZRZ\\\";a:2:{s:3:\\\"one\\\";s:14:\\\"Zaire do Zaire\\\";s:5:\\\"other\\\";s:15:\\\"Zaires do Zaire\\\";}s:3:\\\"ZWD\\\";a:2:{s:3:\\\"one\\\";s:19:\\\"Dólar do Zimbábue\\\";s:5:\\\"other\\\";s:21:\\\"Dólares do Zimbábue\\\";}}s:4:\\\"Keys\\\";a:3:{s:8:\\\"calendar\\\";s:11:\\\"Calendário\\\";s:9:\\\"collation\\\";s:11:\\\"Ordenação\\\";s:8:\\\"currency\\\";s:5:\\\"Moeda\\\";}s:9:\\\"Languages\\\";a:506:{s:2:\\\"aa\\\";s:4:\\\"afar\\\";s:2:\\\"ab\\\";s:8:\\\"abcázio\\\";s:3:\\\"ace\\\";s:6:\\\"achém\\\";s:3:\\\"ach\\\";s:5:\\\"acoli\\\";s:3:\\\"ada\\\";s:7:\\\"adangme\\\";s:3:\\\"ady\\\";s:6:\\\"adigue\\\";s:2:\\\"ae\\\";s:9:\\\"avéstico\\\";s:2:\\\"af\\\";s:10:\\\"africâner\\\";s:3:\\\"afa\\\";s:21:\\\"idioma afro-asiático\\\";s:3:\\\"afh\\\";s:8:\\\"afrihili\\\";s:3:\\\"ain\\\";s:4:\\\"ainu\\\";s:2:\\\"ak\\\";s:4:\\\"akan\\\";s:3:\\\"akk\\\";s:8:\\\"acadiano\\\";s:3:\\\"ale\\\";s:7:\\\"aleúte\\\";s:3:\\\"alg\\\";s:18:\\\"idioma algonquiano\\\";s:3:\\\"alt\\\";s:12:\\\"altai do sul\\\";s:2:\\\"am\\\";s:8:\\\"amárico\\\";s:2:\\\"an\\\";s:9:\\\"aragonês\\\";s:3:\\\"ang\\\";s:15:\\\"inglês arcaico\\\";s:3:\\\"anp\\\";s:6:\\\"angika\\\";s:3:\\\"apa\\\";s:13:\\\"idioma apache\\\";s:2:\\\"ar\\\";s:6:\\\"árabe\\\";s:3:\\\"arc\\\";s:8:\\\"aramaico\\\";s:3:\\\"arn\\\";s:8:\\\"araucano\\\";s:3:\\\"arp\\\";s:7:\\\"arapaho\\\";s:3:\\\"art\\\";s:17:\\\"idioma artificial\\\";s:3:\\\"arw\\\";s:8:\\\"arauaqui\\\";s:2:\\\"as\\\";s:8:\\\"assamês\\\";s:3:\\\"ast\\\";s:9:\\\"asturiano\\\";s:3:\\\"ath\\\";s:17:\\\"idioma atabascano\\\";s:3:\\\"aus\\\";s:18:\\\"idioma australiano\\\";s:2:\\\"av\\\";s:6:\\\"avaric\\\";s:3:\\\"awa\\\";s:6:\\\"awadhi\\\";s:2:\\\"ay\\\";s:6:\\\"aimara\\\";s:2:\\\"az\\\";s:11:\\\"azerbaijano\\\";s:2:\\\"ba\\\";s:7:\\\"bashkir\\\";s:3:\\\"bad\\\";s:5:\\\"banda\\\";s:3:\\\"bai\\\";s:15:\\\"idioma bamileke\\\";s:3:\\\"bal\\\";s:8:\\\"balúchi\\\";s:3:\\\"ban\\\";s:8:\\\"balinês\\\";s:3:\\\"bas\\\";s:4:\\\"basa\\\";s:3:\\\"bat\\\";s:15:\\\"idioma báltico\\\";s:2:\\\"be\\\";s:11:\\\"bielo-russo\\\";s:3:\\\"bej\\\";s:4:\\\"beja\\\";s:3:\\\"bem\\\";s:5:\\\"bemba\\\";s:3:\\\"ber\\\";s:7:\\\"berbere\\\";s:2:\\\"bg\\\";s:8:\\\"búlgaro\\\";s:2:\\\"bh\\\";s:5:\\\"biari\\\";s:3:\\\"bho\\\";s:8:\\\"bhojpuri\\\";s:2:\\\"bi\\\";s:8:\\\"bislamá\\\";s:3:\\\"bik\\\";s:5:\\\"bikol\\\";s:3:\\\"bin\\\";s:4:\\\"bini\\\";s:3:\\\"bla\\\";s:7:\\\"siksika\\\";s:2:\\\"bm\\\";s:7:\\\"bambara\\\";s:2:\\\"bn\\\";s:7:\\\"bengali\\\";s:3:\\\"bnt\\\";s:5:\\\"banto\\\";s:2:\\\"bo\\\";s:8:\\\"tibetano\\\";s:2:\\\"br\\\";s:7:\\\"bretão\\\";s:3:\\\"bra\\\";s:4:\\\"braj\\\";s:2:\\\"bs\\\";s:7:\\\"bósnio\\\";s:3:\\\"btk\\\";s:7:\\\"bataque\\\";s:3:\\\"bua\\\";s:6:\\\"buriat\\\";s:3:\\\"bug\\\";s:9:\\\"buguinês\\\";s:3:\\\"byn\\\";s:4:\\\"blin\\\";s:2:\\\"ca\\\";s:8:\\\"catalão\\\";s:3:\\\"cad\\\";s:5:\\\"caddo\\\";s:3:\\\"cai\\\";s:33:\\\"idioma indígena centro-americano\\\";s:3:\\\"car\\\";s:6:\\\"caribe\\\";s:3:\\\"cau\\\";s:17:\\\"idioma caucásico\\\";s:3:\\\"cch\\\";s:5:\\\"atsam\\\";s:2:\\\"ce\\\";s:8:\\\"checheno\\\";s:3:\\\"ceb\\\";s:7:\\\"cebuano\\\";s:3:\\\"cel\\\";s:12:\\\"idioma celta\\\";s:2:\\\"ch\\\";s:8:\\\"chamorro\\\";s:3:\\\"chb\\\";s:7:\\\"chibcha\\\";s:3:\\\"chg\\\";s:8:\\\"chagatai\\\";s:3:\\\"chk\\\";s:8:\\\"chuukese\\\";s:3:\\\"chm\\\";s:4:\\\"mari\\\";s:3:\\\"chn\\\";s:14:\\\"chinook jargon\\\";s:3:\\\"cho\\\";s:7:\\\"choctaw\\\";s:3:\\\"chp\\\";s:9:\\\"chipewyan\\\";s:3:\\\"chr\\\";s:8:\\\"cherokee\\\";s:3:\\\"chy\\\";s:7:\\\"cheiene\\\";s:3:\\\"cmc\\\";s:13:\\\"idioma chamic\\\";s:2:\\\"co\\\";s:8:\\\"córsico\\\";s:3:\\\"cop\\\";s:5:\\\"copta\\\";s:3:\\\"cpe\\\";s:36:\\\"crioulo ou pidgin baseado no inglês\\\";s:3:\\\"cpf\\\";s:37:\\\"crioulo ou pidgin baseado no francês\\\";s:3:\\\"cpp\\\";s:39:\\\"crioulo ou pidgin baseado no português\\\";s:2:\\\"cr\\\";s:4:\\\"cree\\\";s:3:\\\"crh\\\";s:16:\\\"turco da Crimeia\\\";s:3:\\\"crp\\\";s:17:\\\"crioulo ou pidgin\\\";s:2:\\\"cs\\\";s:6:\\\"tcheco\\\";s:3:\\\"csb\\\";s:9:\\\"kashubian\\\";s:2:\\\"cu\\\";s:20:\\\"eslavo eclesiástico\\\";s:3:\\\"cus\\\";s:17:\\\"idioma cuchítico\\\";s:2:\\\"cv\\\";s:7:\\\"chuvash\\\";s:2:\\\"cy\\\";s:6:\\\"galês\\\";s:2:\\\"da\\\";s:12:\\\"dinamarquês\\\";s:3:\\\"dak\\\";s:6:\\\"dacota\\\";s:3:\\\"dar\\\";s:6:\\\"dargwa\\\";s:3:\\\"day\\\";s:5:\\\"dayak\\\";s:2:\\\"de\\\";s:7:\\\"alemão\\\";s:5:\\\"de_AT\\\";s:18:\\\"alemão austríaco\\\";s:5:\\\"de_CH\\\";s:20:\\\"alto alemão suíço\\\";s:3:\\\"del\\\";s:8:\\\"delaware\\\";s:3:\\\"den\\\";s:5:\\\"slave\\\";s:3:\\\"dgr\\\";s:6:\\\"dogrib\\\";s:3:\\\"din\\\";s:5:\\\"dinka\\\";s:3:\\\"doi\\\";s:5:\\\"dogri\\\";s:3:\\\"dra\\\";s:17:\\\"idioma dravidiano\\\";s:3:\\\"dsb\\\";s:13:\\\"sérvio baixo\\\";s:3:\\\"dua\\\";s:5:\\\"duala\\\";s:3:\\\"dum\\\";s:16:\\\"holandês médio\\\";s:2:\\\"dv\\\";s:6:\\\"divehi\\\";s:3:\\\"dyu\\\";s:6:\\\"diúla\\\";s:2:\\\"dz\\\";s:6:\\\"dzonga\\\";s:2:\\\"ee\\\";s:3:\\\"eve\\\";s:3:\\\"efi\\\";s:6:\\\"efique\\\";s:3:\\\"egy\\\";s:16:\\\"egípcio arcaico\\\";s:3:\\\"eka\\\";s:6:\\\"ekajuk\\\";s:2:\\\"el\\\";s:5:\\\"grego\\\";s:3:\\\"elx\\\";s:7:\\\"elamite\\\";s:2:\\\"en\\\";s:7:\\\"inglês\\\";s:5:\\\"en_AU\\\";s:19:\\\"inglês australiano\\\";s:5:\\\"en_CA\\\";s:17:\\\"inglês canadense\\\";s:5:\\\"en_GB\\\";s:18:\\\"inglês britânico\\\";s:5:\\\"en_US\\\";s:17:\\\"inglês americano\\\";s:3:\\\"enm\\\";s:14:\\\"inglês médio\\\";s:2:\\\"eo\\\";s:9:\\\"esperanto\\\";s:2:\\\"es\\\";s:8:\\\"espanhol\\\";s:6:\\\"es_419\\\";s:25:\\\"espanhol latino-americano\\\";s:5:\\\"es_ES\\\";s:17:\\\"espanhol ibérico\\\";s:2:\\\"et\\\";s:9:\\\"estoniano\\\";s:2:\\\"eu\\\";s:5:\\\"basco\\\";s:3:\\\"ewo\\\";s:6:\\\"ewondo\\\";s:2:\\\"fa\\\";s:5:\\\"persa\\\";s:3:\\\"fan\\\";s:6:\\\"fangue\\\";s:3:\\\"fat\\\";s:5:\\\"fanti\\\";s:2:\\\"ff\\\";s:4:\\\"fula\\\";s:2:\\\"fi\\\";s:10:\\\"finlandês\\\";s:3:\\\"fil\\\";s:8:\\\"filipino\\\";s:3:\\\"fiu\\\";s:19:\\\"idioma fino-úgrico\\\";s:2:\\\"fj\\\";s:7:\\\"fijiano\\\";s:2:\\\"fo\\\";s:7:\\\"feroês\\\";s:3:\\\"fon\\\";s:3:\\\"fom\\\";s:2:\\\"fr\\\";s:8:\\\"francês\\\";s:5:\\\"fr_CA\\\";s:18:\\\"francês canadense\\\";s:5:\\\"fr_CH\\\";s:16:\\\"francês suíço\\\";s:3:\\\"frm\\\";s:15:\\\"francês médio\\\";s:3:\\\"fro\\\";s:16:\\\"francês arcaico\\\";s:3:\\\"frr\\\";s:20:\\\"frísio setentrional\\\";s:3:\\\"frs\\\";s:16:\\\"frisão oriental\\\";s:3:\\\"fur\\\";s:8:\\\"friulano\\\";s:2:\\\"fy\\\";s:17:\\\"frísio ocidental\\\";s:2:\\\"ga\\\";s:9:\\\"irlandês\\\";s:3:\\\"gaa\\\";s:2:\\\"ga\\\";s:3:\\\"gay\\\";s:4:\\\"gayo\\\";s:3:\\\"gba\\\";s:5:\\\"gbaia\\\";s:2:\\\"gd\\\";s:17:\\\"gaélico escocês\\\";s:3:\\\"gem\\\";s:17:\\\"idioma germânico\\\";s:3:\\\"gez\\\";s:4:\\\"geez\\\";s:3:\\\"gil\\\";s:10:\\\"gilbertês\\\";s:2:\\\"gl\\\";s:6:\\\"galego\\\";s:3:\\\"gmh\\\";s:19:\\\"alemão médio-alto\\\";s:2:\\\"gn\\\";s:7:\\\"guarani\\\";s:3:\\\"goh\\\";s:20:\\\"alemão arcaico alto\\\";s:3:\\\"gon\\\";s:5:\\\"gondi\\\";s:3:\\\"gor\\\";s:9:\\\"gorontalo\\\";s:3:\\\"got\\\";s:7:\\\"gótico\\\";s:3:\\\"grb\\\";s:5:\\\"grebo\\\";s:3:\\\"grc\\\";s:13:\\\"grego arcaico\\\";s:3:\\\"gsw\\\";s:15:\\\"alemão suíço\\\";s:2:\\\"gu\\\";s:8:\\\"guzerate\\\";s:2:\\\"gv\\\";s:4:\\\"manx\\\";s:3:\\\"gwi\\\";s:9:\\\"gwichʼin\\\";s:2:\\\"ha\\\";s:7:\\\"hauçá\\\";s:3:\\\"hai\\\";s:5:\\\"haida\\\";s:3:\\\"haw\\\";s:8:\\\"havaiano\\\";s:2:\\\"he\\\";s:8:\\\"hebraico\\\";s:2:\\\"hi\\\";s:6:\\\"híndi\\\";s:3:\\\"hil\\\";s:10:\\\"hiligaynon\\\";s:3:\\\"him\\\";s:9:\\\"himachali\\\";s:3:\\\"hit\\\";s:6:\\\"hitita\\\";s:3:\\\"hmn\\\";s:5:\\\"hmong\\\";s:2:\\\"ho\\\";s:9:\\\"hiri motu\\\";s:2:\\\"hr\\\";s:6:\\\"croata\\\";s:3:\\\"hsb\\\";s:17:\\\"sorábio superior\\\";s:2:\\\"ht\\\";s:8:\\\"haitiano\\\";s:2:\\\"hu\\\";s:8:\\\"húngaro\\\";s:3:\\\"hup\\\";s:4:\\\"hupa\\\";s:2:\\\"hy\\\";s:8:\\\"armênio\\\";s:2:\\\"hz\\\";s:6:\\\"herero\\\";s:2:\\\"ia\\\";s:12:\\\"interlíngua\\\";s:3:\\\"iba\\\";s:4:\\\"iban\\\";s:2:\\\"id\\\";s:10:\\\"indonésio\\\";s:2:\\\"ie\\\";s:11:\\\"interlingue\\\";s:2:\\\"ig\\\";s:3:\\\"ibo\\\";s:2:\\\"ii\\\";s:10:\\\"sichuan yi\\\";s:3:\\\"ijo\\\";s:3:\\\"ijo\\\";s:2:\\\"ik\\\";s:9:\\\"inupiaque\\\";s:3:\\\"ilo\\\";s:7:\\\"ilocano\\\";s:3:\\\"inc\\\";s:14:\\\"idioma índico\\\";s:3:\\\"ine\\\";s:19:\\\"idioma indo-europeu\\\";s:3:\\\"inh\\\";s:7:\\\"inguche\\\";s:2:\\\"io\\\";s:3:\\\"ido\\\";s:3:\\\"ira\\\";s:8:\\\"iraniano\\\";s:3:\\\"iro\\\";s:15:\\\"idioma iroquês\\\";s:2:\\\"is\\\";s:9:\\\"islandês\\\";s:2:\\\"it\\\";s:8:\\\"italiano\\\";s:2:\\\"iu\\\";s:9:\\\"inuktitut\\\";s:2:\\\"ja\\\";s:8:\\\"japonês\\\";s:3:\\\"jbo\\\";s:6:\\\"lojban\\\";s:3:\\\"jpr\\\";s:13:\\\"judaico-persa\\\";s:3:\\\"jrb\\\";s:16:\\\"judaico-arábico\\\";s:2:\\\"jv\\\";s:8:\\\"javanês\\\";s:2:\\\"ka\\\";s:9:\\\"georgiano\\\";s:3:\\\"kaa\\\";s:11:\\\"kara-kalpak\\\";s:3:\\\"kab\\\";s:6:\\\"kabyle\\\";s:3:\\\"kac\\\";s:6:\\\"kachin\\\";s:3:\\\"kaj\\\";s:3:\\\"jju\\\";s:3:\\\"kam\\\";s:5:\\\"kamba\\\";s:3:\\\"kar\\\";s:5:\\\"karen\\\";s:3:\\\"kaw\\\";s:4:\\\"kawi\\\";s:3:\\\"kbd\\\";s:10:\\\"kabardiano\\\";s:3:\\\"kcg\\\";s:4:\\\"tyap\\\";s:3:\\\"kfo\\\";s:4:\\\"koro\\\";s:2:\\\"kg\\\";s:9:\\\"congolês\\\";s:3:\\\"kha\\\";s:5:\\\"khasi\\\";s:3:\\\"khi\\\";s:13:\\\"idioma coisã\\\";s:3:\\\"kho\\\";s:9:\\\"khotanês\\\";s:2:\\\"ki\\\";s:7:\\\"quicuio\\\";s:2:\\\"kj\\\";s:8:\\\"kuanyama\\\";s:2:\\\"kk\\\";s:7:\\\"cazaque\\\";s:2:\\\"kl\\\";s:12:\\\"groenlandês\\\";s:2:\\\"km\\\";s:4:\\\"cmer\\\";s:3:\\\"kmb\\\";s:9:\\\"quimbundo\\\";s:2:\\\"kn\\\";s:8:\\\"canarês\\\";s:2:\\\"ko\\\";s:7:\\\"coreano\\\";s:3:\\\"kok\\\";s:7:\\\"concani\\\";s:3:\\\"kos\\\";s:8:\\\"kosraean\\\";s:3:\\\"kpe\\\";s:6:\\\"kpelle\\\";s:2:\\\"kr\\\";s:7:\\\"canúri\\\";s:3:\\\"krc\\\";s:15:\\\"karachay-balkar\\\";s:3:\\\"krl\\\";s:15:\\\"idioma carélio\\\";s:3:\\\"kro\\\";s:3:\\\"kru\\\";s:3:\\\"kru\\\";s:6:\\\"kurukh\\\";s:2:\\\"ks\\\";s:8:\\\"caxemira\\\";s:2:\\\"ku\\\";s:5:\\\"curdo\\\";s:3:\\\"kum\\\";s:5:\\\"kumyk\\\";s:3:\\\"kut\\\";s:7:\\\"kutenai\\\";s:2:\\\"kv\\\";s:4:\\\"komi\\\";s:2:\\\"kw\\\";s:8:\\\"córnico\\\";s:2:\\\"ky\\\";s:8:\\\"quirguiz\\\";s:2:\\\"la\\\";s:5:\\\"latim\\\";s:3:\\\"lad\\\";s:6:\\\"ladino\\\";s:3:\\\"lah\\\";s:6:\\\"lahnda\\\";s:3:\\\"lam\\\";s:5:\\\"lamba\\\";s:2:\\\"lb\\\";s:13:\\\"luxemburguês\\\";s:3:\\\"lez\\\";s:8:\\\"lezghian\\\";s:2:\\\"lg\\\";s:7:\\\"luganda\\\";s:2:\\\"li\\\";s:11:\\\"limburguês\\\";s:2:\\\"ln\\\";s:7:\\\"lingala\\\";s:2:\\\"lo\\\";s:8:\\\"laosiano\\\";s:3:\\\"lol\\\";s:5:\\\"mongo\\\";s:3:\\\"loz\\\";s:4:\\\"lozi\\\";s:2:\\\"lt\\\";s:7:\\\"lituano\\\";s:2:\\\"lu\\\";s:12:\\\"luba-catanga\\\";s:3:\\\"lua\\\";s:10:\\\"luba-lulua\\\";s:3:\\\"lui\\\";s:7:\\\"luiseno\\\";s:3:\\\"lun\\\";s:5:\\\"lunda\\\";s:3:\\\"luo\\\";s:3:\\\"luo\\\";s:3:\\\"lus\\\";s:6:\\\"lushai\\\";s:2:\\\"lv\\\";s:6:\\\"letão\\\";s:3:\\\"mad\\\";s:8:\\\"madurês\\\";s:3:\\\"mag\\\";s:6:\\\"magahi\\\";s:3:\\\"mai\\\";s:8:\\\"maithili\\\";s:3:\\\"mak\\\";s:7:\\\"makasar\\\";s:3:\\\"man\\\";s:8:\\\"mandinga\\\";s:3:\\\"map\\\";s:12:\\\"austronésio\\\";s:3:\\\"mas\\\";s:6:\\\"massai\\\";s:3:\\\"mdf\\\";s:5:\\\"mocsa\\\";s:3:\\\"mdr\\\";s:6:\\\"mandar\\\";s:3:\\\"men\\\";s:5:\\\"mende\\\";s:2:\\\"mg\\\";s:7:\\\"malgaxe\\\";s:3:\\\"mga\\\";s:16:\\\"irlandês médio\\\";s:2:\\\"mh\\\";s:10:\\\"marshalês\\\";s:2:\\\"mi\\\";s:5:\\\"maori\\\";s:3:\\\"mic\\\";s:10:\\\"miquemaque\\\";s:3:\\\"min\\\";s:11:\\\"minangkabau\\\";s:3:\\\"mis\\\";s:16:\\\"idiomas diversos\\\";s:2:\\\"mk\\\";s:10:\\\"macedônio\\\";s:3:\\\"mkh\\\";s:16:\\\"idioma mon-khmer\\\";s:2:\\\"ml\\\";s:8:\\\"malaiala\\\";s:2:\\\"mn\\\";s:6:\\\"mongol\\\";s:3:\\\"mnc\\\";s:6:\\\"manchu\\\";s:3:\\\"mni\\\";s:8:\\\"manipuri\\\";s:3:\\\"mno\\\";s:13:\\\"idioma manobo\\\";s:2:\\\"mo\\\";s:9:\\\"moldávio\\\";s:3:\\\"moh\\\";s:6:\\\"mohawk\\\";s:3:\\\"mos\\\";s:5:\\\"mossi\\\";s:2:\\\"mr\\\";s:6:\\\"marata\\\";s:2:\\\"ms\\\";s:6:\\\"malaio\\\";s:2:\\\"mt\\\";s:7:\\\"maltês\\\";s:3:\\\"mul\\\";s:18:\\\"idiomas múltiplos\\\";s:3:\\\"mun\\\";s:13:\\\"idiomas munda\\\";s:3:\\\"mus\\\";s:5:\\\"creek\\\";s:3:\\\"mwl\\\";s:9:\\\"mirandês\\\";s:3:\\\"mwr\\\";s:7:\\\"marwari\\\";s:2:\\\"my\\\";s:9:\\\"birmanês\\\";s:3:\\\"myn\\\";s:4:\\\"maia\\\";s:3:\\\"myv\\\";s:5:\\\"erzya\\\";s:2:\\\"na\\\";s:8:\\\"nauruano\\\";s:3:\\\"nah\\\";s:8:\\\"náuatle\\\";s:3:\\\"nai\\\";s:32:\\\"idioma indígena norte-americano\\\";s:3:\\\"nap\\\";s:10:\\\"napolitano\\\";s:2:\\\"nb\\\";s:18:\\\"bokmål norueguês\\\";s:2:\\\"nd\\\";s:16:\\\"ndebele do norte\\\";s:3:\\\"nds\\\";s:13:\\\"baixo-alemão\\\";s:2:\\\"ne\\\";s:6:\\\"nepali\\\";s:3:\\\"new\\\";s:6:\\\"newari\\\";s:2:\\\"ng\\\";s:5:\\\"dongo\\\";s:3:\\\"nia\\\";s:4:\\\"nias\\\";s:3:\\\"nic\\\";s:26:\\\"idioma cordofano-nigeriano\\\";s:3:\\\"niu\\\";s:7:\\\"niueano\\\";s:2:\\\"nl\\\";s:9:\\\"holandês\\\";s:5:\\\"nl_BE\\\";s:8:\\\"flamengo\\\";s:2:\\\"nn\\\";s:18:\\\"nynorsk norueguês\\\";s:2:\\\"no\\\";s:10:\\\"norueguês\\\";s:3:\\\"nog\\\";s:5:\\\"nogai\\\";s:3:\\\"non\\\";s:16:\\\"nórdico arcaico\\\";s:3:\\\"nqo\\\";s:4:\\\"n'ko\\\";s:2:\\\"nr\\\";s:14:\\\"ndebele do sul\\\";s:3:\\\"nso\\\";s:17:\\\"soto setentrional\\\";s:3:\\\"nub\\\";s:13:\\\"idioma núbio\\\";s:2:\\\"nv\\\";s:6:\\\"navajo\\\";s:3:\\\"nwc\\\";s:16:\\\"newari clássico\\\";s:2:\\\"ny\\\";s:6:\\\"nianja\\\";s:3:\\\"nym\\\";s:8:\\\"nyamwezi\\\";s:3:\\\"nyn\\\";s:8:\\\"nyankole\\\";s:3:\\\"nyo\\\";s:5:\\\"nyoro\\\";s:3:\\\"nzi\\\";s:5:\\\"nzima\\\";s:2:\\\"oc\\\";s:11:\\\"occitânico\\\";s:2:\\\"oj\\\";s:6:\\\"ojibwa\\\";s:2:\\\"om\\\";s:5:\\\"oromo\\\";s:2:\\\"or\\\";s:5:\\\"oriya\\\";s:2:\\\"os\\\";s:7:\\\"ossetic\\\";s:3:\\\"osa\\\";s:5:\\\"osage\\\";s:3:\\\"ota\\\";s:13:\\\"turco otomano\\\";s:3:\\\"oto\\\";s:14:\\\"idioma otomano\\\";s:2:\\\"pa\\\";s:7:\\\"panjabi\\\";s:3:\\\"paa\\\";s:14:\\\"idioma papuano\\\";s:3:\\\"pag\\\";s:10:\\\"pangasinã\\\";s:3:\\\"pal\\\";s:7:\\\"pálavi\\\";s:3:\\\"pam\\\";s:8:\\\"pampanga\\\";s:3:\\\"pap\\\";s:10:\\\"papiamento\\\";s:3:\\\"pau\\\";s:8:\\\"palauano\\\";s:3:\\\"peo\\\";s:13:\\\"persa arcaico\\\";s:3:\\\"phi\\\";s:15:\\\"idioma filipino\\\";s:3:\\\"phn\\\";s:8:\\\"fenício\\\";s:2:\\\"pi\\\";s:5:\\\"páli\\\";s:2:\\\"pl\\\";s:8:\\\"polonês\\\";s:3:\\\"pon\\\";s:9:\\\"pohnpeian\\\";s:3:\\\"pra\\\";s:16:\\\"idioma prácrito\\\";s:3:\\\"pro\\\";s:18:\\\"provençal arcaico\\\";s:2:\\\"ps\\\";s:6:\\\"pashto\\\";s:2:\\\"pt\\\";s:10:\\\"português\\\";s:5:\\\"pt_BR\\\";s:20:\\\"português do Brasil\\\";s:5:\\\"pt_PT\\\";s:19:\\\"português ibérico\\\";s:2:\\\"qu\\\";s:8:\\\"quíchua\\\";s:3:\\\"raj\\\";s:9:\\\"rajastani\\\";s:3:\\\"rap\\\";s:7:\\\"rapanui\\\";s:3:\\\"rar\\\";s:11:\\\"rarotongano\\\";s:2:\\\"rm\\\";s:11:\\\"reto-romano\\\";s:2:\\\"rn\\\";s:5:\\\"rundi\\\";s:2:\\\"ro\\\";s:6:\\\"romeno\\\";s:3:\\\"roa\\\";s:16:\\\"idioma românico\\\";s:3:\\\"rom\\\";s:6:\\\"romani\\\";s:4:\\\"root\\\";s:4:\\\"root\\\";s:2:\\\"ru\\\";s:5:\\\"russo\\\";s:3:\\\"rup\\\";s:7:\\\"aromeno\\\";s:2:\\\"rw\\\";s:11:\\\"kinyarwanda\\\";s:2:\\\"sa\\\";s:10:\\\"sânscrito\\\";s:3:\\\"sad\\\";s:7:\\\"sandawe\\\";s:3:\\\"sah\\\";s:6:\\\"iacuto\\\";s:3:\\\"sai\\\";s:30:\\\"idioma indígena sul-americano\\\";s:3:\\\"sal\\\";s:15:\\\"idioma salisano\\\";s:3:\\\"sam\\\";s:19:\\\"aramaico samaritano\\\";s:3:\\\"sas\\\";s:5:\\\"sasak\\\";s:3:\\\"sat\\\";s:7:\\\"santali\\\";s:2:\\\"sc\\\";s:5:\\\"sardo\\\";s:3:\\\"scn\\\";s:9:\\\"siciliano\\\";s:3:\\\"sco\\\";s:8:\\\"escocês\\\";s:2:\\\"sd\\\";s:5:\\\"sindi\\\";s:2:\\\"se\\\";s:13:\\\"sami do norte\\\";s:3:\\\"sel\\\";s:6:\\\"selkup\\\";s:3:\\\"sem\\\";s:16:\\\"idioma semítico\\\";s:2:\\\"sg\\\";s:5:\\\"sango\\\";s:3:\\\"sga\\\";s:17:\\\"irlandês arcaico\\\";s:3:\\\"sgn\\\";s:19:\\\"linguagem de sinais\\\";s:2:\\\"sh\\\";s:12:\\\"servo-croata\\\";s:3:\\\"shn\\\";s:4:\\\"shan\\\";s:2:\\\"si\\\";s:9:\\\"cingalês\\\";s:3:\\\"sid\\\";s:6:\\\"sidamo\\\";s:3:\\\"sio\\\";s:12:\\\"idioma sioux\\\";s:3:\\\"sit\\\";s:20:\\\"idioma sino-tibetano\\\";s:2:\\\"sk\\\";s:8:\\\"eslovaco\\\";s:2:\\\"sl\\\";s:8:\\\"esloveno\\\";s:3:\\\"sla\\\";s:13:\\\"idioma eslavo\\\";s:2:\\\"sm\\\";s:7:\\\"samoano\\\";s:3:\\\"sma\\\";s:11:\\\"sami do sul\\\";s:3:\\\"smi\\\";s:11:\\\"idioma sami\\\";s:3:\\\"smj\\\";s:9:\\\"lule sami\\\";s:3:\\\"smn\\\";s:10:\\\"inari sami\\\";s:3:\\\"sms\\\";s:10:\\\"skolt sami\\\";s:2:\\\"sn\\\";s:5:\\\"shona\\\";s:3:\\\"snk\\\";s:9:\\\"soninquê\\\";s:2:\\\"so\\\";s:6:\\\"somali\\\";s:3:\\\"sog\\\";s:8:\\\"sogdiano\\\";s:3:\\\"son\\\";s:6:\\\"songai\\\";s:2:\\\"sq\\\";s:8:\\\"albanês\\\";s:2:\\\"sr\\\";s:7:\\\"sérvio\\\";s:3:\\\"srn\\\";s:17:\\\"idioma surinamês\\\";s:3:\\\"srr\\\";s:6:\\\"serere\\\";s:2:\\\"ss\\\";s:5:\\\"swati\\\";s:3:\\\"ssa\\\";s:20:\\\"idioma nilo-saariano\\\";s:2:\\\"st\\\";s:11:\\\"soto do sul\\\";s:2:\\\"su\\\";s:9:\\\"sundanês\\\";s:3:\\\"suk\\\";s:6:\\\"sukuma\\\";s:3:\\\"sus\\\";s:5:\\\"sosso\\\";s:3:\\\"sux\\\";s:8:\\\"sumério\\\";s:2:\\\"sv\\\";s:5:\\\"sueco\\\";s:2:\\\"sw\\\";s:6:\\\"suaili\\\";s:3:\\\"syc\\\";s:18:\\\"siríaco clássico\\\";s:3:\\\"syr\\\";s:8:\\\"siríaco\\\";s:2:\\\"ta\\\";s:6:\\\"tâmil\\\";s:3:\\\"tai\\\";s:17:\\\"idioma tailandês\\\";s:2:\\\"te\\\";s:6:\\\"telugu\\\";s:3:\\\"tem\\\";s:5:\\\"timne\\\";s:3:\\\"ter\\\";s:6:\\\"tereno\\\";s:3:\\\"tet\\\";s:6:\\\"tétum\\\";s:2:\\\"tg\\\";s:8:\\\"tadjique\\\";s:2:\\\"th\\\";s:10:\\\"tailandês\\\";s:2:\\\"ti\\\";s:9:\\\"tigrínia\\\";s:3:\\\"tig\\\";s:6:\\\"tigré\\\";s:3:\\\"tiv\\\";s:3:\\\"tiv\\\";s:2:\\\"tk\\\";s:9:\\\"turcomano\\\";s:3:\\\"tkl\\\";s:11:\\\"toquelauano\\\";s:2:\\\"tl\\\";s:6:\\\"tagalo\\\";s:3:\\\"tlh\\\";s:7:\\\"klingon\\\";s:3:\\\"tli\\\";s:9:\\\"tlinguite\\\";s:3:\\\"tmh\\\";s:9:\\\"tamaxeque\\\";s:2:\\\"tn\\\";s:6:\\\"tswana\\\";s:2:\\\"to\\\";s:9:\\\"tonganês\\\";s:3:\\\"tog\\\";s:18:\\\"tonganês de Nyasa\\\";s:3:\\\"tpi\\\";s:9:\\\"tok pisin\\\";s:2:\\\"tr\\\";s:5:\\\"turco\\\";s:2:\\\"ts\\\";s:6:\\\"tsonga\\\";s:3:\\\"tsi\\\";s:9:\\\"tsimshian\\\";s:2:\\\"tt\\\";s:5:\\\"tatar\\\";s:3:\\\"tum\\\";s:7:\\\"tumbuka\\\";s:3:\\\"tup\\\";s:11:\\\"idioma tupi\\\";s:3:\\\"tut\\\";s:14:\\\"idioma altaico\\\";s:3:\\\"tvl\\\";s:9:\\\"tuvaluano\\\";s:2:\\\"tw\\\";s:3:\\\"twi\\\";s:2:\\\"ty\\\";s:8:\\\"taitiano\\\";s:3:\\\"tyv\\\";s:8:\\\"tuvinian\\\";s:3:\\\"udm\\\";s:6:\\\"udmurt\\\";s:2:\\\"ug\\\";s:6:\\\"uighur\\\";s:3:\\\"uga\\\";s:10:\\\"ugarítico\\\";s:2:\\\"uk\\\";s:9:\\\"ucraniano\\\";s:3:\\\"umb\\\";s:7:\\\"umbundu\\\";s:3:\\\"und\\\";s:32:\\\"idioma inválido ou desconhecido\\\";s:2:\\\"ur\\\";s:4:\\\"urdu\\\";s:2:\\\"uz\\\";s:7:\\\"usbeque\\\";s:3:\\\"vai\\\";s:3:\\\"vai\\\";s:2:\\\"ve\\\";s:5:\\\"venda\\\";s:2:\\\"vi\\\";s:10:\\\"vietnamita\\\";s:2:\\\"vo\\\";s:9:\\\"volapuque\\\";s:3:\\\"vot\\\";s:5:\\\"votic\\\";s:2:\\\"wa\\\";s:6:\\\"valão\\\";s:3:\\\"wak\\\";s:15:\\\"idioma wakashan\\\";s:3:\\\"wal\\\";s:6:\\\"walamo\\\";s:3:\\\"war\\\";s:5:\\\"waray\\\";s:3:\\\"was\\\";s:5:\\\"washo\\\";s:3:\\\"wen\\\";s:15:\\\"idioma sorábio\\\";s:2:\\\"wo\\\";s:7:\\\"uólofe\\\";s:3:\\\"xal\\\";s:6:\\\"kalmyk\\\";s:2:\\\"xh\\\";s:4:\\\"xosa\\\";s:3:\\\"yao\\\";s:3:\\\"yao\\\";s:3:\\\"yap\\\";s:6:\\\"yapese\\\";s:2:\\\"yi\\\";s:8:\\\"iídiche\\\";s:2:\\\"yo\\\";s:6:\\\"ioruba\\\";s:3:\\\"ypk\\\";s:15:\\\"idioma iúpique\\\";s:2:\\\"za\\\";s:6:\\\"zhuang\\\";s:3:\\\"zap\\\";s:8:\\\"zapoteca\\\";s:3:\\\"zbl\\\";s:14:\\\"símbolos blis\\\";s:3:\\\"zen\\\";s:6:\\\"zenaga\\\";s:2:\\\"zh\\\";s:7:\\\"chinês\\\";s:7:\\\"zh_Hans\\\";s:20:\\\"chinês simplificado\\\";s:7:\\\"zh_Hant\\\";s:19:\\\"chinês tradicional\\\";s:3:\\\"znd\\\";s:5:\\\"zande\\\";s:2:\\\"zu\\\";s:4:\\\"zulu\\\";s:3:\\\"zun\\\";s:5:\\\"zunhi\\\";s:3:\\\"zxx\\\";s:26:\\\"sem conteúdo linguístico\\\";s:3:\\\"zza\\\";s:4:\\\"zaza\\\";}s:12:\\\"LocaleScript\\\";a:1:{i:0;s:4:\\\"Latn\\\";}s:14:\\\"NumberElements\\\";a:12:{i:0;s:1:\\\",\\\";i:1;s:1:\\\".\\\";i:2;s:1:\\\";\\\";i:3;s:1:\\\"%\\\";i:4;s:1:\\\"0\\\";i:5;s:1:\\\"#\\\";i:6;s:1:\\\"-\\\";i:7;s:1:\\\"E\\\";i:8;s:3:\\\"‰\\\";i:9;s:3:\\\"∞\\\";i:10;s:3:\\\"NaN\\\";i:11;s:1:\\\"+\\\";}s:14:\\\"NumberPatterns\\\";a:4:{i:0;s:9:\\\"#,##0.###\\\";i:1;s:23:\\\"¤#,##0.00;(¤#,##0.00)\\\";i:2;s:6:\\\"#,##0%\\\";i:3;s:3:\\\"#E0\\\";}s:7:\\\"Scripts\\\";a:130:{s:4:\\\"Arab\\\";s:6:\\\"árabe\\\";s:4:\\\"Armi\\\";s:4:\\\"armi\\\";s:4:\\\"Armn\\\";s:8:\\\"armênio\\\";s:4:\\\"Avst\\\";s:9:\\\"avéstico\\\";s:4:\\\"Bali\\\";s:8:\\\"balinês\\\";s:4:\\\"Batk\\\";s:7:\\\"bataque\\\";s:4:\\\"Beng\\\";s:7:\\\"bengali\\\";s:4:\\\"Blis\\\";s:15:\\\"símbolos bliss\\\";s:4:\\\"Bopo\\\";s:8:\\\"bopomofo\\\";s:4:\\\"Brah\\\";s:6:\\\"brahmi\\\";s:4:\\\"Brai\\\";s:7:\\\"braille\\\";s:4:\\\"Bugi\\\";s:8:\\\"buginês\\\";s:4:\\\"Buhd\\\";s:5:\\\"buhid\\\";s:4:\\\"Cakm\\\";s:4:\\\"cakm\\\";s:4:\\\"Cans\\\";s:54:\\\"escrita silábica unificada dos aborígenes canadenses\\\";s:4:\\\"Cari\\\";s:7:\\\"cariano\\\";s:4:\\\"Cham\\\";s:4:\\\"cham\\\";s:4:\\\"Cher\\\";s:8:\\\"cherokee\\\";s:4:\\\"Cirt\\\";s:5:\\\"cirth\\\";s:4:\\\"Copt\\\";s:8:\\\"cóptico\\\";s:4:\\\"Cprt\\\";s:8:\\\"cipriota\\\";s:4:\\\"Cyrl\\\";s:9:\\\"cirílico\\\";s:4:\\\"Cyrs\\\";s:30:\\\"cirílico eslavo eclesiástico\\\";s:4:\\\"Deva\\\";s:11:\\\"devanágari\\\";s:4:\\\"Dsrt\\\";s:7:\\\"deseret\\\";s:4:\\\"Egyd\\\";s:18:\\\"demótico egípcio\\\";s:4:\\\"Egyh\\\";s:19:\\\"hierático egípcio\\\";s:4:\\\"Egyp\\\";s:22:\\\"hieróglifos egípcios\\\";s:4:\\\"Ethi\\\";s:9:\\\"etiópico\\\";s:4:\\\"Geok\\\";s:18:\\\"khutsuri georgiano\\\";s:4:\\\"Geor\\\";s:9:\\\"georgiano\\\";s:4:\\\"Glag\\\";s:12:\\\"glagolítico\\\";s:4:\\\"Goth\\\";s:7:\\\"gótico\\\";s:4:\\\"Grek\\\";s:5:\\\"grego\\\";s:4:\\\"Gujr\\\";s:8:\\\"gujerati\\\";s:4:\\\"Guru\\\";s:8:\\\"gurmuqui\\\";s:4:\\\"Hang\\\";s:6:\\\"hangul\\\";s:4:\\\"Hani\\\";s:3:\\\"han\\\";s:4:\\\"Hano\\\";s:7:\\\"hanunoo\\\";s:4:\\\"Hans\\\";s:16:\\\"han simplificado\\\";s:4:\\\"Hant\\\";s:15:\\\"han tradicional\\\";s:4:\\\"Hebr\\\";s:8:\\\"hebraico\\\";s:4:\\\"Hira\\\";s:8:\\\"hiragana\\\";s:4:\\\"Hmng\\\";s:12:\\\"pahawh hmong\\\";s:4:\\\"Hrkt\\\";s:20:\\\"katakana ou hiragana\\\";s:4:\\\"Hung\\\";s:15:\\\"húngaro antigo\\\";s:4:\\\"Inds\\\";s:4:\\\"indo\\\";s:4:\\\"Ital\\\";s:15:\\\"itálico antigo\\\";s:4:\\\"Java\\\";s:8:\\\"javanês\\\";s:4:\\\"Jpan\\\";s:8:\\\"japonês\\\";s:4:\\\"Kali\\\";s:8:\\\"kayah li\\\";s:4:\\\"Kana\\\";s:8:\\\"katakana\\\";s:4:\\\"Khar\\\";s:10:\\\"kharoshthi\\\";s:4:\\\"Khmr\\\";s:5:\\\"khmer\\\";s:4:\\\"Knda\\\";s:7:\\\"kannada\\\";s:4:\\\"Kore\\\";s:7:\\\"coreano\\\";s:4:\\\"Kthi\\\";s:4:\\\"kthi\\\";s:4:\\\"Lana\\\";s:5:\\\"lanna\\\";s:4:\\\"Laoo\\\";s:3:\\\"lao\\\";s:4:\\\"Latf\\\";s:13:\\\"latim fraktur\\\";s:4:\\\"Latg\\\";s:14:\\\"latim gaélico\\\";s:4:\\\"Latn\\\";s:5:\\\"latim\\\";s:4:\\\"Lepc\\\";s:6:\\\"lepcha\\\";s:4:\\\"Limb\\\";s:5:\\\"limbu\\\";s:4:\\\"Lina\\\";s:8:\\\"A linear\\\";s:4:\\\"Linb\\\";s:8:\\\"B linear\\\";s:4:\\\"Lyci\\\";s:6:\\\"lício\\\";s:4:\\\"Lydi\\\";s:6:\\\"lídio\\\";s:4:\\\"Mand\\\";s:8:\\\"mandaico\\\";s:4:\\\"Mani\\\";s:10:\\\"maniqueano\\\";s:4:\\\"Maya\\\";s:18:\\\"hieróglifos maias\\\";s:4:\\\"Mero\\\";s:10:\\\"meroítico\\\";s:4:\\\"Mlym\\\";s:8:\\\"malaiala\\\";s:4:\\\"Mong\\\";s:6:\\\"mongol\\\";s:4:\\\"Moon\\\";s:4:\\\"moon\\\";s:4:\\\"Mtei\\\";s:12:\\\"meitei mayek\\\";s:4:\\\"Mymr\\\";s:9:\\\"birmanês\\\";s:4:\\\"Nkoo\\\";s:4:\\\"n'ko\\\";s:4:\\\"Ogam\\\";s:8:\\\"ogâmico\\\";s:4:\\\"Olck\\\";s:8:\\\"ol chiki\\\";s:4:\\\"Orkh\\\";s:6:\\\"orkhon\\\";s:4:\\\"Orya\\\";s:5:\\\"oriya\\\";s:4:\\\"Osma\\\";s:7:\\\"osmania\\\";s:4:\\\"Perm\\\";s:15:\\\"pérmico antigo\\\";s:4:\\\"Phag\\\";s:8:\\\"phags-pa\\\";s:4:\\\"Phli\\\";s:4:\\\"phli\\\";s:4:\\\"Phlp\\\";s:4:\\\"phlp\\\";s:4:\\\"Phlv\\\";s:14:\\\"pahlavi antigo\\\";s:4:\\\"Phnx\\\";s:8:\\\"fenício\\\";s:4:\\\"Plrd\\\";s:17:\\\"fonético pollard\\\";s:4:\\\"Prti\\\";s:4:\\\"prti\\\";s:4:\\\"Qaai\\\";s:7:\\\"herdado\\\";s:4:\\\"Rjng\\\";s:6:\\\"rejang\\\";s:4:\\\"Roro\\\";s:10:\\\"rongorongo\\\";s:4:\\\"Runr\\\";s:7:\\\"rúnico\\\";s:4:\\\"Samr\\\";s:10:\\\"samaritano\\\";s:4:\\\"Sara\\\";s:6:\\\"sarati\\\";s:4:\\\"Saur\\\";s:10:\\\"saurashtra\\\";s:4:\\\"Sgnw\\\";s:11:\\\"signwriting\\\";s:4:\\\"Shaw\\\";s:8:\\\"shaviano\\\";s:4:\\\"Sinh\\\";s:9:\\\"cingalês\\\";s:4:\\\"Sund\\\";s:9:\\\"sundanês\\\";s:4:\\\"Sylo\\\";s:12:\\\"syloti nagri\\\";s:4:\\\"Syrc\\\";s:8:\\\"siríaco\\\";s:4:\\\"Syre\\\";s:19:\\\"siríaco estrangelo\\\";s:4:\\\"Syrj\\\";s:18:\\\"siríaco ocidental\\\";s:4:\\\"Syrn\\\";s:17:\\\"siríaco oriental\\\";s:4:\\\"Tagb\\\";s:8:\\\"tagbanwa\\\";s:4:\\\"Tale\\\";s:6:\\\"tai Le\\\";s:4:\\\"Talu\\\";s:12:\\\"novo tai lue\\\";s:4:\\\"Taml\\\";s:6:\\\"tâmil\\\";s:4:\\\"Tavt\\\";s:4:\\\"tavt\\\";s:4:\\\"Telu\\\";s:7:\\\"télugo\\\";s:4:\\\"Teng\\\";s:7:\\\"tengwar\\\";s:4:\\\"Tfng\\\";s:8:\\\"tifinagh\\\";s:4:\\\"Tglg\\\";s:6:\\\"tagalo\\\";s:4:\\\"Thaa\\\";s:6:\\\"thaana\\\";s:4:\\\"Thai\\\";s:10:\\\"tailandês\\\";s:4:\\\"Tibt\\\";s:8:\\\"tibetano\\\";s:4:\\\"Ugar\\\";s:10:\\\"ugarítico\\\";s:4:\\\"Vaii\\\";s:3:\\\"vai\\\";s:4:\\\"Visp\\\";s:14:\\\"visible speech\\\";s:4:\\\"Xpeo\\\";s:12:\\\"persa antigo\\\";s:4:\\\"Xsux\\\";s:28:\\\"sumério-acadiano cuneiforme\\\";s:4:\\\"Yiii\\\";s:2:\\\"yi\\\";s:4:\\\"Zmth\\\";s:4:\\\"zmth\\\";s:4:\\\"Zsym\\\";s:4:\\\"zsym\\\";s:4:\\\"Zxxx\\\";s:7:\\\"ágrafo\\\";s:4:\\\"Zyyy\\\";s:5:\\\"comum\\\";s:4:\\\"Zzzz\\\";s:33:\\\"escrita desconhecida ou inválida\\\";}s:5:\\\"Types\\\";a:2:{s:8:\\\"calendar\\\";a:9:{s:8:\\\"buddhist\\\";s:19:\\\"Calendário Budista\\\";s:7:\\\"chinese\\\";s:19:\\\"Calendário Chinês\\\";s:9:\\\"gregorian\\\";s:22:\\\"Calendário Gregoriano\\\";s:6:\\\"hebrew\\\";s:20:\\\"Calendário Hebraico\\\";s:6:\\\"indian\\\";s:28:\\\"Calendário Nacional Indiano\\\";s:7:\\\"islamic\\\";s:21:\\\"Calendário Islâmico\\\";s:13:\\\"islamic-civil\\\";s:27:\\\"Calendário Civil Islâmico\\\";s:8:\\\"japanese\\\";s:20:\\\"Calendário Japonês\\\";s:3:\\\"roc\\\";s:34:\\\"Calendário da República da China\\\";}s:9:\\\"collation\\\";a:7:{s:7:\\\"big5han\\\";s:35:\\\"Ordem do Chinês Tradicional - Big5\\\";s:6:\\\"direct\\\";s:12:\\\"Ordem Direta\\\";s:9:\\\"gb2312han\\\";s:38:\\\"Ordem do Chinês Simplificado - GB2312\\\";s:9:\\\"phonebook\\\";s:26:\\\"Ordem de Lista Telefônica\\\";s:6:\\\"pinyin\\\";s:13:\\\"Ordem Pin-yin\\\";s:6:\\\"stroke\\\";s:17:\\\"Ordem dos Traços\\\";s:11:\\\"traditional\\\";s:17:\\\"Ordem Tradicional\\\";}}s:8:\\\"Variants\\\";a:27:{s:8:\\\"1606NICT\\\";s:23:\\\"francês antigo de 1606\\\";s:8:\\\"1694ACAD\\\";s:25:\\\"francês da idade moderna\\\";i:1901;s:29:\\\"ortografia alemã tradicional\\\";i:1994;s:30:\\\"ortografia resiana padronizada\\\";i:1996;s:25:\\\"ortografia alemã de 1996\\\";s:7:\\\"AREVELA\\\";s:17:\\\"armênio oriental\\\";s:7:\\\"AREVMDA\\\";s:18:\\\"armênio ocidental\\\";s:8:\\\"BAKU1926\\\";s:31:\\\"alfabeto latino turco unificado\\\";s:5:\\\"BISKE\\\";s:24:\\\"dialeto san giorgio/bila\\\";s:5:\\\"BOONT\\\";s:9:\\\"boontling\\\";s:6:\\\"FONIPA\\\";s:45:\\\"fonética do Alfabeto Fonético Internacional\\\";s:6:\\\"FONUPA\\\";s:40:\\\"fonética do Alfabeto Fonético Urálico\\\";s:5:\\\"LIPAW\\\";s:25:\\\"dialeto lipovaz de Resian\\\";s:7:\\\"MONOTON\\\";s:11:\\\"monotônico\\\";s:5:\\\"NEDIS\\\";s:16:\\\"dialeto natisone\\\";s:5:\\\"NJIVA\\\";s:19:\\\"dialeto gniva/njiva\\\";s:5:\\\"OSOJS\\\";s:23:\\\"dialeto oseacco/osojane\\\";s:7:\\\"POLYTON\\\";s:11:\\\"politônico\\\";s:5:\\\"POSIX\\\";s:10:\\\"computador\\\";s:7:\\\"REVISED\\\";s:19:\\\"Ortografia Revisada\\\";s:5:\\\"ROZAJ\\\";s:7:\\\"resiano\\\";s:5:\\\"SAAHO\\\";s:4:\\\"saho\\\";s:8:\\\"SCOTLAND\\\";s:24:\\\"inglês padrão escocês\\\";s:6:\\\"SCOUSE\\\";s:6:\\\"scouse\\\";s:5:\\\"SOLBA\\\";s:25:\\\"dialeto stolvizza/solbica\\\";s:6:\\\"TARASK\\\";s:23:\\\"ortografia taraskievica\\\";s:8:\\\"VALENCIA\\\";s:10:\\\"valenciano\\\";}s:7:\\\"Version\\\";s:5:\\\"1.126\\\";s:8:\\\"calendar\\\";a:4:{s:8:\\\"buddhist\\\";a:1:{s:16:\\\"DateTimePatterns\\\";a:13:{i:0;s:22:\\\"HH'h'mm'min'ss's' zzzz\\\";i:1;s:19:\\\"HH'h'mm'min'ss's' z\\\";i:2;s:8:\\\"HH:mm:ss\\\";i:3;s:5:\\\"HH:mm\\\";i:4;s:26:\\\"EEEE, d 'de' MMMM 'de' y G\\\";i:5;s:20:\\\"d 'de' MMMM 'de' y G\\\";i:6;s:20:\\\"d 'de' MMMM 'de' y G\\\";i:7;s:8:\\\"d/M/yyyy\\\";i:8;s:7:\\\"{1} {0}\\\";i:9;s:7:\\\"{1} {0}\\\";i:10;s:7:\\\"{1} {0}\\\";i:11;s:7:\\\"{1} {0}\\\";i:12;s:7:\\\"{1} {0}\\\";}}s:9:\\\"gregorian\\\";a:9:{s:11:\\\"AmPmMarkers\\\";a:2:{i:0;s:2:\\\"AM\\\";i:1;s:2:\\\"PM\\\";}s:16:\\\"DateTimePatterns\\\";a:13:{i:0;s:22:\\\"HH'h'mm'min'ss's' zzzz\\\";i:1;s:19:\\\"HH'h'mm'min'ss's' z\\\";i:2;s:8:\\\"HH:mm:ss\\\";i:3;s:5:\\\"HH:mm\\\";i:4;s:24:\\\"EEEE, d 'de' MMMM 'de' y\\\";i:5;s:18:\\\"d 'de' MMMM 'de' y\\\";i:6;s:10:\\\"dd/MM/yyyy\\\";i:7;s:8:\\\"dd/MM/yy\\\";i:8;s:7:\\\"{1} {0}\\\";i:9;s:7:\\\"{1} {0}\\\";i:10;s:7:\\\"{1} {0}\\\";i:11;s:7:\\\"{1} {0}\\\";i:12;s:7:\\\"{1} {0}\\\";}s:16:\\\"availableFormats\\\";a:31:{s:4:\\\"EEEd\\\";s:6:\\\"EEE, d\\\";s:4:\\\"HHmm\\\";s:7:\\\"HH'h'mm\\\";s:6:\\\"HHmmss\\\";s:16:\\\"H'h'mm'min'ss's'\\\";s:2:\\\"Hm\\\";s:6:\\\"H'h'mm\\\";s:1:\\\"M\\\";s:1:\\\"L\\\";s:3:\\\"MEd\\\";s:10:\\\"EEE, dd/MM\\\";s:3:\\\"MMM\\\";s:3:\\\"LLL\\\";s:5:\\\"MMMEd\\\";s:15:\\\"EEE, d 'de' MMM\\\";s:6:\\\"MMMMEd\\\";s:16:\\\"EEE, d 'de' MMMM\\\";s:5:\\\"MMMMd\\\";s:11:\\\"d 'de' MMMM\\\";s:4:\\\"MMMd\\\";s:10:\\\"d 'de' MMM\\\";s:4:\\\"MMdd\\\";s:5:\\\"dd/MM\\\";s:2:\\\"Md\\\";s:3:\\\"d/M\\\";s:1:\\\"d\\\";s:1:\\\"d\\\";s:4:\\\"mmss\\\";s:12:\\\"mm'min'ss's'\\\";s:2:\\\"ms\\\";s:12:\\\"mm'min'ss's'\\\";s:1:\\\"y\\\";s:1:\\\"y\\\";s:2:\\\"yM\\\";s:7:\\\"MM/yyyy\\\";s:4:\\\"yMEd\\\";s:15:\\\"EEE, dd/MM/yyyy\\\";s:4:\\\"yMMM\\\";s:10:\\\"MMM 'de' y\\\";s:6:\\\"yMMMEd\\\";s:22:\\\"EEE, d 'de' MMM 'de' y\\\";s:5:\\\"yMMMM\\\";s:11:\\\"MMMM 'de' y\\\";s:2:\\\"yQ\\\";s:6:\\\"yyyy Q\\\";s:4:\\\"yQQQ\\\";s:5:\\\"y QQQ\\\";s:4:\\\"yyMM\\\";s:5:\\\"MM/yy\\\";s:5:\\\"yyMMM\\\";s:11:\\\"MMM 'de' yy\\\";s:9:\\\"yyMMMEEEd\\\";s:23:\\\"EEE, d 'de' MMM 'de' yy\\\";s:6:\\\"yyMMMd\\\";s:18:\\\"d 'de' MMM 'de' yy\\\";s:3:\\\"yyQ\\\";s:4:\\\"Q yy\\\";s:6:\\\"yyyyMM\\\";s:7:\\\"MM/yyyy\\\";s:7:\\\"yyyyMMM\\\";s:10:\\\"MMM 'de' y\\\";}s:8:\\\"dayNames\\\";a:2:{s:6:\\\"format\\\";a:2:{s:11:\\\"abbreviated\\\";a:7:{i:0;s:3:\\\"dom\\\";i:1;s:3:\\\"seg\\\";i:2;s:3:\\\"ter\\\";i:3;s:3:\\\"qua\\\";i:4;s:3:\\\"qui\\\";i:5;s:3:\\\"sex\\\";i:6;s:4:\\\"sáb\\\";}s:4:\\\"wide\\\";a:7:{i:0;s:7:\\\"domingo\\\";i:1;s:13:\\\"segunda-feira\\\";i:2;s:12:\\\"terça-feira\\\";i:3;s:12:\\\"quarta-feira\\\";i:4;s:12:\\\"quinta-feira\\\";i:5;s:11:\\\"sexta-feira\\\";i:6;s:7:\\\"sábado\\\";}}s:11:\\\"stand-alone\\\";a:1:{s:6:\\\"narrow\\\";a:7:{i:0;s:1:\\\"D\\\";i:1;s:1:\\\"S\\\";i:2;s:1:\\\"T\\\";i:3;s:1:\\\"Q\\\";i:4;s:1:\\\"Q\\\";i:5;s:1:\\\"S\\\";i:6;s:1:\\\"S\\\";}}}s:4:\\\"eras\\\";a:2:{s:11:\\\"abbreviated\\\";a:2:{i:0;s:4:\\\"a.C.\\\";i:1;s:4:\\\"d.C.\\\";}s:4:\\\"wide\\\";a:2:{i:0;s:15:\\\"Antes de Cristo\\\";i:1;s:13:\\\"Ano do Senhor\\\";}}s:6:\\\"fields\\\";a:11:{s:3:\\\"day\\\";a:2:{s:2:\\\"dn\\\";s:3:\\\"Dia\\\";s:8:\\\"relative\\\";a:7:{i:-1;s:5:\\\"Ontem\\\";i:-2;s:9:\\\"Anteontem\\\";i:-3;s:14:\\\"Há três dias\\\";i:0;s:4:\\\"Hoje\\\";i:1;s:7:\\\"Amanhã\\\";i:2;s:17:\\\"Depois de amanhã\\\";i:3;s:18:\\\"Daqui a três dias\\\";}}s:9:\\\"dayperiod\\\";a:1:{s:2:\\\"dn\\\";s:15:\\\"Período do dia\\\";}s:3:\\\"era\\\";a:1:{s:2:\\\"dn\\\";s:3:\\\"Era\\\";}s:4:\\\"hour\\\";a:1:{s:2:\\\"dn\\\";s:4:\\\"Hora\\\";}s:6:\\\"minute\\\";a:1:{s:2:\\\"dn\\\";s:6:\\\"Minuto\\\";}s:5:\\\"month\\\";a:1:{s:2:\\\"dn\\\";s:4:\\\"Mês\\\";}s:6:\\\"second\\\";a:1:{s:2:\\\"dn\\\";s:7:\\\"Segundo\\\";}s:4:\\\"week\\\";a:1:{s:2:\\\"dn\\\";s:6:\\\"Semana\\\";}s:7:\\\"weekday\\\";a:1:{s:2:\\\"dn\\\";s:13:\\\"Dia da semana\\\";}s:4:\\\"year\\\";a:1:{s:2:\\\"dn\\\";s:3:\\\"Ano\\\";}s:4:\\\"zone\\\";a:1:{s:2:\\\"dn\\\";s:4:\\\"Fuso\\\";}}s:15:\\\"intervalFormats\\\";a:21:{s:1:\\\"M\\\";a:1:{s:1:\\\"M\\\";s:3:\\\"M-M\\\";}s:3:\\\"MEd\\\";a:2:{s:1:\\\"M\\\";s:19:\\\"E, dd/MM - E, dd/MM\\\";s:1:\\\"d\\\";s:19:\\\"E, dd/MM - E, dd/MM\\\";}s:3:\\\"MMM\\\";a:1:{s:1:\\\"M\\\";s:9:\\\"MMM - MMM\\\";}s:5:\\\"MMMEd\\\";a:2:{s:1:\\\"M\\\";s:29:\\\"E, d 'de' MMM - E, d 'de' MMM\\\";s:1:\\\"d\\\";s:20:\\\"E, d - E, d 'de' MMM\\\";}s:4:\\\"MMMM\\\";a:1:{s:1:\\\"M\\\";s:11:\\\"LLLL - LLLL\\\";}s:4:\\\"MMMd\\\";a:2:{s:1:\\\"M\\\";s:23:\\\"d 'de' MMM - d 'de' MMM\\\";s:1:\\\"d\\\";s:12:\\\"d-d 'de' MMM\\\";}s:2:\\\"Md\\\";a:2:{s:1:\\\"M\\\";s:13:\\\"dd/MM - dd/MM\\\";s:1:\\\"d\\\";s:13:\\\"dd/MM - dd/MM\\\";}s:1:\\\"d\\\";a:1:{s:1:\\\"d\\\";s:3:\\\"d-d\\\";}s:8:\\\"fallback\\\";s:9:\\\"{0} - {1}\\\";s:1:\\\"h\\\";a:2:{s:1:\\\"a\\\";s:11:\\\"H'h' - H'h'\\\";s:1:\\\"h\\\";s:11:\\\"H'h' - H'h'\\\";}s:2:\\\"hm\\\";a:3:{s:1:\\\"a\\\";s:15:\\\"H'h'mm - H'h'mm\\\";s:1:\\\"h\\\";s:15:\\\"H'h'mm - H'h'mm\\\";s:1:\\\"m\\\";s:15:\\\"H'h'mm - H'h'mm\\\";}s:3:\\\"hmv\\\";a:3:{s:1:\\\"a\\\";s:17:\\\"H'h'mm - H'h'mm v\\\";s:1:\\\"h\\\";s:17:\\\"H'h'mm - H'h'mm v\\\";s:1:\\\"m\\\";s:17:\\\"H'h'mm - H'h'mm v\\\";}s:2:\\\"hv\\\";a:2:{s:1:\\\"a\\\";s:17:\\\"H'h'mm - H'h'mm v\\\";s:1:\\\"h\\\";s:17:\\\"H'h'mm - H'h'mm v\\\";}s:1:\\\"y\\\";a:1:{s:1:\\\"y\\\";s:5:\\\"y - y\\\";}s:2:\\\"yM\\\";a:2:{s:1:\\\"M\\\";s:13:\\\"MM/yy - MM/yy\\\";s:1:\\\"y\\\";s:13:\\\"MM/yy - MM/yy\\\";}s:4:\\\"yMEd\\\";a:3:{s:1:\\\"M\\\";s:25:\\\"E, dd/MM/yy - E, dd/MM/yy\\\";s:1:\\\"d\\\";s:25:\\\"E, dd/MM/yy - E, dd/MM/yy\\\";s:1:\\\"y\\\";s:25:\\\"E, dd/MM/yy - E, dd/MM/yy\\\";}s:4:\\\"yMMM\\\";a:2:{s:1:\\\"M\\\";s:14:\\\"MMM-MMM 'de' y\\\";s:1:\\\"y\\\";s:23:\\\"MMM 'de' y - MMM 'de' y\\\";}s:6:\\\"yMMMEd\\\";a:3:{s:1:\\\"M\\\";s:36:\\\"E, d 'de' MMM - E, d 'de' MMM 'de' y\\\";s:1:\\\"d\\\";s:27:\\\"E, d - E, d 'de' MMM 'de' y\\\";s:1:\\\"y\\\";s:43:\\\"E, d 'de' MMM 'de' y - E, d 'de' MMM 'de' y\\\";}s:5:\\\"yMMMM\\\";a:2:{s:1:\\\"M\\\";s:14:\\\"MM – MM-yyyy\\\";s:1:\\\"y\\\";s:19:\\\"MM-yyyy – MM-yyyy\\\";}s:5:\\\"yMMMd\\\";a:3:{s:1:\\\"M\\\";s:30:\\\"d 'de' MMM - d 'de' MMM 'de' y\\\";s:1:\\\"d\\\";s:19:\\\"d-d 'de' MMM 'de' y\\\";s:1:\\\"y\\\";s:37:\\\"d 'de' MMM 'de' y - d 'de' MMM 'de' y\\\";}s:3:\\\"yMd\\\";a:3:{s:1:\\\"M\\\";s:19:\\\"dd/MM/yy - dd/MM/yy\\\";s:1:\\\"d\\\";s:19:\\\"dd/MM/yy - dd/MM/yy\\\";s:1:\\\"y\\\";s:19:\\\"dd/MM/yy - dd/MM/yy\\\";}}s:10:\\\"monthNames\\\";a:2:{s:6:\\\"format\\\";a:2:{s:11:\\\"abbreviated\\\";a:12:{i:0;s:3:\\\"jan\\\";i:1;s:3:\\\"fev\\\";i:2;s:3:\\\"mar\\\";i:3;s:3:\\\"abr\\\";i:4;s:3:\\\"mai\\\";i:5;s:3:\\\"jun\\\";i:6;s:3:\\\"jul\\\";i:7;s:3:\\\"ago\\\";i:8;s:3:\\\"set\\\";i:9;s:3:\\\"out\\\";i:10;s:3:\\\"nov\\\";i:11;s:3:\\\"dez\\\";}s:4:\\\"wide\\\";a:12:{i:0;s:7:\\\"janeiro\\\";i:1;s:9:\\\"fevereiro\\\";i:2;s:6:\\\"março\\\";i:3;s:5:\\\"abril\\\";i:4;s:4:\\\"maio\\\";i:5;s:5:\\\"junho\\\";i:6;s:5:\\\"julho\\\";i:7;s:6:\\\"agosto\\\";i:8;s:8:\\\"setembro\\\";i:9;s:7:\\\"outubro\\\";i:10;s:8:\\\"novembro\\\";i:11;s:8:\\\"dezembro\\\";}}s:11:\\\"stand-alone\\\";a:1:{s:6:\\\"narrow\\\";a:12:{i:0;s:1:\\\"J\\\";i:1;s:1:\\\"F\\\";i:2;s:1:\\\"M\\\";i:3;s:1:\\\"A\\\";i:4;s:1:\\\"M\\\";i:5;s:1:\\\"J\\\";i:6;s:1:\\\"J\\\";i:7;s:1:\\\"A\\\";i:8;s:1:\\\"S\\\";i:9;s:1:\\\"O\\\";i:10;s:1:\\\"N\\\";i:11;s:1:\\\"D\\\";}}}s:8:\\\"quarters\\\";a:2:{s:6:\\\"format\\\";a:2:{s:11:\\\"abbreviated\\\";a:4:{i:0;s:2:\\\"T1\\\";i:1;s:2:\\\"T2\\\";i:2;s:2:\\\"T3\\\";i:3;s:2:\\\"T4\\\";}s:4:\\\"wide\\\";a:4:{i:0;s:13:\\\"1º trimestre\\\";i:1;s:13:\\\"2º trimestre\\\";i:2;s:13:\\\"3º trimestre\\\";i:3;s:13:\\\"4º trimestre\\\";}}s:11:\\\"stand-alone\\\";a:1:{s:6:\\\"narrow\\\";a:4:{i:0;s:1:\\\"1\\\";i:1;s:1:\\\"2\\\";i:2;s:1:\\\"3\\\";i:3;s:1:\\\"4\\\";}}}}s:8:\\\"japanese\\\";a:1:{s:16:\\\"DateTimePatterns\\\";a:13:{i:0;s:22:\\\"HH'h'mm'min'ss's' zzzz\\\";i:1;s:19:\\\"HH'h'mm'min'ss's' z\\\";i:2;s:8:\\\"HH:mm:ss\\\";i:3;s:5:\\\"HH:mm\\\";i:4;s:16:\\\"EEEE, d MMMM y G\\\";i:5;s:20:\\\"d 'de' MMMM 'de' y G\\\";i:6;s:9:\\\"d MMM y G\\\";i:7;s:6:\\\"d/M/yy\\\";i:8;s:7:\\\"{1} {0}\\\";i:9;s:7:\\\"{1} {0}\\\";i:10;s:7:\\\"{1} {0}\\\";i:11;s:7:\\\"{1} {0}\\\";i:12;s:7:\\\"{1} {0}\\\";}}s:3:\\\"roc\\\";a:1:{s:4:\\\"eras\\\";a:2:{s:6:\\\"narrow\\\";a:2:{i:0;s:15:\\\"Antes de R.O.C.\\\";i:1;s:6:\\\"R.O.C.\\\";}s:4:\\\"wide\\\";a:2:{i:0;s:15:\\\"Antes de R.O.C.\\\";i:1;s:6:\\\"R.O.C.\\\";}}}}s:10:\\\"delimiters\\\";a:4:{s:21:\\\"alternateQuotationEnd\\\";s:3:\\\"’\\\";s:23:\\\"alternateQuotationStart\\\";s:3:\\\"‘\\\";s:12:\\\"quotationEnd\\\";s:3:\\\"”\\\";s:14:\\\"quotationStart\\\";s:3:\\\"“\\\";}s:20:\\\"localeDisplayPattern\\\";a:2:{s:7:\\\"pattern\\\";s:9:\\\"{0} ({1})\\\";s:9:\\\"separator\\\";s:2:\\\", \\\";}s:22:\\\"measurementSystemNames\\\";a:2:{s:2:\\\"US\\\";s:9:\\\"americano\\\";s:6:\\\"metric\\\";s:8:\\\"métrico\\\";}s:5:\\\"units\\\";a:7:{s:3:\\\"day\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} dia\\\";s:5:\\\"other\\\";s:8:\\\"{0} dias\\\";}s:4:\\\"hour\\\";a:2:{s:3:\\\"one\\\";s:8:\\\"{0} hora\\\";s:5:\\\"other\\\";s:9:\\\"{0} horas\\\";}s:6:\\\"minute\\\";a:2:{s:3:\\\"one\\\";s:10:\\\"{0} minuto\\\";s:5:\\\"other\\\";s:11:\\\"{0} minutos\\\";}s:5:\\\"month\\\";a:2:{s:3:\\\"one\\\";s:8:\\\"{0} mês\\\";s:5:\\\"other\\\";s:9:\\\"{0} meses\\\";}s:6:\\\"second\\\";a:2:{s:3:\\\"one\\\";s:11:\\\"{0} segundo\\\";s:5:\\\"other\\\";s:12:\\\"{0} segundos\\\";}s:4:\\\"week\\\";a:2:{s:3:\\\"one\\\";s:10:\\\"{0} semana\\\";s:5:\\\"other\\\";s:11:\\\"{0} semanas\\\";}s:4:\\\"year\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} ano\\\";s:5:\\\"other\\\";s:8:\\\"{0} anos\\\";}}s:10:\\\"unitsShort\\\";a:7:{s:3:\\\"day\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} dia\\\";s:5:\\\"other\\\";s:8:\\\"{0} dias\\\";}s:4:\\\"hour\\\";a:2:{s:3:\\\"one\\\";s:5:\\\"{0} h\\\";s:5:\\\"other\\\";s:5:\\\"{0} h\\\";}s:6:\\\"minute\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} min\\\";s:5:\\\"other\\\";s:7:\\\"{0} min\\\";}s:5:\\\"month\\\";a:1:{s:3:\\\"one\\\";s:6:\\\"{0} m.\\\";}s:6:\\\"second\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} seg\\\";s:5:\\\"other\\\";s:7:\\\"{0} seg\\\";}s:4:\\\"week\\\";a:2:{s:3:\\\"one\\\";s:8:\\\"{0} sem.\\\";s:5:\\\"other\\\";s:8:\\\"{0} sem.\\\";}s:4:\\\"year\\\";a:2:{s:3:\\\"one\\\";s:7:\\\"{0} ano\\\";s:5:\\\"other\\\";s:8:\\\"{0} anos\\\";}}s:11:\\\"zoneStrings\\\";a:221:{s:17:\\\"America:Araguaina\\\";a:1:{s:2:\\\"ec\\\";s:10:\\\"Araguaína\\\";}s:25:\\\"America:Argentina:Tucuman\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Tucumã\\\";}s:13:\\\"America:Belem\\\";a:1:{s:2:\\\"ec\\\";s:6:\\\"Belém\\\";}s:14:\\\"America:Cancun\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Cancún\\\";}s:15:\\\"America:Cordoba\\\";a:1:{s:2:\\\"ec\\\";s:8:\\\"Córdoba\\\";}s:14:\\\"America:Cuiaba\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Cuiabá\\\";}s:16:\\\"America:Eirunepe\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Eirunepé\\\";}s:17:\\\"America:Guayaquil\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Guaiaquil\\\";}s:20:\\\"America:Indianapolis\\\";a:1:{s:2:\\\"ec\\\";s:13:\\\"Indianápolis\\\";}s:14:\\\"America:Maceio\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Maceió\\\";}s:14:\\\"America:Merida\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Mérida\\\";}s:19:\\\"America:Mexico_City\\\";a:1:{s:2:\\\"ec\\\";s:17:\\\"Cidade do México\\\";}s:16:\\\"America:New_York\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Nova York\\\";}s:15:\\\"America:Noronha\\\";a:1:{s:2:\\\"ec\\\";s:19:\\\"Fernando de Noronha\\\";}s:27:\\\"America:North_Dakota:Center\\\";a:1:{s:2:\\\"ec\\\";s:24:\\\"Central, Dakota do Norte\\\";}s:30:\\\"America:North_Dakota:New_Salem\\\";a:1:{s:2:\\\"ec\\\";s:26:\\\"New Salen, Dakota do Norte\\\";}s:16:\\\"America:Santarem\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Santarém\\\";}s:17:\\\"America:Sao_Paulo\\\";a:1:{s:2:\\\"ec\\\";s:10:\\\"São Paulo\\\";}s:16:\\\"America:St_Johns\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"St. Johns\\\";}s:21:\\\"Antarctica:South_Pole\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Pólo Sul\\\";}s:12:\\\"Asia:Jakarta\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Jacarta\\\";}s:14:\\\"Asia:Jerusalem\\\";a:1:{s:2:\\\"ec\\\";s:10:\\\"Jerusalém\\\";}s:13:\\\"Asia:Shanghai\\\";a:1:{s:2:\\\"ec\\\";s:6:\\\"Xangai\\\";}s:14:\\\"Asia:Singapore\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Cingapura\\\";}s:10:\\\"Asia:Tokyo\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Tóquio\\\";}s:18:\\\"Asia:Yekaterinburg\\\";a:1:{s:2:\\\"ec\\\";s:13:\\\"Ecaterimburgo\\\";}s:15:\\\"Atlantic:Azores\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Açores\\\";}s:15:\\\"Atlantic:Canary\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Canárias\\\";}s:11:\\\"Etc:Unknown\\\";a:1:{s:2:\\\"ec\\\";s:12:\\\"Desconhecido\\\";}s:16:\\\"Europe:Bucharest\\\";a:1:{s:2:\\\"ec\\\";s:9:\\\"Bucareste\\\";}s:13:\\\"Europe:Lisbon\\\";a:1:{s:2:\\\"ec\\\";s:6:\\\"Lisboa\\\";}s:13:\\\"Europe:London\\\";a:1:{s:2:\\\"ec\\\";s:7:\\\"Londres\\\";}s:13:\\\"Europe:Madrid\\\";a:1:{s:2:\\\"ec\\\";s:5:\\\"Madri\\\";}s:13:\\\"Europe:Moscow\\\";a:1:{s:2:\\\"ec\\\";s:6:\\\"Moscou\\\";}s:16:\\\"Europe:Volgograd\\\";a:1:{s:2:\\\"ec\\\";s:10:\\\"Volgogrado\\\";}s:14:\\\"Pacific:Easter\\\";a:1:{s:2:\\\"ec\\\";s:15:\\\"Ilha de Páscoa\\\";}s:17:\\\"Pacific:Galapagos\\\";a:1:{s:2:\\\"ec\\\";s:10:\\\"Galápagos\\\";}s:14:\\\"Pacific:Tahiti\\\";a:1:{s:2:\\\"ec\\\";s:5:\\\"Taiti\\\";}s:9:\\\"meta:Acre\\\";a:5:{s:2:\\\"cu\\\";i:1;s:2:\\\"ld\\\";s:26:\\\"Horário de Verão do Acre\\\";s:2:\\\"ls\\\";s:16:\\\"Horário do Acre\\\";s:2:\\\"sd\\\";s:4:\\\"ACST\\\";s:2:\\\"ss\\\";s:3:\\\"ACT\\\";}s:16:\\\"meta:Afghanistan\\\";a:1:{s:2:\\\"ls\\\";s:24:\\\"Horário do Afeganistão\\\";}s:19:\\\"meta:Africa_Central\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário da África Central\\\";}s:19:\\\"meta:Africa_Eastern\\\";a:1:{s:2:\\\"ls\\\";s:28:\\\"Horário da África Oriental\\\";}s:20:\\\"meta:Africa_Southern\\\";a:2:{s:2:\\\"lg\\\";s:26:\\\"Horário da África do Sul\\\";s:2:\\\"ls\\\";s:34:\\\"Horário Padrão da África do Sul\\\";}s:19:\\\"meta:Africa_Western\\\";a:2:{s:2:\\\"ld\\\";s:39:\\\"Horário de Verão da África Ocidental\\\";s:2:\\\"ls\\\";s:29:\\\"Horário da África Ocidental\\\";}s:15:\\\"meta:Aktyubinsk\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão do Aktyubinsk\\\";s:2:\\\"ls\\\";s:22:\\\"Horário do Aktyubinsk\\\";}s:11:\\\"meta:Alaska\\\";a:5:{s:2:\\\"cu\\\";i:1;s:2:\\\"ld\\\";s:28:\\\"Horário de Verão do Alasca\\\";s:2:\\\"lg\\\";s:18:\\\"Horário do Alaska\\\";s:2:\\\"ls\\\";s:26:\\\"Horário Padrão do Alasca\\\";s:2:\\\"sg\\\";s:3:\\\"AKT\\\";}s:18:\\\"meta:Alaska_Hawaii\\\";a:4:{s:2:\\\"ld\\\";s:35:\\\"Horário de Verão do Alaska-Havaí\\\";s:2:\\\"lg\\\";s:25:\\\"Horário do Alasca-Havaí\\\";s:2:\\\"ls\\\";s:33:\\\"Horário Padrão do Alaska-Havaí\\\";s:2:\\\"sg\\\";s:3:\\\"AHT\\\";}s:11:\\\"meta:Almaty\\\";a:2:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão do Almaty\\\";s:2:\\\"ls\\\";s:18:\\\"Horário do Almaty\\\";}s:11:\\\"meta:Amazon\\\";a:3:{s:2:\\\"cu\\\";i:1;s:2:\\\"ld\\\";s:30:\\\"Horário de Verão do Amazonas\\\";s:2:\\\"ls\\\";s:20:\\\"Horário do Amazonas\\\";}s:20:\\\"meta:America_Central\\\";a:6:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão Central\\\";s:2:\\\"lg\\\";s:16:\\\"Horário Central\\\";s:2:\\\"ls\\\";s:24:\\\"Horário Padrão Central\\\";s:2:\\\"sd\\\";s:3:\\\"CDT\\\";s:2:\\\"sg\\\";s:2:\\\"CT\\\";s:2:\\\"ss\\\";s:3:\\\"CST\\\";}s:20:\\\"meta:America_Eastern\\\";a:6:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão Oriental\\\";s:2:\\\"lg\\\";s:17:\\\"Horário Oriental\\\";s:2:\\\"ls\\\";s:25:\\\"Horário Padrão Oriental\\\";s:2:\\\"sd\\\";s:3:\\\"EDT\\\";s:2:\\\"sg\\\";s:2:\\\"ET\\\";s:2:\\\"ss\\\";s:3:\\\"EST\\\";}s:21:\\\"meta:America_Mountain\\\";a:6:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão da Montanha\\\";s:2:\\\"lg\\\";s:20:\\\"Horário da Montanha\\\";s:2:\\\"ls\\\";s:28:\\\"Horário Padrão da Montanha\\\";s:2:\\\"sd\\\";s:3:\\\"MDT\\\";s:2:\\\"sg\\\";s:2:\\\"MT\\\";s:2:\\\"ss\\\";s:3:\\\"MST\\\";}s:20:\\\"meta:America_Pacific\\\";a:6:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão do Pacífico\\\";s:2:\\\"lg\\\";s:21:\\\"Horário do Pacífico\\\";s:2:\\\"ls\\\";s:29:\\\"Horário Padrão do Pacífico\\\";s:2:\\\"sd\\\";s:3:\\\"PDT\\\";s:2:\\\"sg\\\";s:2:\\\"PT\\\";s:2:\\\"ss\\\";s:3:\\\"PST\\\";}s:11:\\\"meta:Anadyr\\\";a:2:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão do Anadyr\\\";s:2:\\\"ls\\\";s:18:\\\"Horário do Anadyr\\\";}s:10:\\\"meta:Aqtau\\\";a:2:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão do Aqtau\\\";s:2:\\\"ls\\\";s:17:\\\"Horário do Aqtau\\\";}s:11:\\\"meta:Aqtobe\\\";a:2:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão do Aqtobe\\\";s:2:\\\"ls\\\";s:18:\\\"Horário do Aqtobe\\\";}s:12:\\\"meta:Arabian\\\";a:6:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão da Arábia\\\";s:2:\\\"lg\\\";s:19:\\\"Horário da Arábia\\\";s:2:\\\"ls\\\";s:27:\\\"Horário Padrão da Arábia\\\";s:2:\\\"sd\\\";s:13:\\\"ADT (Arábia)\\\";s:2:\\\"sg\\\";s:12:\\\"AT (Arábia)\\\";s:2:\\\"ss\\\";s:13:\\\"AST (Arábia)\\\";}s:14:\\\"meta:Argentina\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão da Argentina\\\";s:2:\\\"ls\\\";s:21:\\\"Horário da Argentina\\\";}s:22:\\\"meta:Argentina_Western\\\";a:1:{s:2:\\\"ls\\\";s:31:\\\"Horário da Argentina Ocidental\\\";}s:12:\\\"meta:Armenia\\\";a:4:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão da Armênia\\\";s:2:\\\"ls\\\";s:20:\\\"Horário da Armênia\\\";s:2:\\\"sd\\\";s:15:\\\"AMST (Armênia)\\\";s:2:\\\"ss\\\";s:14:\\\"AMT (Armênia)\\\";}s:14:\\\"meta:Ashkhabad\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Ashkhabad\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Ashkhabad\\\";}s:13:\\\"meta:Atlantic\\\";a:6:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão do Atlântico\\\";s:2:\\\"lg\\\";s:22:\\\"Horário do Atlântico\\\";s:2:\\\"ls\\\";s:30:\\\"Horário Padrão do Atlântico\\\";s:2:\\\"sd\\\";s:3:\\\"ADT\\\";s:2:\\\"sg\\\";s:2:\\\"AT\\\";s:2:\\\"ss\\\";s:3:\\\"AST\\\";}s:22:\\\"meta:Australia_Central\\\";a:5:{s:2:\\\"ld\\\";s:40:\\\"Horário de Verão da Austrália Central\\\";s:2:\\\"lg\\\";s:30:\\\"Horário da Austrália Central\\\";s:2:\\\"ls\\\";s:38:\\\"Horário Padrão da Austrália Central\\\";s:2:\\\"sg\\\";s:16:\\\"ACT (Austrália)\\\";s:2:\\\"ss\\\";s:17:\\\"ACST (Austrália)\\\";}s:29:\\\"meta:Australia_CentralWestern\\\";a:4:{s:2:\\\"ld\\\";s:49:\\\"Horário de Verão da Austrália Centro-Ocidental\\\";s:2:\\\"lg\\\";s:39:\\\"Horário da Austrália Centro-Ocidental\\\";s:2:\\\"ls\\\";s:47:\\\"Horário Padrão da Austrália Centro-Ocidental\\\";s:2:\\\"sg\\\";s:4:\\\"ACWT\\\";}s:22:\\\"meta:Australia_Eastern\\\";a:4:{s:2:\\\"ld\\\";s:41:\\\"Horário de Verão da Austrália Oriental\\\";s:2:\\\"lg\\\";s:31:\\\"Horário da Austrália Oriental\\\";s:2:\\\"ls\\\";s:39:\\\"Horário Padrão da Austrália Oriental\\\";s:2:\\\"sg\\\";s:3:\\\"AET\\\";}s:22:\\\"meta:Australia_Western\\\";a:4:{s:2:\\\"ld\\\";s:42:\\\"Horário de Verão da Austrália Ocidental\\\";s:2:\\\"lg\\\";s:32:\\\"Horário da Austrália Ocidental\\\";s:2:\\\"ls\\\";s:40:\\\"Horário Padrão da Austrália Ocidental\\\";s:2:\\\"sg\\\";s:3:\\\"AWT\\\";}s:15:\\\"meta:Azerbaijan\\\";a:2:{s:2:\\\"ld\\\";s:34:\\\"Horário de Verão do Arzeibaijão\\\";s:2:\\\"ls\\\";s:24:\\\"Horário do Arzeibaijão\\\";}s:11:\\\"meta:Azores\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão dos Açores\\\";s:2:\\\"ls\\\";s:20:\\\"Horário dos Açores\\\";}s:9:\\\"meta:Baku\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão de Baku\\\";s:2:\\\"ls\\\";s:16:\\\"Horário de Baku\\\";}s:15:\\\"meta:Bangladesh\\\";a:1:{s:2:\\\"ls\\\";s:22:\\\"Horário de Bangladesh\\\";}s:11:\\\"meta:Bering\\\";a:4:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão de Bering\\\";s:2:\\\"lg\\\";s:18:\\\"Horário de Bering\\\";s:2:\\\"ls\\\";s:26:\\\"Horário Padrão de Bering\\\";s:2:\\\"sg\\\";s:11:\\\"BT (Bering)\\\";}s:11:\\\"meta:Bhutan\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário do Butão\\\";}s:12:\\\"meta:Bolivia\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário da Bolívia\\\";}s:11:\\\"meta:Borneo\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Bornéu\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Bornéu\\\";}s:13:\\\"meta:Brasilia\\\";a:3:{s:2:\\\"cu\\\";i:1;s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Brasília\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Brasília\\\";}s:11:\\\"meta:Brunei\\\";a:1:{s:2:\\\"ls\\\";s:29:\\\"Horário de Brunei Darussalam\\\";}s:15:\\\"meta:Cape_Verde\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão do Cabo Verde\\\";s:2:\\\"ls\\\";s:22:\\\"Horário do Cabo Verde\\\";}s:13:\\\"meta:Chamorro\\\";a:3:{s:2:\\\"lg\\\";s:20:\\\"Horário de Chamorro\\\";s:2:\\\"ls\\\";s:28:\\\"Horário Padrão de Chamorro\\\";s:2:\\\"sg\\\";s:3:\\\"ChT\\\";}s:13:\\\"meta:Changbai\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário de Changbai\\\";}s:12:\\\"meta:Chatham\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Chatham\\\";s:2:\\\"ls\\\";s:30:\\\"Horário de Padrão de Chatham\\\";}s:10:\\\"meta:Chile\\\";a:2:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão do Chile\\\";s:2:\\\"ls\\\";s:17:\\\"Horário do Chile\\\";}s:10:\\\"meta:China\\\";a:6:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão da China\\\";s:2:\\\"lg\\\";s:17:\\\"Horário da China\\\";s:2:\\\"ls\\\";s:25:\\\"Horário Padrão da China\\\";s:2:\\\"sd\\\";s:11:\\\"CDT (China)\\\";s:2:\\\"sg\\\";s:10:\\\"CT (China)\\\";s:2:\\\"ss\\\";s:11:\\\"CST (China)\\\";}s:15:\\\"meta:Choibalsan\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Choibalsan\\\";s:2:\\\"ls\\\";s:22:\\\"Horário de Choibalsan\\\";}s:14:\\\"meta:Christmas\\\";a:1:{s:2:\\\"ls\\\";s:28:\\\"Horário das Ilhas Christmas\\\";}s:10:\\\"meta:Cocos\\\";a:1:{s:2:\\\"ls\\\";s:23:\\\"Horário das Ilhas Coco\\\";}s:13:\\\"meta:Colombia\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão da Colômbia\\\";s:2:\\\"ls\\\";s:21:\\\"Horário da Colômbia\\\";}s:9:\\\"meta:Cook\\\";a:2:{s:2:\\\"ld\\\";s:38:\\\"Meio Horário de Verão das Ilhas Cook\\\";s:2:\\\"ls\\\";s:23:\\\"Horário das Ilhas Cook\\\";}s:9:\\\"meta:Cuba\\\";a:5:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão de Cuba\\\";s:2:\\\"lg\\\";s:16:\\\"Horário de Cuba\\\";s:2:\\\"ls\\\";s:24:\\\"Horário Padrão de Cuba\\\";s:2:\\\"sd\\\";s:10:\\\"CDT (Cuba)\\\";s:2:\\\"ss\\\";s:10:\\\"CST (Cuba)\\\";}s:10:\\\"meta:Dacca\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Dacca\\\";}s:10:\\\"meta:Davis\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Davis\\\";}s:19:\\\"meta:DumontDUrville\\\";a:1:{s:2:\\\"ls\\\";s:28:\\\"Horário de Dumont-d'Urville\\\";}s:13:\\\"meta:Dushanbe\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão de Dushanbe\\\";s:2:\\\"ls\\\";s:20:\\\"Horário de Dushanbe\\\";}s:17:\\\"meta:Dutch_Guiana\\\";a:1:{s:2:\\\"ls\\\";s:28:\\\"Horário da Guiana Holandesa\\\";}s:15:\\\"meta:East_Timor\\\";a:1:{s:2:\\\"ls\\\";s:23:\\\"Horário do Timor-Leste\\\";}s:11:\\\"meta:Easter\\\";a:2:{s:2:\\\"ld\\\";s:37:\\\"Horário de Verão da Ilha de Páscoa\\\";s:2:\\\"ls\\\";s:27:\\\"Horário da Ilha de Páscoa\\\";}s:12:\\\"meta:Ecuador\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário do Equador\\\";}s:19:\\\"meta:Europe_Central\\\";a:4:{s:2:\\\"ld\\\";s:36:\\\"Horário de Verão da Europa Central\\\";s:2:\\\"ls\\\";s:26:\\\"Horário da Europa Central\\\";s:2:\\\"sd\\\";s:4:\\\"CEST\\\";s:2:\\\"ss\\\";s:3:\\\"CET\\\";}s:19:\\\"meta:Europe_Eastern\\\";a:4:{s:2:\\\"ld\\\";s:37:\\\"Horário de Verão da Europa Oriental\\\";s:2:\\\"ls\\\";s:35:\\\"Horário Padrão da Europa Oriental\\\";s:2:\\\"sd\\\";s:4:\\\"EEST\\\";s:2:\\\"ss\\\";s:3:\\\"EET\\\";}s:19:\\\"meta:Europe_Western\\\";a:4:{s:2:\\\"ld\\\";s:38:\\\"Horário de Verão da Europa Ocidental\\\";s:2:\\\"ls\\\";s:28:\\\"Horário da Europa Ocidental\\\";s:2:\\\"sd\\\";s:4:\\\"WEST\\\";s:2:\\\"ss\\\";s:3:\\\"WET\\\";}s:13:\\\"meta:Falkland\\\";a:2:{s:2:\\\"ld\\\";s:37:\\\"Horário de Verão das Ilhas Falkland\\\";s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Falkland\\\";}s:9:\\\"meta:Fiji\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão de Fiji\\\";s:2:\\\"ls\\\";s:16:\\\"Horário de Fiji\\\";}s:18:\\\"meta:French_Guiana\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário da Guiana Francesa\\\";}s:20:\\\"meta:French_Southern\\\";a:1:{s:2:\\\"ls\\\";s:42:\\\"Horário da Antártida e do Sul da França\\\";}s:11:\\\"meta:Frunze\\\";a:2:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão de Frunze\\\";s:2:\\\"ls\\\";s:18:\\\"Horário de Frunze\\\";}s:8:\\\"meta:GMT\\\";a:3:{s:2:\\\"cu\\\";i:1;s:2:\\\"ls\\\";s:34:\\\"Horário do Meridiano de Greenwich\\\";s:2:\\\"ss\\\";s:3:\\\"GMT\\\";}s:14:\\\"meta:Galapagos\\\";a:1:{s:2:\\\"ls\\\";s:22:\\\"Horário de Galápagos\\\";}s:12:\\\"meta:Gambier\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Gambier\\\";}s:12:\\\"meta:Georgia\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão da Geórgia\\\";s:2:\\\"ls\\\";s:20:\\\"Horário da Geórgia\\\";}s:20:\\\"meta:Gilbert_Islands\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Gilberto\\\";}s:22:\\\"meta:Greenland_Central\\\";a:2:{s:2:\\\"ld\\\";s:42:\\\"Horário de Verão da Groenlândia Central\\\";s:2:\\\"ls\\\";s:31:\\\"Horário da Groelândia Central\\\";}s:22:\\\"meta:Greenland_Eastern\\\";a:2:{s:2:\\\"ld\\\";s:42:\\\"Horário de Verão da Groelândia Oriental\\\";s:2:\\\"ls\\\";s:32:\\\"Horário da Groelândia Oriental\\\";}s:22:\\\"meta:Greenland_Western\\\";a:2:{s:2:\\\"ld\\\";s:44:\\\"Horário de Verão da Groenlândia Ocidental\\\";s:2:\\\"ls\\\";s:34:\\\"Horário da Groenlândia Ocidental\\\";}s:9:\\\"meta:Guam\\\";a:2:{s:2:\\\"ls\\\";s:24:\\\"Horário Padrão de Guam\\\";s:2:\\\"ss\\\";s:10:\\\"GST (Guam)\\\";}s:9:\\\"meta:Gulf\\\";a:3:{s:2:\\\"lg\\\";s:17:\\\"Horário do Golfo\\\";s:2:\\\"ls\\\";s:25:\\\"Horário Padrão do Golfo\\\";s:2:\\\"sg\\\";s:2:\\\"GT\\\";}s:11:\\\"meta:Guyana\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário da Guiana\\\";}s:20:\\\"meta:Hawaii_Aleutian\\\";a:2:{s:2:\\\"cu\\\";i:1;s:2:\\\"ls\\\";s:33:\\\"Horário Padrão do Havaí-Aleuta\\\";}s:14:\\\"meta:Hong_Kong\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Hong Kong\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Hong Kong\\\";}s:9:\\\"meta:Hovd\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão de Hovd\\\";s:2:\\\"ls\\\";s:16:\\\"Horário de Hovd\\\";}s:10:\\\"meta:India\\\";a:1:{s:2:\\\"ls\\\";s:26:\\\"Horário Padrão da Índia\\\";}s:17:\\\"meta:Indian_Ocean\\\";a:1:{s:2:\\\"ls\\\";s:26:\\\"Horário do Oceano Índico\\\";}s:14:\\\"meta:Indochina\\\";a:1:{s:2:\\\"ls\\\";s:21:\\\"Horário da Indochina\\\";}s:22:\\\"meta:Indonesia_Central\\\";a:1:{s:2:\\\"ls\\\";s:30:\\\"Horário da Indonésia Central\\\";}s:22:\\\"meta:Indonesia_Eastern\\\";a:1:{s:2:\\\"ls\\\";s:31:\\\"Horário da Indonésia Oriental\\\";}s:22:\\\"meta:Indonesia_Western\\\";a:1:{s:2:\\\"ls\\\";s:32:\\\"Horário da Indonésia Ocidental\\\";}s:9:\\\"meta:Iran\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão do Irã\\\";s:2:\\\"ls\\\";s:24:\\\"Horário Padrão do Irã\\\";}s:12:\\\"meta:Irkutsk\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Irkutsk\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Irkutsk\\\";}s:11:\\\"meta:Israel\\\";a:4:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão de Israel\\\";s:2:\\\"lg\\\";s:18:\\\"Horário de Israel\\\";s:2:\\\"ls\\\";s:26:\\\"Horário Padrão de Israel\\\";s:2:\\\"ss\\\";s:12:\\\"IST (Israel)\\\";}s:10:\\\"meta:Japan\\\";a:4:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão do Japão\\\";s:2:\\\"lg\\\";s:18:\\\"Horário do Japão\\\";s:2:\\\"ls\\\";s:26:\\\"Horário Padrão do Japão\\\";s:2:\\\"sg\\\";s:2:\\\"JT\\\";}s:14:\\\"meta:Kamchatka\\\";a:2:{s:2:\\\"ld\\\";s:46:\\\"Horário de Verão de Petropavlovsk-Kamchatski\\\";s:2:\\\"ls\\\";s:36:\\\"Horário de Petropavlovsk-Kamchatski\\\";}s:12:\\\"meta:Karachi\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Karachi\\\";}s:12:\\\"meta:Kashgar\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Kashgar\\\";}s:23:\\\"meta:Kazakhstan_Eastern\\\";a:2:{s:2:\\\"lg\\\";s:33:\\\"Horário do Casaquistão Oriental\\\";s:2:\\\"ls\\\";s:41:\\\"Horário Padrão do Cazaquistão Oriental\\\";}s:23:\\\"meta:Kazakhstan_Western\\\";a:2:{s:2:\\\"lg\\\";s:34:\\\"Horário do Casaquistão Ocidental\\\";s:2:\\\"ls\\\";s:42:\\\"Horário Padrão do Casaquistão Ocidental\\\";}s:14:\\\"meta:Kizilorda\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Kizilorda\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Kizilorda\\\";}s:10:\\\"meta:Korea\\\";a:3:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão da Coréia\\\";s:2:\\\"lg\\\";s:19:\\\"Horário da Coréia\\\";s:2:\\\"ls\\\";s:27:\\\"Horário Padrão da Coréia\\\";}s:11:\\\"meta:Kosrae\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Kosrae\\\";}s:16:\\\"meta:Krasnoyarsk\\\";a:2:{s:2:\\\"ld\\\";s:33:\\\"Horário de Verão de Krasnoyarsk\\\";s:2:\\\"ls\\\";s:23:\\\"Horário de Krasnoyarsk\\\";}s:14:\\\"meta:Kuybyshev\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Kuybyshev\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Kuybyshev\\\";}s:14:\\\"meta:Kwajalein\\\";a:1:{s:2:\\\"ls\\\";s:21:\\\"Horário de Kwajalein\\\";}s:14:\\\"meta:Kyrgystan\\\";a:1:{s:2:\\\"ls\\\";s:24:\\\"Horário do Quirguistão\\\";}s:10:\\\"meta:Lanka\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Lanka\\\";}s:17:\\\"meta:Line_Islands\\\";a:1:{s:2:\\\"ls\\\";s:23:\\\"Horário das Ilhas Line\\\";}s:13:\\\"meta:Long_Shu\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário de Long-Shu\\\";}s:14:\\\"meta:Lord_Howe\\\";a:4:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Lord Howe\\\";s:2:\\\"lg\\\";s:21:\\\"Horário de Lord Howe\\\";s:2:\\\"ls\\\";s:29:\\\"Horário Padrão de Lord Howe\\\";s:2:\\\"sg\\\";s:3:\\\"LHT\\\";}s:10:\\\"meta:Macau\\\";a:2:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão de Macau\\\";s:2:\\\"ls\\\";s:17:\\\"Horário de Macau\\\";}s:12:\\\"meta:Magadan\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Magadan\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Magadan\\\";}s:11:\\\"meta:Malaya\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Malaia\\\";}s:13:\\\"meta:Malaysia\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário da Malásia\\\";}s:13:\\\"meta:Maldives\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Maldivas\\\";}s:14:\\\"meta:Marquesas\\\";a:1:{s:2:\\\"ls\\\";s:22:\\\"Horário das Marquesas\\\";}s:21:\\\"meta:Marshall_Islands\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Marshall\\\";}s:14:\\\"meta:Mauritius\\\";a:2:{s:2:\\\"ld\\\";s:38:\\\"Horário de Verão das Ilhas Maurício\\\";s:2:\\\"ls\\\";s:28:\\\"Horário das Ilhas Maurício\\\";}s:11:\\\"meta:Mawson\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Mawson\\\";}s:13:\\\"meta:Mongolia\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Ulan Bator\\\";s:2:\\\"ls\\\";s:22:\\\"Horário de Ulan Bator\\\";}s:11:\\\"meta:Moscow\\\";a:3:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão de Moscou\\\";s:2:\\\"lg\\\";s:18:\\\"Horário de Moscou\\\";s:2:\\\"ls\\\";s:26:\\\"Horário Padrão de Moscou\\\";}s:12:\\\"meta:Myanmar\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Mianmar\\\";}s:10:\\\"meta:Nauru\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Nauru\\\";}s:10:\\\"meta:Nepal\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário do Nepal\\\";}s:18:\\\"meta:New_Caledonia\\\";a:2:{s:2:\\\"ld\\\";s:37:\\\"Horário de Verão da Nova Caledônia\\\";s:2:\\\"ls\\\";s:27:\\\"Horário da Nova Caledônia\\\";}s:16:\\\"meta:New_Zealand\\\";a:4:{s:2:\\\"ld\\\";s:36:\\\"Horário de Verão da Nova Zelândia\\\";s:2:\\\"lg\\\";s:26:\\\"Horário da Nova Zelândia\\\";s:2:\\\"ls\\\";s:34:\\\"Horário Padrão da Nova Zelândia\\\";s:2:\\\"sg\\\";s:3:\\\"NZT\\\";}s:17:\\\"meta:Newfoundland\\\";a:4:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Terra Nova\\\";s:2:\\\"lg\\\";s:22:\\\"Horário de Terra Nova\\\";s:2:\\\"ls\\\";s:30:\\\"Horário Padrão de Terra Nova\\\";s:2:\\\"sg\\\";s:2:\\\"NT\\\";}s:9:\\\"meta:Niue\\\";a:1:{s:2:\\\"ls\\\";s:16:\\\"Horário de Niue\\\";}s:12:\\\"meta:Norfolk\\\";a:1:{s:2:\\\"ls\\\";s:26:\\\"Horário das Ilhas Norfolk\\\";}s:12:\\\"meta:Noronha\\\";a:2:{s:2:\\\"ld\\\";s:41:\\\"Horário de Verão de Fernando de Noronha\\\";s:2:\\\"ls\\\";s:31:\\\"Horário de Fernando de Noronha\\\";}s:18:\\\"meta:North_Mariana\\\";a:1:{s:2:\\\"ls\\\";s:35:\\\"Horário das Ilhas Mariana do Norte\\\";}s:16:\\\"meta:Novosibirsk\\\";a:2:{s:2:\\\"ld\\\";s:33:\\\"Horário de Verão de Novosibirsk\\\";s:2:\\\"ls\\\";s:23:\\\"Horário de Novosibirsk\\\";}s:9:\\\"meta:Omsk\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão de Omsk\\\";s:2:\\\"ls\\\";s:16:\\\"Horário de Omsk\\\";}s:13:\\\"meta:Pakistan\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão do Paquistão\\\";s:2:\\\"ls\\\";s:22:\\\"Horário do Paquistão\\\";}s:10:\\\"meta:Palau\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Palau\\\";}s:21:\\\"meta:Papua_New_Guinea\\\";a:1:{s:2:\\\"ls\\\";s:29:\\\"Horário de Papua Nova Guiné\\\";}s:13:\\\"meta:Paraguay\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão do Paraguai\\\";s:2:\\\"ls\\\";s:20:\\\"Horário do Paraguai\\\";}s:9:\\\"meta:Peru\\\";a:2:{s:2:\\\"ld\\\";s:26:\\\"Horário de Verão do Peru\\\";s:2:\\\"ls\\\";s:16:\\\"Horário do Peru\\\";}s:16:\\\"meta:Philippines\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão das Filipinas\\\";s:2:\\\"ls\\\";s:22:\\\"Horário das Filipinas\\\";}s:20:\\\"meta:Phoenix_Islands\\\";a:1:{s:2:\\\"ls\\\";s:25:\\\"Horário das Ilhas Fênix\\\";}s:20:\\\"meta:Pierre_Miquelon\\\";a:4:{s:2:\\\"ld\\\";s:39:\\\"Horário de Verão de Pierre e Miquelon\\\";s:2:\\\"lg\\\";s:29:\\\"Horário de Pierre e Miquelon\\\";s:2:\\\"ls\\\";s:37:\\\"Horário Padrão de Pierre e Miquelon\\\";s:2:\\\"sg\\\";s:3:\\\"PMT\\\";}s:13:\\\"meta:Pitcairn\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário de Pitcairn\\\";}s:11:\\\"meta:Ponape\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Ponape\\\";}s:14:\\\"meta:Qyzylorda\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Qyzylorda\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Qyzylorda\\\";}s:12:\\\"meta:Reunion\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Reunião\\\";}s:12:\\\"meta:Rothera\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Rothera\\\";}s:13:\\\"meta:Sakhalin\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão de Sakhalin\\\";s:2:\\\"ls\\\";s:20:\\\"Horário de Sakhalin\\\";}s:11:\\\"meta:Samara\\\";a:2:{s:2:\\\"ld\\\";s:28:\\\"Horário de Verão de Samara\\\";s:2:\\\"ls\\\";s:18:\\\"Horário de Samara\\\";}s:14:\\\"meta:Samarkand\\\";a:2:{s:2:\\\"ld\\\";s:31:\\\"Horário de Verão de Samarkand\\\";s:2:\\\"ls\\\";s:21:\\\"Horário de Samarkand\\\";}s:10:\\\"meta:Samoa\\\";a:1:{s:2:\\\"ls\\\";s:25:\\\"Horário Padrão de Samoa\\\";}s:15:\\\"meta:Seychelles\\\";a:1:{s:2:\\\"ls\\\";s:29:\\\"Horário das Ilhas Seychelles\\\";}s:15:\\\"meta:Shevchenko\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Shevchenko\\\";s:2:\\\"ls\\\";s:22:\\\"Horário de Shevchenko\\\";}s:14:\\\"meta:Singapore\\\";a:1:{s:2:\\\"ls\\\";s:29:\\\"Horário Padrão de Cingapura\\\";}s:12:\\\"meta:Solomon\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário das Ilhas Salomão\\\";}s:18:\\\"meta:South_Georgia\\\";a:2:{s:2:\\\"ls\\\";s:27:\\\"Horário da Geórgia do Sul\\\";s:2:\\\"ss\\\";s:21:\\\"GST (Geórgia do Sul)\\\";}s:13:\\\"meta:Suriname\\\";a:1:{s:2:\\\"ls\\\";s:20:\\\"Horário do Suriname\\\";}s:15:\\\"meta:Sverdlovsk\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Sverdlovsk\\\";s:2:\\\"ls\\\";s:22:\\\"Horário de Sverdlovsk\\\";}s:10:\\\"meta:Syowa\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário de Syowa\\\";}s:11:\\\"meta:Tahiti\\\";a:1:{s:2:\\\"ls\\\";s:17:\\\"Horário do Taiti\\\";}s:15:\\\"meta:Tajikistan\\\";a:1:{s:2:\\\"ls\\\";s:24:\\\"Horário do Tajiquistão\\\";}s:13:\\\"meta:Tashkent\\\";a:2:{s:2:\\\"ld\\\";s:30:\\\"Horário de Verão de Tashkent\\\";s:2:\\\"ls\\\";s:20:\\\"Horário de Tashkent\\\";}s:12:\\\"meta:Tbilisi\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Tbilisi\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Tbilisi\\\";}s:12:\\\"meta:Tokelau\\\";a:1:{s:2:\\\"ls\\\";s:19:\\\"Horário de Tokelau\\\";}s:10:\\\"meta:Tonga\\\";a:2:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão de Tonga\\\";s:2:\\\"ls\\\";s:17:\\\"Horário de Tonga\\\";}s:9:\\\"meta:Truk\\\";a:1:{s:2:\\\"ls\\\";s:16:\\\"Horário de Truk\\\";}s:11:\\\"meta:Turkey\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão da Turquia\\\";s:2:\\\"ls\\\";s:19:\\\"Horário da Turquia\\\";}s:17:\\\"meta:Turkmenistan\\\";a:2:{s:2:\\\"ld\\\";s:36:\\\"Horário de Verão do Turcomenistão\\\";s:2:\\\"ls\\\";s:26:\\\"Horário do Turcomenistão\\\";}s:11:\\\"meta:Tuvalu\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Tuvalu\\\";}s:11:\\\"meta:Uralsk\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Ural'sk\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Ural'sk\\\";}s:12:\\\"meta:Uruguay\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão do Uruguai\\\";s:2:\\\"ls\\\";s:19:\\\"Horário do Uruguai\\\";}s:11:\\\"meta:Urumqi\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Urumqi\\\";}s:15:\\\"meta:Uzbekistan\\\";a:2:{s:2:\\\"ld\\\";s:34:\\\"Horário de Verão do Uzbequistão\\\";s:2:\\\"ls\\\";s:24:\\\"Horário do Uzbequistão\\\";}s:12:\\\"meta:Vanuatu\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Vanuatu\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Vanuatu\\\";}s:14:\\\"meta:Venezuela\\\";a:1:{s:2:\\\"ls\\\";s:21:\\\"Horário da Venezuela\\\";}s:16:\\\"meta:Vladivostok\\\";a:2:{s:2:\\\"ld\\\";s:33:\\\"Horário de Verão de Vladivostok\\\";s:2:\\\"ls\\\";s:23:\\\"Horário de Vladivostok\\\";}s:14:\\\"meta:Volgograd\\\";a:2:{s:2:\\\"ld\\\";s:32:\\\"Horário de Verão de Volvogrado\\\";s:2:\\\"ls\\\";s:22:\\\"Horário de Volvogrado\\\";}s:11:\\\"meta:Vostok\\\";a:1:{s:2:\\\"ls\\\";s:18:\\\"Horário de Vostok\\\";}s:9:\\\"meta:Wake\\\";a:1:{s:2:\\\"ls\\\";s:23:\\\"Horário das Ilhas Wake\\\";}s:11:\\\"meta:Wallis\\\";a:1:{s:2:\\\"ls\\\";s:27:\\\"Horário de Wallis e Futuna\\\";}s:12:\\\"meta:Yakutsk\\\";a:2:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Yakutsk\\\";s:2:\\\"ls\\\";s:19:\\\"Horário de Yakutsk\\\";}s:18:\\\"meta:Yekaterinburg\\\";a:2:{s:2:\\\"ld\\\";s:35:\\\"Horário de Verão de Yekaterinburg\\\";s:2:\\\"ls\\\";s:25:\\\"Horário de Yekaterinburg\\\";}s:12:\\\"meta:Yerevan\\\";a:1:{s:2:\\\"ld\\\";s:29:\\\"Horário de Verão de Yerevan\\\";}s:10:\\\"meta:Yukon\\\";a:4:{s:2:\\\"ld\\\";s:27:\\\"Horário de Verão de Yukon\\\";s:2:\\\"lg\\\";s:17:\\\"Horário de Yukon\\\";s:2:\\\"ls\\\";s:25:\\\"Horário Padrão de Yukon\\\";s:2:\\\"sg\\\";s:2:\\\"YT\\\";}s:14:\\\"fallbackFormat\\\";s:9:\\\"{1} ({0})\\\";s:9:\\\"gmtFormat\\\";s:6:\\\"GMT{0}\\\";s:10:\\\"hourFormat\\\";s:13:\\\"+HH:mm;-HH:mm\\\";s:12:\\\"regionFormat\\\";s:12:\\\"Horário {0}\\\";}}\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/test/sfTesterDoctrine.class.php:\\n   20  {\\n   21    /**\\n   22:    * Prepares the tester.\\n   23     */\\n   24    public function prepare()\\n   ..\\n   27  \\n   28    /**\\n   29:    * Initializes the tester.\\n   30     */\\n   31    public function initialize()\\n   ..\\n   76  \\n   77      if (false === $value) {\\n   78:       $this->tester->is(count($objects), 0, sprintf('no %s object that matches the criteria has been found', $model));\\n   79      } elseif (true === $value) {\\n   80:       $this->tester->cmp_ok(count($objects), '>', 0, sprintf('%s objects that matches the criteria have been found', $model));\\n   81      } elseif (is_int($value)) {\\n   82:       $this->tester->is(count($objects), $value, sprintf('\\\"%s\\\" %s objects have been found', $value, $model));\\n   83      } else {\\n   84        throw new InvalidArgumentException('The \\\"check()\\\" method does not takes this kind of argument.');\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine/Cache/Apc.php:\\n   51       *\\n   52       * @param  string  $id                cache id\\n   53:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n   54       * @return mixed   Returns either the cached data or false\\n   55       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine/Cache/Array.php:\\n   43       *\\n   44       * @param  string  $id                cache id\\n   45:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n   46       * @return mixed   Returns either the cached data or false\\n   47       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine/Cache/Db.php:\\n   71       *\\n   72       * @param  string  $id                cache id\\n   73:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n   74       * @return mixed   Returns either the cached data or false\\n   75       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine/Cache/Driver.php:\\n   86       *\\n   87       * @param  string  $id                cache id\\n   88:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n   89       * @return mixed   Returns either the cached data or false\\n   90       */\\n   ..\\n  255       *\\n  256       * @param  string  $id                cache id\\n  257:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n  258       * @return mixed   Returns either the cached data or false\\n  259       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine/Cache/Interface.php:\\n   38       *\\n   39       * @param  string  $id                cache id\\n   40:      * @param  boolean $testCacheValidity if set to false, the cache validity won't be tested\\n   41       * @return mixed   Returns either the cached data or false\\n   42       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/test/functional/AdminGenBrowser.class.php:\\n  197  \\n  198      unset($userInfo['user']['Profile']['user_id']);\\n  199:     $tester = $this->get('/users/new')->\\n  200        click('Save', $userInfo)->\\n  201        with('form')->begin();\\n  202:     $tester->hasErrors();\\n  203:     $form = $tester->getForm();\\n  204      $this->test()->is((string) $form->getErrorSchema(), 'username [An object with the same \\\"username\\\" already exist.]', 'Check username gives unique error');\\n  205:     $tester->end();\\n  206    }\\n  207  \\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/test/functional/fixtures/cache/frontend/test/config/config_autoload.yml.php:\\n   58    'sfdoctrineinsertsqltask' => '/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/task/sfDoctrineInsertSqlTask.class.php',\\n   59    'sfdoctrinemigratetask' => '/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/task/sfDoctrineMigrateTask.class.php',\\n   60:   'sftesterdoctrine' => '/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/test/sfTesterDoctrine.class.php',\\n   61    'sfvalidatordoctrinechoice' => '/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/validator/sfValidatorDoctrineChoice.class.php',\\n   62    'sfvalidatordoctrineunique' => '/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/lib/validator/sfValidatorDoctrineUnique.class.php',\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/test/sfTesterPropel.class.php:\\n   20  {\\n   21    /**\\n   22:    * Prepares the tester.\\n   23     */\\n   24    public function prepare()\\n   ..\\n   27  \\n   28    /**\\n   29:    * Initializes the tester.\\n   30     */\\n   31    public function initialize()\\n   ..\\n   68  \\n   69      if (false === $value) {\\n   70:       $this->tester->is(count($objects), 0, sprintf('no %s object that matches the criteria has been found', $model));\\n   71      } elseif (true === $value) {\\n   72:       $this->tester->cmp_ok(count($objects), '>', 0, sprintf('%s objects that matches the criteria have been found', $model));\\n   73      } elseif (is_int($value)) {\\n   74:       $this->tester->is(count($objects), $value, sprintf('\\\"%s\\\" %s objects have been found', $value, $model));\\n   75      } else {\\n   76        throw new InvalidArgumentException('The \\\"check()\\\" method does not takes this kind of argument.');\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/tasks/system/condition/IsFalseCondition.php:\\n   39  \\n   40      /**\\n   41:      * Set the value to be tested.\\n   42       * @param boolean $value\\n   43       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/tasks/system/condition/IsTrueCondition.php:\\n   38  \\n   39      /**\\n   40:      * Set the value to be tested.\\n   41       * @param boolean $value\\n   42       */\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/types/selectors/PresentSelector.php:\\n   93       * this way, we get some documentation on how the system works.\\n   94       * A user looking at the documentation should clearly understand\\n   95:      * that the ONLY files whose presence is being tested are those\\n   96       * that already exist in the source directory, hence the lack of\\n   97       * a <code>destonly</code> option.\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/propel/validator/BasicValidator.php:\\n   38       *\\n   39       * @param ValidatorMap $map A column map object for the column to be validated.\\n   40:      * @param string       $str a <code>String</code> to be tested\\n   41       *\\n   42       * @return mixed TRUE if valid, error message otherwise\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTestBrowser.class.php:\\n   25  {\\n   26    /**\\n   27:    * Initializes the browser tester instance.\\n   28     *\\n   29     * @param string $hostname  Hostname to browse\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTester.class.php:\\n   10  \\n   11  /**\\n   12:  * sfTester is the base class for all tester classes.\\n   13   *\\n   14   * @package    symfony\\n   ..\\n   21    protected $inABlock = false,\\n   22      $browser  = null,\\n   23:     $tester   = null;\\n   24  \\n   25    /**\\n   ..\\n   27     *\\n   28     * @param sfTestFunctionalBase $browser A browser\\n   29:    * @param lime_test            $tester  A tester object\\n   30     */\\n   31:   public function __construct(sfTestFunctionalBase $browser, $tester)\\n   32    {\\n   33      $this->browser = $browser;\\n   34:     $this->tester  = $tester;\\n   35    }\\n   36  \\n   37    /**\\n   38:    * Prepares the tester.\\n   39     */\\n   40    abstract public function prepare();\\n   41  \\n   42    /**\\n   43:    * Initializes the tester.\\n   44     */\\n   45    abstract public function initialize();\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterForm.class.php:\\n   25     *\\n   26     * @param sfTestFunctionalBase $browser A browser\\n   27:    * @param lime_test            $tester  A tester object\\n   28     */\\n   29:   public function __construct(sfTestFunctionalBase $browser, $tester)\\n   30    {\\n   31:     parent::__construct($browser, $tester);\\n   32  \\n   33      $this->browser->addListener('template.filter_parameters', array($this, 'filterTemplateParameters'));\\n   ..\\n   35  \\n   36    /**\\n   37:    * Prepares the tester.\\n   38     */\\n   39    public function prepare()\\n   ..\\n   43  \\n   44    /**\\n   45:    * Initiliazes the tester.\\n   46     */\\n   47    public function initialize()\\n   ..\\n   83  \\n   84      if (is_int($value)) {\\n   85:       $this->tester->is(count($this->form->getErrorSchema()), $value, sprintf('the submitted form has \\\"%s\\\" errors.', $value));\\n   86      } else {\\n   87:       $this->tester->is($this->form->hasErrors(), $value, sprintf('the submitted form %s.', ($value) ? 'has some errors' : 'is valid'));\\n   88      }\\n   89  \\n   ..\\n  124  \\n  125      if (false === $value) {\\n  126:       $this->tester->ok(!$error || 0 == count($error), sprintf('the submitted form has no \\\"%s\\\" error.', $field));\\n  127      } elseif (true === $value) {\\n  128:       $this->tester->ok($error && count($error) > 0, sprintf('the submitted form has a \\\"%s\\\" error.', $field));\\n  129      } elseif (is_int($value)) {\\n  130:       $this->tester->ok($error && count($error) == $value, sprintf('the submitted form has %s \\\"%s\\\" error(s).', $value, $field));\\n  131      } elseif (preg_match('/^(!)?([^a-zA-Z0-9\\\\\\\\\\\\\\\\]).+?\\\\\\\\2[ims]?$/', $value, $match)) {\\n  132        if (!$error) {\\n  133:         $this->tester->fail(sprintf('the submitted form has a \\\"%s\\\" error.', $field));\\n  134        } else {\\n  135          if ($match[1] == '!') {\\n  136:           $this->tester->unlike($error->getCode(), substr($value, 1), sprintf('the submitted form has a \\\"%s\\\" error that does not match \\\"%s\\\".', $field, $value));\\n  137          } else {\\n  138:           $this->tester->like($error->getCode(), $value, sprintf('the submitted form has a \\\"%s\\\" error that matches \\\"%s\\\".', $field, $value));\\n  139          }\\n  140        }\\n  141      } else {\\n  142        if (!$error) {\\n  143:         $this->tester->fail(sprintf('the submitted form has a \\\"%s\\\" error (%s).', $field, $value));\\n  144        } else {\\n  145:         $this->tester->is($error->getCode(), $value, sprintf('the submitted form has a \\\"%s\\\" error (%s).', $field, $value));\\n  146        }\\n  147      }\\n  ...\\n  159      }\\n  160  \\n  161:     print $this->tester->error('Form debug');\\n  162  \\n  163      print sprintf(\\\"Submitted values: %s\\\\n\\\", str_replace(\\\"\\\\n\\\", '', var_export($this->form->getTaintedValues(), true)));\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterMailer.class.php:\\n   23  \\n   24    /**\\n   25:    * Prepares the tester.\\n   26     */\\n   27    public function prepare()\\n   ..\\n   30  \\n   31    /**\\n   32:    * Initializes the tester.\\n   33     */\\n   34    public function initialize()\\n   ..\\n   53    {\\n   54      if (null === $nb) {\\n   55:       $this->tester->ok($this->logger->countMessages() > 0, 'mailer sent some email(s).');\\n   56      } else {\\n   57:       $this->tester->is($this->logger->countMessages(), $nb, sprintf('mailer sent %s email(s).', $nb));\\n   58      }\\n   59  \\n   ..\\n  103            }\\n  104  \\n  105:           $this->tester->pass(sprintf('switch context to the message number \\\"%s\\\" sent to \\\"%s\\\"', $position, $messageEmail));\\n  106  \\n  107            return $this;\\n  ...\\n  110      }\\n  111  \\n  112:     $this->tester->fail(sprintf('unable to find a message sent to \\\"%s\\\"', $messageEmail));\\n  113  \\n  114      return $this;\\n  ...\\n  125    {\\n  126      if (!$this->message) {\\n  127:       $this->tester->fail('unable to test as no email were sent');\\n  128      }\\n  129  \\n  ...\\n  144          if (preg_match($regex, $body)) {\\n  145            $ok = true;\\n  146:           $this->tester->pass(sprintf('email body matches \\\"%s\\\"', $value));\\n  147          }\\n  148        } else {\\n  149          if (preg_match($regex, $body)) {\\n  150            $ok = true;\\n  151:           $this->tester->fail(sprintf('email body does not match \\\"%s\\\"', $value));\\n  152          }\\n  153        }\\n  154      } elseif ($body == $value) {\\n  155        $ok = true;\\n  156:       $this->tester->pass(sprintf('email body is \\\"%s\\\"', $value));\\n  157      }\\n  158  \\n  159      if (!$ok) {\\n  160        if (!$mustMatch) {\\n  161:         $this->tester->pass(sprintf('email body matches \\\"%s\\\"', $value));\\n  162        } else {\\n  163:         $this->tester->fail(sprintf('email body matches \\\"%s\\\"', $value));\\n  164        }\\n  165      }\\n  ...\\n  179    {\\n  180      if (!$this->message) {\\n  181:       $this->tester->fail('unable to test as no email were sent');\\n  182      }\\n  183  \\n  ...\\n  203            if (preg_match($regex, $header)) {\\n  204              $ok = true;\\n  205:             $this->tester->pass(sprintf('email header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $current));\\n  206              break;\\n  207            }\\n  ...\\n  209            if (preg_match($regex, $header)) {\\n  210              $ok = true;\\n  211:             $this->tester->fail(sprintf('email header \\\"%s\\\" does not match \\\"%s\\\" (%s)', $key, $value, $current));\\n  212              break;\\n  213            }\\n  ...\\n  215        } elseif ($header == $value) {\\n  216          $ok = true;\\n  217:         $this->tester->pass(sprintf('email header \\\"%s\\\" is \\\"%s\\\" (%s)', $key, $value, $current));\\n  218          break;\\n  219        }\\n  ...\\n  222      if (!$ok) {\\n  223        if (!$mustMatch) {\\n  224:         $this->tester->pass(sprintf('email header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $current));\\n  225        } else {\\n  226:         $this->tester->fail(sprintf('email header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $current));\\n  227        }\\n  228      }\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterRequest.class.php:\\n   22  \\n   23    /**\\n   24:    * Prepares the tester.\\n   25     */\\n   26    public function prepare()\\n   ..\\n   29  \\n   30    /**\\n   31:    * Initializes the tester.\\n   32     */\\n   33    public function initialize()\\n   ..\\n   46    public function isParameter($key, $value)\\n   47    {\\n   48:     $this->tester->is($this->request->getParameter($key), $value, sprintf('request parameter \\\"%s\\\" is \\\"%s\\\"', $key, $value));\\n   49  \\n   50      return $this->getObjectToReturn();\\n   ..\\n   60    public function isFormat($format)\\n   61    {\\n   62:     $this->tester->is($this->request->getRequestFormat(), $format, sprintf('request format is \\\"%s\\\"', $format));\\n   63  \\n   64      return $this->getObjectToReturn();\\n   ..\\n   74    public function isMethod($method)\\n   75    {\\n   76:     $this->tester->ok($this->request->isMethod($method), sprintf('request method is \\\"%s\\\"', strtoupper($method)));\\n   77  \\n   78      return $this->getObjectToReturn();\\n   ..\\n   91      if (!array_key_exists($name, $_COOKIE)) {\\n   92        if ($exists) {\\n   93:         $this->tester->fail(sprintf('cookie \\\"%s\\\" exists.', $name));\\n   94        } else {\\n   95:         $this->tester->pass(sprintf('cookie \\\"%s\\\" does not exist.', $name));\\n   96        }\\n   97  \\n   ..\\n  100  \\n  101      if ($exists) {\\n  102:       $this->tester->pass(sprintf('cookie \\\"%s\\\" exists.', $name));\\n  103      } else {\\n  104:       $this->tester->fail(sprintf('cookie \\\"%s\\\" does not exist.', $name));\\n  105      }\\n  106  \\n  ...\\n  119    {\\n  120      if (!array_key_exists($name, $_COOKIE)) {\\n  121:       $this->tester->fail(sprintf('cookie \\\"%s\\\" does not exist.', $name));\\n  122  \\n  123        return $this->getObjectToReturn();\\n  ...\\n  126      if (preg_match('/^(!)?([^a-zA-Z0-9\\\\\\\\\\\\\\\\]).+?\\\\\\\\2[ims]?$/', $value, $match)) {\\n  127        if ($match[1] == '!') {\\n  128:         $this->tester->unlike($_COOKIE[$name], substr($value, 1), sprintf('cookie \\\"%s\\\" content does not match regex \\\"%s\\\"', $name, $value));\\n  129        } else {\\n  130:         $this->tester->like($_COOKIE[$name], $value, sprintf('cookie \\\"%s\\\" content matches regex \\\"%s\\\"', $name, $value));\\n  131        }\\n  132      } else {\\n  133:       $this->tester->is($_COOKIE[$name], $value, sprintf('cookie \\\"%s\\\" content is ok', $name));\\n  134      }\\n  135  \\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterResponse.class.php:\\n   24  \\n   25    /**\\n   26:    * Prepares the tester.\\n   27     */\\n   28    public function prepare()\\n   ..\\n   31  \\n   32    /**\\n   33:    * Initializes the tester.\\n   34     */\\n   35    public function initialize()\\n   ..\\n   73  \\n   74      if (false === $value) {\\n   75:       $this->tester->is(count($values), 0, sprintf('response selector \\\"%s\\\" does not exist', $selector));\\n   76      } elseif (true === $value) {\\n   77:       $this->tester->cmp_ok(count($values), '>', 0, sprintf('response selector \\\"%s\\\" exists', $selector));\\n   78      } elseif (is_int($value)) {\\n   79:       $this->tester->is(count($values), $value, sprintf('response selector \\\"%s\\\" matches \\\"%s\\\" times', $selector, $value));\\n   80      } elseif (preg_match('/^(!)?([^a-zA-Z0-9\\\\\\\\\\\\\\\\]).+?\\\\\\\\2[ims]?$/', $value, $match)) {\\n   81        $position = isset($options['position']) ? $options['position'] : 0;\\n   82        if ($match[1] == '!') {\\n   83:         $this->tester->unlike(@$values[$position], substr($value, 1), sprintf('response selector \\\"%s\\\" does not match regex \\\"%s\\\"', $selector, substr($value, 1)));\\n   84        } else {\\n   85:         $this->tester->like(@$values[$position], $value, sprintf('response selector \\\"%s\\\" matches regex \\\"%s\\\"', $selector, $value));\\n   86        }\\n   87      } else {\\n   88        $position = isset($options['position']) ? $options['position'] : 0;\\n   89:       $this->tester->is(@$values[$position], $value, sprintf('response selector \\\"%s\\\" matches \\\"%s\\\"', $selector, $value));\\n   90      }\\n   91  \\n   92      if (isset($options['count'])) {\\n   93:       $this->tester->is(count($values), $options['count'], sprintf('response selector \\\"%s\\\" matches \\\"%s\\\" times', $selector, $options['count']));\\n   94      }\\n   95  \\n   ..\\n  126            }\\n  127  \\n  128:           $this->tester->ok(false !== $pos, sprintf('response includes \\\"%s\\\" form \\\"%s\\\" field - \\\"%s %s[name=%s]\\\"', get_class($form), $field, $selector, $element->tagName, $element->getAttribute('name')));\\n  129          }\\n  130        }\\n  ...\\n  153  \\n  154        if (true === $checkDTD) {\\n  155:         $cache = sfConfig::get('sf_cache_dir').'/sf_tester_response/w3';\\n  156          if ($cache[1] == ':') {\\n  157            // On Windows systems the path will be like c:\\\\symfony\\\\cache\\\\xml.dtd\\n  ...\\n  200          $lines = explode(PHP_EOL, $this->response->getContent());\\n  201  \\n  202:         $this->tester->fail($message);\\n  203          foreach ($errors as $error) {\\n  204:           $this->tester->diag('    '.trim($error->message));\\n  205            if (preg_match('/line (\\\\d+)/', $error->message, $match) && $error->line != $match[1]) {\\n  206:             $this->tester->diag('      '.str_pad($match[1].':', 6).trim($lines[$match[1] - 1]));\\n  207            }\\n  208:           $this->tester->diag('      '.str_pad($error->line.':', 6).trim($lines[$error->line - 1]));\\n  209          }\\n  210        } else {\\n  211:         $this->tester->pass($message);\\n  212        }\\n  213  \\n  ...\\n  247            if (preg_match($regex, $header)) {\\n  248              $ok = true;\\n  249:             $this->tester->pass(sprintf('response header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $this->response->getHttpHeader($key)));\\n  250              break;\\n  251            }\\n  ...\\n  253            if (preg_match($regex, $header)) {\\n  254              $ok = true;\\n  255:             $this->tester->fail(sprintf('response header \\\"%s\\\" does not match \\\"%s\\\" (%s)', $key, $value, $this->response->getHttpHeader($key)));\\n  256              break;\\n  257            }\\n  ...\\n  259        } elseif ($header == $value) {\\n  260          $ok = true;\\n  261:         $this->tester->pass(sprintf('response header \\\"%s\\\" is \\\"%s\\\" (%s)', $key, $value, $this->response->getHttpHeader($key)));\\n  262          break;\\n  263        }\\n  ...\\n  266      if (!$ok) {\\n  267        if (!$mustMatch) {\\n  268:         $this->tester->pass(sprintf('response header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $this->response->getHttpHeader($key)));\\n  269        } else {\\n  270:         $this->tester->fail(sprintf('response header \\\"%s\\\" matches \\\"%s\\\" (%s)', $key, $value, $this->response->getHttpHeader($key)));\\n  271        }\\n  272      }\\n  ...\\n  289        if ($name == $cookie['name']) {\\n  290          if (null === $value) {\\n  291:           $this->tester->pass(sprintf('response sets cookie \\\"%s\\\"', $name));\\n  292          } else {\\n  293:           $this->tester->ok($value == $cookie['value'], sprintf('response sets cookie \\\"%s\\\" to \\\"%s\\\"', $name, $value));\\n  294          }\\n  295  \\n  ...\\n  299            }\\n  300  \\n  301:           $this->tester->is($cookie[$attributeName], $attributeValue, sprintf('\\\"%s\\\" cookie \\\"%s\\\" attribute is \\\"%s\\\"', $name, $attributeName, $attributeValue));\\n  302          }\\n  303  \\n  ...\\n  306      }\\n  307  \\n  308:     $this->tester->fail(sprintf('response sets cookie \\\"%s\\\"', $name));\\n  309  \\n  310      return $this->getObjectToReturn();\\n  ...\\n  325  \\n  326      if ($match[1] == '!') {\\n  327:       $this->tester->unlike($this->response->getContent(), substr($regex, 1), sprintf('response content does not match regex \\\"%s\\\"', substr($regex, 1)));\\n  328      } else {\\n  329:       $this->tester->like($this->response->getContent(), $regex, sprintf('response content matches regex \\\"%s\\\"', $regex));\\n  330      }\\n  331  \\n  ...\\n  342    public function isStatusCode($statusCode = 200)\\n  343    {\\n  344:     $this->tester->is($this->response->getStatusCode(), $statusCode, sprintf('status code is \\\"%s\\\"', $statusCode));\\n  345  \\n  346      return $this->getObjectToReturn();\\n  ...\\n  357    {\\n  358      if ($location = $this->response->getHttpHeader('location')) {\\n  359:       $boolean ? $this->tester->pass(sprintf('page redirected to \\\"%s\\\"', $location)) : $this->tester->fail(sprintf('page redirected to \\\"%s\\\"', $location));\\n  360      } else {\\n  361:       $boolean ? $this->tester->fail('page redirected') : $this->tester->pass('page not redirected');\\n  362      }\\n  363  \\n  ...\\n  373    public function debug($realOutput = false)\\n  374    {\\n  375:     print $this->tester->error('Response debug');\\n  376  \\n  377      if (!$realOutput && null !== sfException::getLastException()) {\\n  378        // print the exception and the stack trace instead of the \\\"normal\\\" output\\n  379:       $this->tester->comment('WARNING');\\n  380:       $this->tester->comment('An error occurred when processing this request.');\\n  381:       $this->tester->comment('The real response content has been replaced with the exception message to ease debugging.');\\n  382      }\\n  383  \\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterUser.class.php:\\n   22  \\n   23    /**\\n   24:    * Prepares the tester.\\n   25     */\\n   26    public function prepare()\\n   ..\\n   29  \\n   30    /**\\n   31:    * Initializes the tester.\\n   32     */\\n   33    public function initialize()\\n   ..\\n   47    public function isAttribute($key, $value, $ns = null)\\n   48    {\\n   49:     $this->tester->is($this->user->getAttribute($key, null, $ns), $value, sprintf('user attribute \\\"%s\\\" is \\\"%s\\\"', $key, $value));\\n   50  \\n   51      return $this->getObjectToReturn();\\n   ..\\n   62    public function isFlash($key, $value)\\n   63    {\\n   64:     $this->tester->is($this->user->getFlash($key), $value, sprintf('user flash \\\"%s\\\" is \\\"%s\\\"', $key, $value));\\n   65  \\n   66      return $this->getObjectToReturn();\\n   ..\\n   76    public function isCulture($culture)\\n   77    {\\n   78:     $this->tester->is($this->user->getCulture(), $culture, sprintf('user culture is \\\"%s\\\"', $culture));\\n   79  \\n   80      return $this->getObjectToReturn();\\n   ..\\n   90    public function isAuthenticated($boolean = true)\\n   91    {\\n   92:     $this->tester->is($this->user->isAuthenticated(), $boolean, sprintf('user is %sauthenticated', $boolean ? '' : 'not '));\\n   93  \\n   94      return $this->getObjectToReturn();\\n   ..\\n  106    public function hasCredential($credentials, $boolean = true, $useAnd = true)\\n  107    {\\n  108:     $this->tester->is($this->user->hasCredential($credentials, $useAnd), $boolean, sprintf('user has %sthe right credentials', $boolean ? '' : 'not '));\\n  109  \\n  110      return $this->getObjectToReturn();\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterViewCache.class.php:\\n   24  \\n   25    /**\\n   26:    * Prepares the tester.\\n   27     */\\n   28    public function prepare()\\n   ..\\n   31  \\n   32    /**\\n   33:    * Initializes the tester.\\n   34     */\\n   35    public function initialize()\\n   ..\\n   68      // check that cache is enabled\\n   69      if (!$cacheManager) {\\n   70:       $this->tester->ok(!$boolean, 'cache is disabled');\\n   71  \\n   72        return $this->getObjectToReturn();\\n   ..\\n   83      // check layout configuration\\n   84      if ($cacheManager->withLayout($uri) && !$with_layout) {\\n   85:       $this->tester->fail('cache without layout');\\n   86:       $this->tester->skip('cache is not configured properly', 2);\\n   87      } elseif (!$cacheManager->withLayout($uri) && $with_layout) {\\n   88:       $this->tester->fail('cache with layout');\\n   89:       $this->tester->skip('cache is not configured properly', 2);\\n   90      } else {\\n   91:       $this->tester->pass('cache is configured properly');\\n   92  \\n   93        // check page is cached\\n   94:       $ret = $this->tester->is($cacheManager->has($uri), $boolean, sprintf('\\\"%s\\\" %s in cache', $type, $boolean ? 'is' : 'is not'));\\n   95  \\n   96        // check that the content is ok in cache\\n   97        if ($boolean) {\\n   98          if (!$ret) {\\n   99:           $this->tester->fail('content in cache is ok');\\n  100          } elseif ($with_layout) {\\n  101            $response = unserialize($cacheManager->get($uri));\\n  102            $content = $response->getContent();\\n  103:           $this->tester->ok($content == $this->response->getContent(), 'content in cache is ok');\\n  104          } else {\\n  105            $ret = unserialize($cacheManager->get($uri));\\n  106            $content = $ret['content'];\\n  107:           $this->tester->ok(false !== strpos($this->response->getContent(), $content), 'content in cache is ok');\\n  108          }\\n  109        }\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTestFunctional.class.php:\\n   20  {\\n   21    /**\\n   22:    * Initializes the browser tester instance.\\n   23     *\\n   24     * @param sfBrowserBase $browser A sfBrowserBase instance\\n   25     * @param lime_test     $lime    A lime instance\\n   26     */\\n   27:   public function __construct(sfBrowserBase $browser, lime_test $lime = null, $testers = array())\\n   28    {\\n   29:     $testers = array_merge(array(\\n   30        'view_cache' => 'sfTesterViewCache',\\n   31        'form'       => 'sfTesterForm',\\n   32:     ), $testers);\\n   33  \\n   34:     parent::__construct($browser, $lime, $testers);\\n   35    }\\n   36  \\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTestFunctionalBase.class.php:\\n   21  abstract class sfTestFunctionalBase\\n   22  {\\n   23:   protected $testers       = array(),\\n   24      $blockTester   = null,\\n   25      $currentTester = null,\\n   ..\\n   29  \\n   30    /**\\n   31:    * Initializes the browser tester instance.\\n   32     *\\n   33     * @param sfBrowserBase $browser A sfBrowserBase instance\\n   34     * @param lime_test     $lime    A lime instance\\n   35     */\\n   36:   public function __construct(sfBrowserBase $browser, lime_test $lime = null, $testers = array())\\n   37    {\\n   38      $this->browser = $browser;\\n   ..\\n   47        'user'     => 'sfTesterUser',\\n   48        'mailer'   => 'sfTesterMailer',\\n   49:     ), $testers));\\n   50  \\n   51      // register our shutdown function\\n   ..\\n   58  \\n   59    /**\\n   60:    * Returns the tester associated with the given name.\\n   61     *\\n   62:    * @param string   $name The tester name\\n   63     *\\n   64     * @param sfTester A sfTester instance\\n   ..\\n   66    public function with($name)\\n   67    {\\n   68:     if (!isset($this->testers[$name])) {\\n   69:       throw new InvalidArgumentException(sprintf('The \\\"%s\\\" tester does not exist.', $name));\\n   70      }\\n   71  \\n   72      if ($this->blockTester) {\\n   73:       throw new LogicException(sprintf('You cannot nest tester blocks.'));\\n   74      }\\n   75  \\n   76:     $this->currentTester = $this->testers[$name];\\n   77      $this->currentTester->initialize();\\n   78  \\n   ..\\n   81  \\n   82    /**\\n   83:    * Begins a block of test for the current tester.\\n   84     *\\n   85     * @return sfTester The current sfTester instance\\n   ..\\n   88    {\\n   89      if (!$this->currentTester) {\\n   90:       throw new LogicException(sprintf('You must call with() before beginning a tester block.'));\\n   91      }\\n   92  \\n   ..\\n   95  \\n   96    /**\\n   97:    * End a block of test for the current tester.\\n   98     *\\n   99     * @return sfTestFunctionalBase\\n  ...\\n  102    {\\n  103      if (null === $this->blockTester) {\\n  104:       throw new LogicException(sprintf('There is no current tester block to end.'));\\n  105      }\\n  106  \\n  ...\\n  111  \\n  112    /**\\n  113:    * Sets the testers.\\n  114     *\\n  115:    * @param array $testers An array of named testers\\n  116     */\\n  117:   public function setTesters($testers)\\n  118    {\\n  119:     foreach ($testers as $name => $tester) {\\n  120:       $this->setTester($name, $tester);\\n  121      }\\n  122    }\\n  123  \\n  124    /**\\n  125:    * Sets a tester.\\n  126     *\\n  127:    * @param string          $name   The tester name\\n  128:    * @param sfTester|string $tester A sfTester instance or a tester class name\\n  129     */\\n  130:   public function setTester($name, $tester)\\n  131    {\\n  132:     if (is_string($tester)) {\\n  133:       $tester = new $tester($this, self::$test);\\n  134      }\\n  135  \\n  136:     if (!$tester instanceof sfTester) {\\n  137:       throw new InvalidArgumentException(sprintf('The tester \\\"%s\\\" is not of class sfTester.', $name));\\n  138      }\\n  139  \\n  140:     $this->testers[$name] = $tester;\\n  141    }\\n  142  \\n  ...\\n  229      $this->test()->comment(sprintf('%s %s', strtolower($method), $uri));\\n  230  \\n  231:     foreach ($this->testers as $tester) {\\n  232:       $tester->prepare();\\n  233      }\\n  234  \\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/util/sfFinder.class.php:\\n  649   *\\n  650   * sfNumberCompare compiles a simple comparison to an anonymous\\n  651:  * subroutine, which you can call with a value to be tested again.\\n  652  \\n  653   * Now this would be very pointless, if sfNumberCompare didn't understand\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/README:\\n    6  \\n    7  Symfony was written entirely in PHP 5.\\n    8: It has been thoroughly tested in various real-world projects, and is actually in use for high-demand e-business websites.\\n    9  It is compatible with most of the available databases engines, including MySQL, PostgreSQL, Oracle, and Microsoft SQL Server.\\n   10  It runs on *nix and Windows platforms.\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/test/unit/debug/sfTimerTest.php:\\n   19  $timer->addTime();\\n   20  $t->is($timer->getCalls(), 2, '->getCalls() returns the amount of addTime() calls');\\n   21: $t->ok($timer->getElapsedTime() > 0, '->getElapsedTime() returns a value greater than zero. No precision is tested by the unit test to avoid false alarms');\\n   22  \\n   23  $t->diag('sfTimerManager');\\n\\n/Users/jean/Projects/mercur/library/symfony-1.4.16/test/unit/test/sfTestFunctionalTest.php:\\n   55  \\n   56  $lime = new mockLime();\\n   57: $tester = new mockTestFunctional($browser, $lime);\\n   58  \\n   59  try {\\n   60:   $tester->click('a.clickme');\\n   61    $t->pass('->click() accepts a CSS selector');\\n   62  } catch (Exception $e) {\\n   ..\\n   65  }\\n   66  \\n   67: $t->is_deeply($tester->called, array(array('/somewhere', 'get', array())), '->click() parses a CSS selector');\\n   68  \\n\\n/Users/jean/Projects/mercur/module/AckCore/autoload_classmap.php:\\n  155    'AckCore\\\\Model\\\\Tag'                                 => __DIR__ . '/src/AckCore/Model/Tag.php',\\n  156    'AckCore\\\\Model\\\\Tags'                                => __DIR__ . '/src/AckCore/Model/Tags.php',\\n  157:   'AckCore\\\\Model\\\\teste'                               => __DIR__ . '/src/AckCore/Model/teste.php',\\n  158:   'AckCore\\\\Model\\\\testes'                              => __DIR__ . '/src/AckCore/Model/testes.php',\\n  159    'AckCore\\\\Model\\\\Text'                                => __DIR__ . '/src/AckCore/Model/Text.php',\\n  160    'AckCore\\\\Observer\\\\NewUser'                          => __DIR__ . '/src/AckCore/Observer/NewUser.php',\\n\\n/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/teste.php:\\n    2  namespace AckCore\\\\Model;\\n    3  use System\\\\Db\\\\RowAbstract;\\n    4: class teste extends RowAbstract\\n    5  {\\n    6:     protected $_table = \\\"\\\\AckCore\\\\Model\\\\testes\\\";\\n    7  }\\n    8  \\n\\n/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/testes.php:\\n    2  namespace AckCore\\\\Model;\\n    3  use System\\\\Db\\\\TableAbstract;\\n    4: class testes extends TableAbstract\\n    5  {\\n    6      protected $_name = \\\"\\\";\\n    7:     protected $_row = \\\"\\\\AckCore\\\\Model\\\\teste\\\";\\n    8  \\n    9:     const moduleName = \\\"teste\\\";\\n   10      const moduleId = 45;\\n   11  }\\n\\n/Users/jean/Projects/mercur/module/Integracao/src/Integracao/Controller/OndeEncontrarController.php:\\n   56              $posicao = $lastRow['registro'];\\n   57              $countArrayDados = count($arrayDados);\\n   58:             #incremento para teste de atualização do lastrow\\n   59              $i = 0;\\n   60              while ($posicao < $countArrayDados) {\\n\\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/FaleconoscoController.php:\\n  327      }\\n  328  \\n  329:     public function testeAction()\\n  330      {\\n  331          $mailer = $this->getServiceLocator()->get('System\\\\Mail\\\\Mail');\\n\\n/Users/jean/Projects/mercur/module/MercurAcl/src/MercurAcl/Controller/RolesController.php:\\n   36      }\\n   37  \\n   38:     public function testeAction()\\n   39      {\\n   40          $acl = $this->getServiceLocator()->get(\\\"MercurAcl\\\\Permissions\\\\Acl\\\");\\n\\n/Users/jean/Projects/mercur/module/Sac/config/module.config.php:\\n   48                  )\\n   49              ),\\n   50:             'sacteste' => array(\\n   51                  'type' => 'Segment',\\n   52                  'options' => array(\\n   ..\\n   58                          '__NAMESPACE__' => 'Sac\\\\Controller',\\n   59                          'controller' => 'Index',\\n   60:                         'action' => 'teste',\\n   61                          'codigo' => false,\\n   62                      )\\n\\n/Users/jean/Projects/mercur/module/Sac/src/Sac/Controller/InteracaoController.php:\\n   10      public function indexAction()\\n   11      {\\n   12:         echo 'teste';die;\\n   13          $response = $this->getResponse();\\n   14          $tiposSac = array(\\n\\n/Users/jean/Projects/mercur/public/js/ack/script.ack_uploadFiles.js:\\n  952  	$('.upMidias').on('click', '#salvarAnexo', function(){\\n  953  		$('button').removeAttr('disabled');\\n  954: 		console.log('teste');\\n  955  		id_pagina = $('input[type=\\\"hidden\\\"].dadosPagina').val();\\n  956  \\n\\n/Users/jean/Projects/mercur/public/js/ack/script.funcoes.ack.js:\\n  757  			largura: 500,\\n  758  			altura: 150,\\n  759: 			titulo: 'titulo teste',\\n  760: 			texto: 'texto teste',\\n  761  			input: 'dados ocultos',\\n  762  			id_parent: '',\\n\\n/Users/jean/Projects/mercur/public/plugins/ack/uploads/com/adobe/utils/StringUtil.as:\\n  145  		*	@param input The string that the prefix will be checked against.\\n  146  		*\\n  147: 		*	@param prefix The prefix that will be tested against the string.\\n  148  		*\\n  149  		*	@returns True if the string starts with the prefix, false if it does not.\\n  ...\\n  163  		*	@param input The string that the suffic will be checked against.\\n  164  		*\\n  165: 		*	@param prefix The suffic that will be tested against the string.\\n  166  		*\\n  167  		*	@returns True if the string ends with the suffix, false if it does not.\\n\\n/Users/jean/Projects/mercur/public/plugins/bootstrap-2.3.2/CONTRIBUTING.md:\\n   37  - If modifying the .less files, always recompile and commit the compiled files bootstrap.css and bootstrap.min.css\\n   38  - Try not to pollute your pull request with unintended changes--keep them simple and small\\n   39: - Try to share which browsers your code has been tested in before submitting a pull request\\n   40  \\n   41  \\n\\n/Users/jean/Projects/mercur/public/plugins/jquery.hashchange.js:\\n   34  // \\n   35  // Information about what version or versions of jQuery this plugin has been\\n   36: // tested with, what browsers it has been tested in, and where the unit tests\\n   37  // reside (so you can test it yourself).\\n   38  // \\n\\n/Users/jean/Projects/mercur/public/plugins/raty-2.5.2/index.html:\\n 1269  \\n 1270            <p>\\n 1271:             This plugin is tested to work better.\\n 1272              <a href=\\\"http://wbotelhos.com/raty/spec/run.html\\\" target=\\\"_blank\\\">Check it out!</a>\\n 1273            </p>\\n\\n/Users/jean/Projects/mercur/public/plugins/site/uploadify/helpers.php:\\n  562  \\n  563          // A função substr() tem objetivo de retornar parte da string\\n  564:         // Caso queira números com mais digitos mude de 1 para 2 e teste\\n  565          $str1 = substr($consoante, $aux1, 1);\\n  566          $str2 = substr($vogais, $aux2, 1);\\n\\n/Users/jean/Projects/mercur/public/plugins/thumb/docs/phpthumb.faq.txt:\\n  324  A: Possibly, but it's not easy. Theoretically, if you have\\n  325     html2ps, GhostScript and ImageMagick all installed it should\\n  326:    be possible, but I have not tested that.  Other projects that\\n  327     attempt to generate thumbnails from webpages include:\\n  328     http://www.boutell.com/webthumb/\\n\\n/Users/jean/Projects/mercur/public/plugins/uploads/com/adobe/utils/StringUtil.as:\\n  145  		*	@param input The string that the prefix will be checked against.\\n  146  		*\\n  147: 		*	@param prefix The prefix that will be tested against the string.\\n  148  		*\\n  149  		*	@returns True if the string starts with the prefix, false if it does not.\\n  ...\\n  163  		*	@param input The string that the suffic will be checked against.\\n  164  		*\\n  165: 		*	@param prefix The suffic that will be tested against the string.\\n  166  		*\\n  167  		*	@returns True if the string ends with the suffix, false if it does not.\\n\\n/Users/jean/Projects/mercur/vendor/guzzle/guzzle/docs/getting-started/installation.rst:\\n  129      cd guzzle && curl -s http://getcomposer.org/installer | php && ./composer.phar install --dev\\n  130  \\n  131: Guzzle is unit tested with PHPUnit. You will need to create your own phpunit.xml file in order to run the unit tests\\n  132  (or just copy phpunit.xml.dist to phpunit.xml). Run the tests using the vendored PHPUnit binary:\\n  133  \\n\\n/Users/jean/Projects/mercur/vendor/guzzle/guzzle/docs/testing/unit-testing.rst:\\n   12  -------------------\\n   13  \\n   14: Guzzle is unit tested using `PHPUnit <http://www.phpunit.de/>`_.  Your web service client's unit tests should extend\\n   15  ``Guzzle\\\\Tests\\\\GuzzleTestCase`` so that you can take advantage of some of the built in helpers.\\n   16  \\n\\n/Users/jean/Projects/mercur/vendor/guzzle/guzzle/tests/Guzzle/Tests/GuzzleTestCase.php:\\n  170       *\\n  171       * This method assumes that mock response files are located under the\\n  172:      * Command/Mock/ directory of the Service being tested\\n  173       * (e.g. Unfuddle/Command/Mock/).  A mock response is added to the next\\n  174       * request sent by the client.\\n\\n/Users/jean/Projects/mercur/vendor/jean-carlo-machado/devil-php-utilities/src/DevilPhpUtilities/Password.php:\\n   39  \\n   40          // A função substr() tem objetivo de retornar parte da string\\n   41:         // Caso queira números com mais digitos mude de 1 para 2 e teste\\n   42          $str1 = substr($consoante,$aux1,1);\\n   43          $str2 = substr($vogais,$aux2,1);\\n   ..\\n   87  \\n   88              // A função substr() tem objetivo de retornar parte da string\\n   89:             // Caso queira números com mais digitos mude de 1 para 2 e teste\\n   90              $str1 = substr($consoante,$aux1,1);\\n   91              $str2 = substr($vogais,$aux2,1);\\n\\n/Users/jean/Projects/mercur/vendor/phpmailer/phpmailer/changelog.md:\\n  335  ## Version 2.1.0beta2 (Sun, Dec 02 2007)\\n  336  * implemented updated EncodeQP (thanks to coolbru, aka Marcus Bointon)\\n  337: * finished all testing, all known bugs corrected, enhancements tested\\n  338  \\n  339  Note: will NOT work with PHP4.\\n  ...\\n  369  * fixed warning message in SMTP get_lines method\\n  370  * added TLS/SSL SMTP support.\\n  371: * PHPMailer has been tested with PHP4 (4.4.7) and PHP5 (5.2.7)\\n  372  * Works with PHP installed as a module or as CGI-PHP\\n  373  NOTE: will NOT work with PHP5 in E_STRICT error mode\\n\\n/Users/jean/Projects/mercur/vendor/phpmailer/phpmailer/docs/pop3_article.txt:\\n    1: This is built for PHP Mailer 1.72 and was not tested with any previous version. It was developed under PHP 4.3.11 (E_ALL). It works under PHP 5 and 5.1 with E_ALL, but not in Strict mode due to var deprecation (but then neither does PHP Mailer either!). It follows the RFC 1939 standard explicitly and is fully commented.\\n    2  \\n    3  With that noted, here is how to implement it:\\n\\n/Users/jean/Projects/mercur/vendor/phpmailer/phpmailer/examples/scripts/XRegExp.js:\\n  300          }\\n  301          if (!this.global)\\n  302:             this.lastIndex = origLastIndex; // Fix IE, Opera bug (last tested IE 9.0.5, Opera 11.61 on Windows)\\n  303          return match;\\n  304      };\\n  ...\\n  316              this.lastIndex--;\\n  317          if (!this.global)\\n  318:             this.lastIndex = origLastIndex; // Fix IE, Opera bug (last tested IE 9.0.5, Opera 11.61 on Windows)\\n  319          return !!match;\\n  320      };\\n  ...\\n  424          if (isRegex) {\\n  425              if (search.global)\\n  426:                 search.lastIndex = 0; // Fix IE, Safari bug (last tested IE 9.0.5, Safari 5.1.2 on Windows)\\n  427              else\\n  428:                 search.lastIndex = origLastIndex; // Fix IE, Opera bug (last tested IE 9.0.5, Opera 11.61 on Windows)\\n  429          }\\n  430  \\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage.php:\\n  454              if ($this->mapTestClassNameToCoveredClassName &&\\n  455                  empty($linesToBeCovered)) {\\n  456:                 $testedClass = substr($testClassName, 0, -4);\\n  457  \\n  458:                 if (class_exists($testedClass)) {\\n  459:                     $class = new ReflectionClass($testedClass);\\n  460  \\n  461                      $linesToBeCovered = array(\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer.php:\\n  120  \\n  121          if (isset($data['numClasses']) && $data['numClasses'] > 0) {\\n  122:             $classesLevel = $this->getColorLevel($data['testedClassesPercent']);\\n  123  \\n  124              $classesNumber = $data['numTestedClasses'] . $numSeperator .\\n  ...\\n  126  \\n  127              $classesBar = $this->getCoverageBar(\\n  128:               $data['testedClassesPercent']\\n  129              );\\n  130          }\\n  ...\\n  135  \\n  136          if ($data['numMethods'] > 0) {\\n  137:             $methodsLevel = $this->getColorLevel($data['testedMethodsPercent']);\\n  138  \\n  139              $methodsNumber = $data['numTestedMethods'] . $numSeperator .\\n  ...\\n  141  \\n  142              $methodsBar = $this->getCoverageBar(\\n  143:               $data['testedMethodsPercent']\\n  144              );\\n  145          }\\n  ...\\n  170              'lines_number' => $linesNumber,\\n  171              'methods_bar' => $methodsBar,\\n  172:             'methods_tested_percent' => $data['testedMethodsPercentAsString'],\\n  173              'methods_level' => $methodsLevel,\\n  174              'methods_number' => $methodsNumber,\\n  175              'classes_bar' => $classesBar,\\n  176:             'classes_tested_percent' => isset($data['testedClassesPercentAsString']) ? $data['testedClassesPercentAsString'] : '',\\n  177              'classes_level' => $classesLevel,\\n  178              'classes_number' => $classesNumber\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Dashboard.php:\\n   72          $template->setVar(\\n   73            array(\\n   74:             'least_tested_methods' => $this->leastTestedMethods($classes),\\n   75              'top_project_risks'    => $this->topProjectRisks($classes),\\n   76              'cc_values'            => $this->classComplexity($classes),\\n   ..\\n  151  \\n  152      /**\\n  153:      * Returns the least tested methods.\\n  154       *\\n  155       * @param  array   $classes\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Directory.php:\\n  103            'numExecutedLines'             => $item->getNumExecutedLines(),\\n  104            'numExecutableLines'           => $item->getNumExecutableLines(),\\n  105:           'testedMethodsPercent'         => $item->getTestedMethodsPercent(FALSE),\\n  106:           'testedMethodsPercentAsString' => $item->getTestedMethodsPercent(),\\n  107:           'testedClassesPercent'         => $item->getTestedClassesAndTraitsPercent(FALSE),\\n  108:           'testedClassesPercentAsString' => $item->getTestedClassesAndTraitsPercent()\\n  109          );\\n  110  \\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/File.php:\\n  145              'numExecutedLines'             => $node->getNumExecutedLines(),\\n  146              'numExecutableLines'           => $node->getNumExecutableLines(),\\n  147:             'testedMethodsPercent'         => $node->getTestedMethodsPercent(FALSE),\\n  148:             'testedMethodsPercentAsString' => $node->getTestedMethodsPercent(),\\n  149:             'testedClassesPercent'         => $node->getTestedClassesAndTraitsPercent(FALSE),\\n  150:             'testedClassesPercentAsString' => $node->getTestedClassesAndTraitsPercent(),\\n  151              'crap'                         => '<abbr title=\\\"Change Risk Anti-Patterns (CRAP) Index\\\">CRAP</abbr>'\\n  152            )\\n  ...\\n  211                  'numExecutedLines'             => $item['executedLines'],\\n  212                  'numExecutableLines'           => $item['executableLines'],\\n  213:                 'testedMethodsPercent'         => PHP_CodeCoverage_Util::percent(\\n  214                                                      $numTestedMethods,\\n  215                                                      $numMethods,\\n  216                                                      FALSE\\n  217                                                    ),\\n  218:                 'testedMethodsPercentAsString' => PHP_CodeCoverage_Util::percent(\\n  219                                                      $numTestedMethods,\\n  220                                                      $numMethods,\\n  221                                                      TRUE\\n  222                                                    ),\\n  223:                 'testedClassesPercent'         => PHP_CodeCoverage_Util::percent(\\n  224                                                      $numTestedMethods == $numMethods ? 1 : 0,\\n  225                                                      1,\\n  226                                                      FALSE\\n  227                                                    ),\\n  228:                 'testedClassesPercentAsString' => PHP_CodeCoverage_Util::percent(\\n  229                                                      $numTestedMethods == $numMethods ? 1 : 0,\\n  230                                                      1,\\n  ...\\n  298              'numExecutedLines'             => $item['executedLines'],\\n  299              'numExecutableLines'           => $item['executableLines'],\\n  300:             'testedMethodsPercent'         => PHP_CodeCoverage_Util::percent(\\n  301                                                  $numTestedItems,\\n  302                                                  1,\\n  303                                                  FALSE\\n  304                                                ),\\n  305:             'testedMethodsPercentAsString' => PHP_CodeCoverage_Util::percent(\\n  306                                                  $numTestedItems,\\n  307                                                  1,\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Template/dashboard.html.dist:\\n   50       <h2>Least Tested Methods</h2>\\n   51       <ul>\\n   52: {{least_tested_methods}}\\n   53       </ul>\\n   54      </div>\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Template/directory_item.html.dist:\\n    5        <td class=\\\"{{lines_level}} small\\\"><div align=\\\"right\\\">{{lines_number}}</div></td>\\n    6        <td class=\\\"{{methods_level}} big\\\">{{methods_bar}}</td>\\n    7:       <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_tested_percent}}</div></td>\\n    8        <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_number}}</div></td>\\n    9        <td class=\\\"{{classes_level}} big\\\">{{classes_bar}}</td>\\n   10:       <td class=\\\"{{classes_level}} small\\\"><div align=\\\"right\\\">{{classes_tested_percent}}</div></td>\\n   11        <td class=\\\"{{classes_level}} small\\\"><div align=\\\"right\\\">{{classes_number}}</div></td>\\n   12       </tr>\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Template/file_item.html.dist:\\n    2        <td class=\\\"{{classes_level}}\\\">{{name}}</td>\\n    3        <td class=\\\"{{classes_level}} big\\\">{{classes_bar}}</td>\\n    4:       <td class=\\\"{{classes_level}} small\\\"><div align=\\\"right\\\">{{classes_tested_percent}}</div></td>\\n    5        <td class=\\\"{{classes_level}} small\\\"><div align=\\\"right\\\">{{classes_number}}</div></td>\\n    6        <td class=\\\"{{methods_level}} big\\\">{{methods_bar}}</td>\\n    7:       <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_tested_percent}}</div></td>\\n    8        <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_number}}</div></td>\\n    9        <td class=\\\"{{methods_level}} small\\\">{{crap}}</td>\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/HTML/Renderer/Template/method_item.html.dist:\\n    2        <td class=\\\"{{methods_level}}\\\" colspan=\\\"4\\\">{{name}}</td>\\n    3        <td class=\\\"{{methods_level}} big\\\">{{methods_bar}}</td>\\n    4:       <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_tested_percent}}</div></td>\\n    5        <td class=\\\"{{methods_level}} small\\\"><div align=\\\"right\\\">{{methods_number}}</div></td>\\n    6        <td class=\\\"{{methods_level}} small\\\">{{crap}}</td>\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/Node.php:\\n  173  \\n  174      /**\\n  175:      * Returns the percentage of classes that has been tested.\\n  176       *\\n  177       * @param  boolean $asString\\n  ...\\n  188  \\n  189      /**\\n  190:      * Returns the percentage of traits that has been tested.\\n  191       *\\n  192       * @param  boolean $asString\\n  ...\\n  203  \\n  204      /**\\n  205:      * Returns the percentage of traits that has been tested.\\n  206       *\\n  207       * @param  boolean $asString\\n  ...\\n  219  \\n  220      /**\\n  221:      * Returns the percentage of methods that has been tested.\\n  222       *\\n  223       * @param  boolean $asString\\n  ...\\n  260  \\n  261      /**\\n  262:      * Returns the number of tested classes and traits.\\n  263       *\\n  264       * @return integer\\n  ...\\n  331  \\n  332      /**\\n  333:      * Returns the number of tested classes.\\n  334       *\\n  335       * @return integer\\n  ...\\n  345  \\n  346      /**\\n  347:      * Returns the number of tested traits.\\n  348       *\\n  349       * @return integer\\n  ...\\n  359  \\n  360      /**\\n  361:      * Returns the number of tested methods.\\n  362       *\\n  363       * @return integer\\n  ...\\n  373  \\n  374      /**\\n  375:      * Returns the number of tested functions.\\n  376       *\\n  377       * @return integer\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/Node/Directory.php:\\n  386  \\n  387      /**\\n  388:      * Returns the number of tested classes.\\n  389       *\\n  390       * @return integer\\n  ...\\n  422  \\n  423      /**\\n  424:      * Returns the number of tested traits.\\n  425       *\\n  426       * @return integer\\n  ...\\n  458  \\n  459      /**\\n  460:      * Returns the number of tested methods.\\n  461       *\\n  462       * @return integer\\n  ...\\n  494  \\n  495      /**\\n  496:      * Returns the number of tested functions.\\n  497       *\\n  498       * @return integer\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/php-code-coverage/PHP/CodeCoverage/Report/Node/File.php:\\n  281  \\n  282      /**\\n  283:      * Returns the number of tested classes.\\n  284       *\\n  285       * @return integer\\n  ...\\n  301  \\n  302      /**\\n  303:      * Returns the number of tested traits.\\n  304       *\\n  305       * @return integer\\n  ...\\n  341  \\n  342      /**\\n  343:      * Returns the number of tested methods.\\n  344       *\\n  345       * @return integer\\n  ...\\n  383  \\n  384      /**\\n  385:      * Returns the number of tested functions.\\n  386       *\\n  387       * @return integer\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Autoload.php:\\n  145              'phpunit_framework_expectationfailedexception' => '/Framework/ExpectationFailedException.php',\\n  146              'phpunit_framework_incompletetest' => '/Framework/IncompleteTest.php',\\n  147:             'phpunit_framework_incompletetesterror' => '/Framework/IncompleteTestError.php',\\n  148              'phpunit_framework_outputerror' => '/Framework/OutputError.php',\\n  149              'phpunit_framework_selfdescribing' => '/Framework/SelfDescribing.php',\\n  150              'phpunit_framework_skippedtest' => '/Framework/SkippedTest.php',\\n  151:             'phpunit_framework_skippedtesterror' => '/Framework/SkippedTestError.php',\\n  152              'phpunit_framework_skippedtestsuiteerror' => '/Framework/SkippedTestSuiteError.php',\\n  153              'phpunit_framework_syntheticerror' => '/Framework/SyntheticError.php',\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Framework/Assert.php:\\n 2070       *\\n 2071       * The second argument ($actual) is a string containing either HTML or\\n 2072:      * XML text to be tested.\\n 2073       *\\n 2074       * The third argument ($message) is an optional message that will be\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Framework/Assert/Functions.php:\\n 1601   *\\n 1602   * The second argument ($actual) is a string containing either HTML or\\n 1603:  * XML text to be tested.\\n 1604   *\\n 1605   * The third argument ($message) is an optional message that will be\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Framework/Comparator/Object.php:\\n  112          // don't compare objects if they are identical\\n  113          // this helps to avoid the error \\\"maximum function nesting level reached\\\"\\n  114:         // CAUTION: this conditional clause is not tested\\n  115          if ($actual !== $expected) {\\n  116              try {\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Framework/ComparatorFactory.php:\\n  128       * This comparator will be returned by getInstance() if its accept() method\\n  129       * returns TRUE for the compared values. It has higher priority than the\\n  130:      * existing comparators, meaning that its accept() method will be tested\\n  131       * before those of the other comparators.\\n  132       *\\n\\n/Users/jean/Projects/mercur/vendor/phpunit/phpunit/Tests/Framework/ComparatorTest.php:\\n   60  class Framework_ComparatorTest extends PHPUnit_Framework_TestCase\\n   61  {\\n   62:     // Don't use other test methods than ->fail() here, because the testers tested\\n   63      // here are the foundation for the other test methods\\n   64  \\n\\n/Users/jean/Projects/mercur/vendor/symfony/yaml/Symfony/Component/Yaml/Tests/Fixtures/sfMergeKey.yml:\\n   31              - *foo\\n   32              - *dong\\n   33:         isit: tested\\n   34      head:\\n   35          <<: [ *foo , *dong , *foo2 ]\\n   ..\\n   41          'foo2' => array('a' => 'Ballmer'),\\n   42          'ding' => array('fi', 'fei', 'fo', 'fam'),\\n   43:         'check' => array('a' => 'Steve', 'b' => 'Clark', 'c' => 'Brian', 'fi', 'fei', 'fo', 'fam', 'isit' => 'tested'),\\n   44          'head' => array('a' => 'Steve', 'b' => 'Clark', 'c' => 'Brian', 'fi', 'fei', 'fo', 'fam')\\n   45      )\\n\\n/Users/jean/Projects/mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php:\\n  204              }\\n  205  \\n  206:             //teste obrigatório que sempre acontece\\n  207              //remove a entrada de colunas de outros idiomas\\n  208              $exploded = explode('_', $row->vars[$key]->getColumnName());\\n\\n/Users/jean/Projects/mercur/vendor/system/1.8/System/Db/RowAbstract.php:\\n  425       * testa se o objeto é do usuário\\n  426       * se nenhum u suário for passado o\\n  427:      * teste será feito com o  usuário atualmente\\n  428       * logado\\n  429       * @param  [type]  $user [description]\\n\\n/Users/jean/Projects/mercur/vendor/system/1.8/System/HtmlElements/Automator.php:\\n  139  \\n  140      /**\\n  141:      * array de exceções para os testes de renderizações de colunas\\n  142       * @param  [type] $key     [description]\\n  143       * @param  [type] $config  [description]\\n  ...\\n  166          if (!isset($config[\\\"whitelist\\\"])) {\\n  167  \\n  168:             //teste obrigatório que sempre acontece\\n  169              //remove a entrada de colunas de outros idiomas\\n  170              $exploded = explode(\\\"_\\\", $row->vars[$key]->getColumnName());\\n\\n/Users/jean/Projects/mercur/vendor/system/1.8/System/Object/Password.php:\\n   71  \\n   72          // A função substr() tem objetivo de retornar parte da string\\n   73:         // Caso queira números com mais digitos mude de 1 para 2 e teste\\n   74          $str1 = substr($consoante,$aux1,1);\\n   75          $str2 = substr($vogais,$aux2,1);\\n   ..\\n  119  \\n  120              // A função substr() tem objetivo de retornar parte da string\\n  121:             // Caso queira números com mais digitos mude de 1 para 2 e teste\\n  122              $str1 = substr($consoante,$aux1,1);\\n  123              $str2 = substr($vogais,$aux2,1);\\n\\n/Users/jean/Projects/mercur/vendor/system/1.8/System/Scripts/rows.sql:\\n   16  \\n   17  INSERT INTO `ack_metatags` (`id`, `modulo`, `relacao_id`, `title`, `author`, `description`, `keywords`, `robots`, `revisit`) VALUES\\n   18: (1, 7, 1, 'teste', 'teset', 'teset', 'teset', '1', '7');\\n   19  \\n   20  INSERT INTO `ack_modulos` (`id`, `modulo`, `titulo_pt`, `descricao_pt`, `descricaolonga_pt`, `descricaolonga_en`, `titulo_en`, `descricao_en`, `ack`, `destaque`, `titulodestaque`, `construcao`, `status`, `visivel`) VALUES\\n   ..\\n   45  (28, 'tags', 'Tags', 'tags', NULL, NULL, 'tags', 'tags', '1', '0', '', 0, '1', 1),\\n   46  (29, 'faq_category', 'Categorias de FAQ', 'Clique em um dos campos abaixo para ter suas dúvidas respondidas:', NULL, NULL, '', 'faq_category', '1', '0', 'asdfasdf', 0, '1', 1),\\n   47: (31, 'politica_privacidade', 'Política de Privacidade', '<p style=\\\"text-align: justify;\\\">A Imgstock &eacute; uma empresa de sublicenciamento de imagens. Ela est&aacute; sediada na cidade de Caxias do Sul, no Estado do Rio Grande do Sul &ndash; Brasil, e tem como um de seus principais compromissos a prote&ccedil;&atilde;o e o respeito da privacidade de seus clientes.</p>\\\\n<p style=\\\"text-align: justify;\\\">Deste modo, a <strong>Pol&iacute;tica de Privacidade e Termos de Uso</strong> definem os fundamentos e a conduta de relacionamento da empresa com os usu&aacute;rios do site, clientes e fornecedores. Ela apresenta o nosso comprometimento com os dados pessoais coletados no sistema ou fornecidos pelo usu&aacute;rio, na qual firmamos o compromisso de mant&ecirc;-los em sigilo e seguros em nosso banco de dados, instalado em servidores de alta tecnologia.</p>\\\\n<p style=\\\"text-align: justify;\\\">Recomendamos a leitura das cl&aacute;usulas seguintes para entender nossa vis&atilde;o, respeito e reciprocidade com voc&ecirc;.</p>\\\\n<p style=\\\"text-align: justify;\\\">&nbsp;</p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Informa&ccedil;&otilde;es coletadas com o usu&aacute;rio:<br /><br /></strong>Confira os dados que s&atilde;o coletados e processados pela Imgstock:</p>\\\\n<ul style=\\\"text-align: justify; list-style-type: square;\\\">\\\\n<li style=\\\"text-align: justify;\\\">Informa&ccedil;&otilde;es fornecidas pelo usu&aacute;rio atrav&eacute;s do preenchimento de formul&aacute;rios no site, incluindo os dados fornecidos no ato do registro para uso do site, envio de material ou solicita&ccedil;&atilde;o de outros servi&ccedil;os.</li>\\\\n<li style=\\\"text-align: justify;\\\">Detalhes de transa&ccedil;&otilde;es que voc&ecirc;/usu&aacute;rio realizar atrav&eacute;s do nosso site.</li>\\\\n<li style=\\\"text-align: justify;\\\">Detalhes das visitas dos usu&aacute;rios ao site, incluindo dados de tr&aacute;fego e de localiza&ccedil;&atilde;o, e outros dados de comunica&ccedil;&atilde;o, se estes forem necess&aacute;rios para os nossos prop&oacute;sitos.</li>\\\\n<li style=\\\"text-align: justify;\\\">A&nbsp;Imgstock reserva-se o direito de requerer a voc&ecirc;/usu&aacute;rio informa&ccedil;&otilde;es quando ocorrer qualquer problema em nosso site.</li>\\\\n<li style=\\\"text-align: justify;\\\">A empresa tamb&eacute;m poder&aacute; efetuar e manter um registro de correspond&ecirc;ncia, no momento em que voc&ecirc; entrar em contato conosco.</li>\\\\n</ul>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Concord&acirc;ncia:<br /></strong></p>\\\\n<ul style=\\\"list-style-type: square; text-align: justify;\\\">\\\\n<li style=\\\"text-align: justify;\\\">Ao enviar-nos os seus dados pessoais, voc&ecirc;/usu&aacute;rio concorda com a transfer&ecirc;ncia, armazenamento ou processamento dessas informa&ccedil;&otilde;es, sendo que todos os dados fornecidos ser&atilde;o registrados em servidores seguros.</li>\\\\n<li style=\\\"text-align: justify;\\\">Todas as opera&ccedil;&otilde;es de pagamento ser&atilde;o criptografadas, usando-se das mais recentes tecnologias da internet.</li>\\\\n<li style=\\\"text-align: justify;\\\">Quando ocorrer a escolha e o registro de uma senha para acessar determinados itens de nosso site, voc&ecirc;/usu&aacute;rio se compromete que ser&aacute; o respons&aacute;vel por mant&ecirc;-la em confidencialidade. Pedimos que sua senha pessoal n&atilde;o seja compartilhada com ningu&eacute;m.</li>\\\\n<li style=\\\"text-align: justify;\\\">Reiteramos que tomaremos todas as medidas necess&aacute;rias para assegurar que seus dados se mantenham seguros e de acordo com esta Pol&iacute;tica de Privacidade.</li>\\\\n</ul>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Usos:</strong></p>\\\\n<p style=\\\"text-align: justify;\\\">As informa&ccedil;&otilde;es obtidas e registras sobre voc&ecirc;/usu&aacute;rio ser&atilde;o utilizadas para:</p>\\\\n<ul style=\\\"list-style-type: square; text-align: justify;\\\">\\\\n<li style=\\\"text-align: justify;\\\">Assegurar que o conte&uacute;do de nosso site &eacute; apresentado de forma eficaz.</li>\\\\n<li style=\\\"text-align: justify;\\\">Fornecer informa&ccedil;&otilde;es, produtos ou servi&ccedil;os solicitados por voc&ecirc; ou que sejam do seu interesse.</li>\\\\n<li style=\\\"text-align: justify;\\\">Realizar nossas obriga&ccedil;&otilde;es de maneira satisfat&oacute;ria e que honrem os compromissos firmados entre voc&ecirc; e a empresa Imgstock.</li>\\\\n<li style=\\\"text-align: justify;\\\">Notific&aacute;-lo sobre mudan&ccedil;as em nosso servi&ccedil;o ou sistema.</li>\\\\n<li style=\\\"text-align: justify;\\\">Contat&aacute;-lo sobre a disponibilidade de produtos e servi&ccedil;os ofertados por n&oacute;s.</li>\\\\n</ul>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Divulga&ccedil;&atilde;o:</strong></p>\\\\n<p style=\\\"text-align: justify;\\\">Fica estabelecido que n&oacute;s poderemos revelar suas informa&ccedil;&otilde;es pessoais a qualquer empresa membro do nosso grupo, que exista ou possa vir a ser criada, incluindo filiais, subsidi&aacute;rias ou holdings.</p>\\\\n<p style=\\\"text-align: justify;\\\">As suas informa&ccedil;&otilde;es pessoais poder&atilde;o ser reveladas a terceiros quando:</p>\\\\n<ul style=\\\"list-style-type: square; text-align: justify;\\\">\\\\n<li style=\\\"text-align: justify;\\\">A empresa Imgstock ou todos os seus ativos sejam adquiridos por terceiros, caso em que os dados pessoais de clientes ser&atilde;o um dos ativos transferidos.</li>\\\\n<li style=\\\"text-align: justify;\\\">A fim de cumprir qualquer obriga&ccedil;&atilde;o legal, aplicar e executar nosso Termo de Uso e outros acordos, ou para proteger os direitos, propriedade ou seguran&ccedil;a da Imgstock, nossos clientes e outros.</li>\\\\n</ul>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Acesso &agrave; informa&ccedil;&atilde;o:<br /><br /></strong>A Legisla&ccedil;&atilde;o vigente no Pa&iacute;s lhe d&aacute; o direito de acesso &agrave;s informa&ccedil;&otilde;es mantidas sobre voc&ecirc;. Sendo que qualquer pedido de acesso poder&aacute; estar sujeito ao pagamento de uma taxa de custo de fornecimento destas informa&ccedil;&otilde;es.</p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Mudan&ccedil;as:</strong></p>\\\\n<p style=\\\"text-align: justify;\\\">Quaisquer altera&ccedil;&otilde;es que poder&atilde;o ocorrer sobre nossa Pol&iacute;tica de Privacidade no futuro, ser&atilde;o publicadas nesta p&aacute;gina e, quando apropriado, notificado diretamente voc&ecirc;/usu&aacute;rio por e-mail.</p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>&nbsp;</strong></p>\\\\n<p style=\\\"text-align: justify;\\\"><strong>Contato:</strong></p>\\\\n<p style=\\\"text-align: justify;\\\">Questionamentos, d&uacute;vidas e coment&aacute;rios relativos a esta <strong>Pol&iacute;tica de Privacidade e Termos de Uso</strong> devem ser dirigidas ao e-mail: <a href=\\\"mailto:atendimento@imgstock.com.br\\\">atendimento@imgstock.com.br</a> ou para o endere&ccedil;o: Imgstock &ndash; Rua Luiz Cecconello, n&ordm; 631, Bairro Jardelino Ramos, Cep: 95020-400, Caxias do Sul &ndash; RS &ndash; Brasil.<br /><br />&nbsp;</p>', NULL, NULL, 'politica_privacidade', '<p>teste 222</p>', '0', '0', 'Teste', 0, '1', 1),\\n   48  (32, 'textos', 'Textos do sistema', 'Textos do sistema', 'Textos do sistema', 'Textos do sistema', 'Textos do sistema', 'Textos do sistema', '0', '0', '', 0, '1', 1),\\n   49  (33, 'conteudos', 'Conteúdos do Ack', '<p>Conte&uacute;dos do Ack</p>', 'Conteúdos do Ack', 'Conteúdos do Ack', 'Conteúdos do AckCore\\\\r\\\\nWHERE  `id` =33', 'Conteúdos do Ack', '0', '0', 'dasfas', 0, '1', 1);\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Feed/Reader/Extension/AbstractFeed.php:\\n  112       * @return array\\n  113       */\\n  114:     public function toArray() // untested\\n  115      {\\n  116          return $this->data;\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/File/Transfer/Adapter/Http.php:\\n  167                  }\\n  168  \\n  169:                 // Should never return false when it's tested by the upload validator\\n  170                  if (!move_uploaded_file($content['tmp_name'], $filename)) {\\n  171                      if ($content['options']['ignoreNoFile']) {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Math/Source/HashTiming.php:\\n   43   *\\n   44   *\\n   45:  * The function is providing, at least at the systems tested :),\\n   46   * $len bytes of entropy under any PHP installation or operating system.\\n   47   * The execution time should be at most 10-20 ms in any system.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Text/Figlet/Figlet.php:\\n  459  \\n  460              // Build the character\\n  461:             // Note: The following code is complex and thoroughly tested.\\n  462              // Be careful when modifying!\\n  463              do {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Validator/ValidatorPluginManager.php:\\n   56          'csrf'                     => 'Zend\\\\Validator\\\\Csrf',\\n   57          'date'                     => 'Zend\\\\Validator\\\\Date',\\n   58:         'datestep'                 => 'Zend\\\\Validator\\\\DateStep',\\n   59          'datetime'                 => 'Zend\\\\I18n\\\\Validator\\\\DateTime',\\n   60          'dbnorecordexists'         => 'Zend\\\\Validator\\\\Db\\\\NoRecordExists',\\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/.git/index:\\n    <binary>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/demos/Zend/Gdata/InstallationChecker.php:\\n   42      private $_allErrors = array(\\n   43          self::PHP_EXTENSION_ERRORS => array(\\n   44:             'tested' => false, 'errors' => null),\\n   45          self::ZEND_GDATA_INSTALL_ERRORS => array(\\n   46:             'tested' => false, 'errors' => null),\\n   47          self::SSL_CAPABILITIES_ERRORS => array(\\n   48:             'tested' => false, 'errors' => null),\\n   49          self::YOUTUBE_API_CONNECTIVITY_ERRORS => array(\\n   50:             'tested' => false, 'errors' => null)\\n   51              );\\n   52  \\n   ..\\n  142              }\\n  143          }\\n  144:         $this->_allErrors[self::PHP_EXTENSION_ERRORS]['tested'] = true;\\n  145          if (count($phpExtensionErrors) > 0) {\\n  146              $this->_allErrors[self::PHP_EXTENSION_ERRORS]['errors'] =\\n  ...\\n  199          }\\n  200  \\n  201:         $this->_allErrors[self::ZEND_GDATA_INSTALL_ERRORS]['tested'] = true;\\n  202  \\n  203          if (count($zendFrameworkInstallationErrors) > 0) {\\n  ...\\n  249              'https://www.google.com/accounts/AuthSubRequest');\\n  250          $response = $httpClient->request();\\n  251:         $this->_allErrors[self::SSL_CAPABILITIES_ERRORS]['tested'] = true;\\n  252  \\n  253          if ($response->isError()) {\\n  ...\\n  287          }\\n  288  \\n  289:         $this->_allErrors[self::YOUTUBE_API_CONNECTIVITY_ERRORS]['tested'] =\\n  290              true;\\n  291          if (count($connectivityErrors) > 0) {\\n  292:             $this->_allErrors[self::YOUTUBE_API_CONNECTIVITY_ERRORS]['tested'] =\\n  293                  $connectivityErrors;\\n  294              return false;\\n  ...\\n  325          foreach($this->_allErrors as $key => $value) {\\n  326              $output .= $key . ' -- ';\\n  327:             if (($value['tested'] == true) && (count($value['errors']) == 0)) {\\n  328                  $output .= \\\"No errors found\\\\n\\\";\\n  329:             } elseif ($value['tested'] == true) {\\n  330                  $output .= \\\"Tested\\\\n\\\";\\n  331                  $error_count = 0;\\n  ...\\n  335                  }\\n  336              } else {\\n  337:                 $output .= \\\"Not tested\\\\n\\\";\\n  338              }\\n  339              $error_count++;\\n  ...\\n  364          foreach($this->_allErrors as $key => $value) {\\n  365              $html .= \\\"<tr><td class=\\\\\\\"verification_type\\\\\\\">\\\" . $key . \\\"</td>\\\";\\n  366:             if (($value['tested'] == true) && (count($value['errors']) == 0)) {\\n  367                  $html .= \\\"<td class=\\\\\\\"success\\\\\\\">Tested</td></tr>\\\\n\\\" .\\n  368                      \\\"<tr><td colspan=\\\\\\\"2\\\\\\\">No errors found</td></tr>\\\\n\\\";\\n  369:             } elseif ($value['tested'] == true) {\\n  370                  $html .= \\\"<td class=\\\\\\\"warning\\\\\\\">Tested</td></tr>\\\\n\\\";\\n  371                  $error_count = 0;\\n  ...\\n  375                  }\\n  376              } else {\\n  377:                 $html .= \\\"<td class=\\\\\\\"warning\\\\\\\">Not tested</td></tr>\\\\n\\\";\\n  378              }\\n  379              $error_count++;\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/demos/Zend/Search/Lucene/indexing/IndexSource/contributing.patches.html:\\n  129  ><P\\n  130  >&#13;   After you have finished adding/changing the code, TEST it: We will not\\n  131:    accept code that hasn't been carefully tested.\\n  132     When you are absolutely sure the new code doesn't introduce bugs, create a\\n  133     unified diff by running:\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/demos/Zend/Wildfire/application/controllers/ZendLogWriterFirebugController.php:\\n   75      }\\n   76  \\n   77:     public function testerrorcontrollerAction()\\n   78      {\\n   79          require_once 'Zend/Exception.php';\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Application-CoreFunctionality-Bootstrap_BootstrapAbstract.xml:\\n  113                                  <para>\\n  114                                      <varname>$key</varname>: <emphasis>Benötigt</emphasis>.\\n  115:                                     Optionsschlüssel der getestet werden soll.\\n  116                                  </para>\\n  117                              </listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Auth_Adapter_Ldap.xml:\\n   12              Authentifizierung mit <acronym>LDAP</acronym> Services. Die Features beinhalten\\n   13              Kanonisierung von Benutzernamen und Domainnamen, Mehrfach-Domain Authentifizierung, und\\n   14:             Fehlerbehandlungs Features. Es wurde getestet mit <ulink\\n   15                  url=\\\"http://www.microsoft.com/windowsserver2003/technologies/directory/activedirectory/\\\">Microsoft\\n   16                  Active Directory</ulink> und <ulink url=\\\"http://www.openldap.org/\\\">OpenLDAP</ulink>,\\n   ..\\n  671                                  Das wird man normalerweise für Schrägstrich-Stil Namen auf 3 stellen\\n  672                                  (z.B., <filename>FOO\\\\alice</filename>), was für Windows Benutzer am\\n  673:                                 bekanntesten ist. Man sollte <emphasis>nicht</emphasis> die\\n  674                                  unqualifizierte Form 2 verwenden (z.B., <emphasis>alice</emphasis>),\\n  675                                  da das anderen Benutzern Zugriff auf die Anwendung geben würde, wenn\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Cache-Backends.xml:\\n   80                              Mögliche Werte sind : 'md5' (bestes, aber am Langsamsten), 'crc32'\\n   81                              (etwas weniger sicher, aber schneller, beste Wahl), 'adler32' (neue\\n   82:                             Wahl, schneller als crc32), 'strlen' um nur die Länge zu testen\\n   83                              (schnellstes).\\n   84                          </entry>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Cache-Frontends.xml:\\n  233                  Wenn spezielle Werte gecached werden sollen (boolean mit der\\n  234                  \\\"automatic_serialization\\\" Option) oder leere Strings kann die kompakte Erstellung\\n  235:                 wie oben gezeigt nicht verwendet werden. Der Cache Eintrag muß formell getestet\\n  236                  werden.\\n  237              </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Cache-Introduction.xml:\\n  151              wurde auf 30 Sekunden gesetzt) sind die Nummern wieder identisch, weil der Cache\\n  152              Eintrag abgelaufen ist - er muß wieder gecached werden. Man sollte das im Browser oder\\n  153:             in der Konsole testen.\\n  154          </para>\\n  155      </example>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Captcha-Operation.xml:\\n   37          kann verwendet werden um einen <classname>Zend_Form</classname> Dekorator entweder durch\\n   38          seinen Namen zu Spezifizieren oder indem ein aktuelles Dekoratorobjekt zurückgegeben wird.\\n   39:         Der interessantesten Methoden sind aber <methodname>generate()</methodname> und\\n   40          <methodname>render()</methodname>. <methodname>generate()</methodname> wird verwendet um\\n   41          das <acronym>CAPTCHA</acronym> Token zu erstellen. Dieser Prozess speichert das Token\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Controller-Exceptions.xml:\\n  109                      <methodname>Zend_Controller_Front::dispatch()</methodname> die Antwort nicht\\n  110                      darstellen, aber diese stattdessen zurückgeben. Sobald man die antwort hat,\\n  111:                     kann diese getestet werden um zu sehen ob irgendwelche Ausnahmen gefangen\\n  112                      wurden indem die <methodname>isException()</methodname> Methode verwendet, und\\n  113                      die Ausnahme über die <methodname>getException()</methodname> Methode empfangen\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Controller-Plugins-ErrorHandler.xml:\\n  158  \\n  159          <para>\\n  160:             Man kann auf jeden der ersten drei Typen testen, und wenn dem so ist, eine 404 Seite\\n  161              anzeigen:\\n  162          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Controller-Request.xml:\\n   68              kann die Anfrageumgebung von Hand erstellen, inklusive Controller, Aktion, Parameter,\\n   69              <acronym>URI</acronym> usw. und das Request-Objekt an den Front Controller übergeben, um\\n   70:             den Ablauf der Applikation zu testen. Zusammen mit dem\\n   71              <link linkend=\\\"zend.controller.response\\\">Response-Objekt</link> sind durchdachte und\\n   72              genaue UnitTests für eine <acronym>MVC</acronym>-Applikation möglich.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Dojo-Data.xml:\\n  248          <para>\\n  249              Wenn man den Identifikator kennt, kann man Ihn verwende um ein Element zu erhalten, es\\n  250:             upzudaten, es zu löschen, es zu erstellen oder es zu testen:\\n  251          </para>\\n  252  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Feed_Reader.xml:\\n  480  \\n  481          <para>\\n  482:             Trotzdem erlaubt die Container Klasse den Zugriff auf die \\\"relevantesten\\\" Daten als\\n  483              einfaches Array indem die Methode <methodname>getValues()</methodname> verwendet wird.\\n  484:             Das Konzept der \\\"relevantesten\\\" Daten ist offensichtlich ein beurteilter Aufruf. Für\\n  485              Kategorien bedeutet es die Label der Kategorien (nicht die Typen oder Schemata) während\\n  486              es für Autoren der Name des Autors wäre (nicht deren Email Adressen oder die\\n  ...\\n  511              angefragte Feed <acronym>RSS</acronym>, <acronym>RDF</acronym> oder Atom ist. Das selbe\\n  512              gilt für Sub-Versionen dieser Standards da wir jede einzelne <acronym>RSS</acronym> und\\n  513:             Atom Version getestet haben. Wärend sich der darunterliegende <acronym>XML</acronym>\\n  514              Feed substantiell unterscheiden kann, im Sinne von Tags und Elementen die vorhanden\\n  515              sind, versuchen trotzdem alle ähnliche Informationen zu geben und um das alles zu\\n  ...\\n 1547                  Beispiel Feed von vorher enthält ein nicht erwähntes\\n 1548                  <command>&lt;jungle:dayPopular&gt;</command> Element das Jungle Books bei Ihrem\\n 1549:                 Standard hinzugefügt haben um einen Link zum beliebtesten Buch des Tages\\n 1550                  hinzuzufügen (im Sinne von Verkehr der Besucher). Hier ist eine Erweiterung welche\\n 1551                  eine <methodname>getDaysPopularBookLink()</methodname> Methode bei der Feed Level\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_File_Transfer-Validators.xml:\\n  514  \\n  515          <para>\\n  516:             In einigen Fällen ist es nützlich auch auf Klein/Großschreibung zu testen. Deshalb\\n  517              erlaubt der Constructor einen zweiten Parameter <varname>$case</varname> der, wenn er\\n  518              auf <constant>TRUE</constant> gesetzt wird, die Erweiterungen abhängig von der Klein-\\n  ...\\n  710  \\n  711          <para>\\n  712:             In einigen Fällen ist es nützlich auch auf Klein/Großschreibung zu testen. Hierfür nimmt\\n  713              der Constructor einen zweiten Parameter <varname>$case</varname> der, wenn er auf\\n  714              <constant>TRUE</constant> gesetzt wird, die Erweiterungen abhängig von der Klein-\\n  ...\\n 1041          <note>\\n 1042              <para>\\n 1043:                 Diese Prüfung unterstützt über 34 verschiedene Hash Algorithmen. Die bekanntesten\\n 1044                  sind 'crc32', 'md5' und 'sha1'. Eine gesammelte Liste aller unterstützten Hash\\n 1045                  Algorithmen kann in PHP's <ulink\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Form-Forms.xml:\\n 1979              <listitem>\\n 1980                  <para>\\n 1981:                     Die Form kein einfachst mit Unittests getestet werden um sicherzugehen das\\n 1982                      Prüfungen und Darstellungen wie erwartet durchgeführt werden.\\n 1983                  </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Form-QuickStart.xml:\\n  365      // Elemente hat alle Prüfungen bestanden\\n  366  } else {\\n  367:     // Ein oder mehrere getestete Elemente haben die Prüfung nicht bestanden\\n  368  }\\n  369  ]]></programlisting>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Gdata_Calendar.xml:\\n   41                  öffentliche und private, Kalender Feeds. Öffentliche Feeds benötigen keine\\n   42                  Authentifizierung, aber sie können nur gelesen werden und bieten reduzierte\\n   43:                 Funktionalitäten. Private Feeds bieten die kompletteste Funktionalität benötigen\\n   44                  aber eine authentifizierte Verbindung zu den Kalender Servern. Es gibt drei\\n   45                  Authentifizierungs Schemas die von Google Kalender unterstützt werden:\\n   ..\\n  547                      <para>\\n  548                          <firstterm>EventStatus</firstterm> zeigt an ob ein Event bestätigt, in\\n  549:                         Wartestellung oder abgebrochen wurde.\\n  550                      </para>\\n  551                  </listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Gdata_Photos.xml:\\n   61                  öffentliche als auch auf private Kalender Feeds. Öffentliche Feeds benötigen keine\\n   62                  Authentifizierung sind aber nur-lesend und bieten eine reduzierte Funktionalität.\\n   63:                 Private Feeds bieten die kompletteste Funktionalität benötigen aber eine\\n   64                  authentifizierte Verbindung zum Picasa Server. Es gibt drei Authentifizierungs\\n   65                  Schemata die von Google Picasa unterstützt werden:\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Http_Client-Adapters.xml:\\n  515  \\n  516          <para>\\n  517:             Manchmal ist es sehr schwer Code zu testen, der von <acronym>HTTP</acronym>-Verbindungen\\n  518              abhängig ist. Zum Beispiel verlangt das Testen einer Applikation, die einen\\n  519              <acronym>RSS</acronym>-Feed von einem fremden Server anfordert, eine Netzwerkverbindung,\\n  ...\\n  634          <para>\\n  635              Das oben angeführte Beispiel kann dazu benutzt werden, um die Reaktion\\n  636:             der eigenen Anwendung auf einen 302 Redirect (Weiterleitung) zu testen.\\n  637              Abhängig von Ihrer Anwendung, kann es gewollt oder nicht gewollt sein,\\n  638              dass dem Redirect gefolgt wird. In unserem Beispiel erwarten wir, dass der\\n  ...\\n  642              Methode addResponse() hinzugefügt. Nachdem der Test-Adapter konfiguriert ist, wird\\n  643              der <acronym>HTTP</acronym>-Client, der den Adapter enthält unter test in das eigene\\n  644:             Objekt injiziert und sein Verhalten getestet.\\n  645          </para>\\n  646  \\n  ...\\n  651              <classname>Zend_Http_Client_Adapter_Exception</classname>-Exception werfen. Das kann\\n  652              dann nützlich sein, wenn die eigene Anwendung Inhalte von einer externen Seite cacht\\n  653:             (im Falle, dass die Seite ausfällt) und man dieses Feature testen will.\\n  654          </para>\\n  655  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Http_Response.xml:\\n   90      </sect2>\\n   91  \\n   92:     <sect2 id=\\\"zend.http.response.testers\\\">\\n   93          <title>Boolesche Testmethoden</title>\\n   94  \\n   ..\\n  126              </itemizedlist>\\n  127  \\n  128:             <example id=\\\"zend.http.response.testers.example-1\\\">\\n  129                  <title>Die Methode isError() verwenden, um eine Antwort zu validieren</title>\\n  130  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Json-xml2json.xml:\\n   42          <acronym>XML</acronym> Dateien mit unterschiedlichem Grad an Komplexität die im tests\\n   43          Verzeichnis des Zend Frameworks vorhanden sind. Sie können verwendet werden um die\\n   44:         Funktionalität des xml2json Features zu testen.\\n   45      </para>\\n   46  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Loader-Autoloader.xml:\\n  320              Im letzten Fall, für die <emphasis>Produktion</emphasis>, wollen wir uns auf eine\\n  321              spezielle Version festnageln -- 1.7.7, da dass vorhanden war als die Qualitäts Sicherung\\n  322:             getestet hat, also vor unserem eigenen Release.\\n  323          </para>\\n  324  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Locale-DatesTimes.xml:\\n   13          international anerkannten Standardformate, oder einem lokalisierten Datumsformat, welche\\n   14          von <classname>Zend_Date</classname> verwendet werden</link>. Die Verwendung von\\n   15:         vordefinierten Formaten bietet Vorteile, wie die Benutzung von gut getestetem Code, und die\\n   16          Sicherheit von Übertragbarkeit und Interoperabilität (abhängig vom benutzten Standard). Das\\n   17          unten angeführte Beispiel folgt nicht dieser Empfehlung, da die Benutzung von nicht\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Log-Writers.xml:\\n  133  \\n  134      <sect2 id=\\\"zend.log.writers.mock\\\">\\n  135:         <title>Mit der Attrappe testen</title>\\n  136  \\n  137          <para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Measure-Types.xml:\\n  370  \\n  371          <para>\\n  372:             Das bekannteste Zahlenformat ist das Dezimalsystem. Zusätzlich unterstützt diese Klasse\\n  373              das Oktalsystem, das Hexadezimalsystem, das Binärsystem, das Römische Zahlensystem und\\n  374              einige andere nicht so bekannte Systeme. Es wird aber nur der Dezimalteil der Zahl\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Paginator-Usage.xml:\\n  203  \\n  204          <para>\\n  205:             Der Datenbank Adapter versucht die effizienteste Abfrage zu erstellen die auf ziemlich\\n  206              allen modernen Datenbanken ausgefürt wird. Trotzdem ist es möglich das, abhängig von\\n  207              der eigenen Datenbank oder sogar dem Setup des eigenen Schemas, ein effizienterer Weg\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Service-ReCaptcha.xml:\\n   75  \\n   76          <para>\\n   77:             Sobald man das Ergebnis hat, kann es getestet werden um zu sehen ob es gültig ist. Das\\n   78              Ergebnis ist ein <classname>Zend_Service_ReCaptcha_Response</classname> Objekt, welche\\n   79              eine <methodname>isValid()</methodname> Methode anbietet.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Service_Amazon_Ec2-Instance.xml:\\n   23              Eine der Vorteile von EC2 ist das man pro Stunde der Instanz zahlt, was es bequem und\\n   24              kostengünstig macht die Performance der eigenen Anwendung auf verschiedenen\\n   25:             Instanzfamilien und Typen zu testen. Ein guter Weg um zu erkennen welches die\\n   26              passenste Instanzfamilie und der passenste Instanztyp ist, besteht darin Testinstanzen\\n   27              zu starten und die Anweundung zu benchmarken.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Service_DeveloperGarden.xml:\\n  118                          mit ein paar Einschränkungen, verwenden wir in der Produktion ohne für Sie\\n  119                          zu zahlen. Normalerweise kann man die eigene Anwendung während der\\n  120:                         Entwicklung testen.\\n  121                      </para>\\n  122                  </listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Service_Twitter.xml:\\n  188              <listitem>\\n  189                  <para>\\n  190:                     <methodname>verifyCredentials()</methodname> testet ob die\\n  191                      angegebenen Benutzerdaten gültig sind, und das mit einem minimalen Overhead.\\n  192                  </para>\\n  ...\\n  786              <listitem>\\n  787                  <para>\\n  788:                     <methodname>exists()</methodname> testet ob eine Freundschaft zwischen dem\\n  789                      authentifizierten Benutzer und dem im <code>id</code> Parameter übergebenen\\n  790                      Benutzer existiert.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Session-AdvancedUsage.xml:\\n  485  \\n  486              <programlisting language=\\\"php\\\"><![CDATA[\\n  487: // testen von setExpirationSeconds()\\n  488  $script = 'SessionTestHelper.php';\\n  489  $s = new Zend_Session_Namespace('space');\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Session-BasicUsage.xml:\\n   15          <acronym>PHP</acronym> noch immer vorhanden ist, sollten Entwickler davon absehen diese\\n   16          direkt zu verwenden, damit <classname>Zend_Session</classname> und\\n   17:         <classname>Zend_Session_Namespace</classname> am effizientesten und sichersten Ihre Sammlung\\n   18          von Session relevanten Funktionen bereitstellen können.\\n   19      </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Bootstrapping.xml:\\n   15  \\n   16      <para>\\n   17:         Um die eigene <acronym>MVC</acronym>-Anwendung zu testen, muß diese ein Bootstrap ausführen.\\n   18          Es gibt verschiedene Wege, dies zu tun, wobei sich alle der öffentlichen\\n   19          <varname>$bootstrap</varname>-Eigenschaft bedienen.\\n   ..\\n  130          <listitem>\\n  131              <para>\\n  132:                 Man sollte nicht erwarten Server-spezifisches zu testen. Mit anderen Worten, die Tests\\n  133                  garantieren nicht, dass der Code in einer speziellen Serverkonfiguration läuft, aber\\n  134                  dass die Anwendung wie erwartet funktionieren sollte und der Router eine gegebene\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Db-Adapter.xml:\\n    7      <para>\\n    8          Es gibt Zeiten in denen man Teile der eigenen Anwendung nicht mit einer echten Datenbank\\n    9:         testen will, aber wegen einer Kopplung dazu gezwungen ist.\\n   10          <classname>Zend_Test_DbAdapter</classname> bietet einen bequemen Weg um eine Implementation\\n   11          von <classname>Zend_Db_Adapter_Abstract</classname> zu verwenden ohne das eine Datenbank\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Db-Testing.xml:\\n   16  \\n   17          <para>\\n   18:             So wie der Controller TestCase eine Anwendung auf dem Level der Integration testet,\\n   19              ist der Datenbank TestCase eine Testmethode der Integration. Er verwendet mehrere\\n   20              unterschiedliche Anwendungs Layer für Testzwecke und sollte deswegen mit Vorsicht\\n   ..\\n   29              verknüpft werden. Diese Integrationstests ersetzen nicht die Notwendigkeit für ein\\n   30              Set von Unittests welche die Domain und Business Logik auf einem kleineren Level\\n   31:             testen. Die isolierten Klassen.\\n   32          </para>\\n   33      </note>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Examples.xml:\\n   12  \\n   13      <example id=\\\"zend.test.phpunit.examples.userController\\\">\\n   14:         <title>Den UserController testen</title>\\n   15  \\n   16          <para>\\n   ..\\n  306              Zum Beispiel suchen wir im letzten Test nach einer Form, die einen Knoten der Klasse\\n  307              \\\"errors\\\" hat; das erlaubt es uns lediglich auf das Vorhandensein von\\n  308:             Form-Prüfungsfehlern zu testen und uns keine Sorgen darüber zu machen, warum spezielle\\n  309              Fehler überhaupt geworfen werden.\\n  310          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Testing.xml:\\n   12  \\n   13      <para>\\n   14:         Zuerst muss man eine <acronym>URL</acronym> ausführen, die getestet werden soll, indem die\\n   15          <methodname>dispatch()</methodname>-Methode des Testfalls ausgeführt wird:\\n   16      </para>\\n   ..\\n   95          <para>\\n   96              Durch seine Natur führt das Redirector Action Helper Plugin ein Redirect aus und steigt\\n   97:             nach diesem aus. Weil man Teile einer Anwendung nicht testen kann, wenn diese\\n   98              Exit-Aufrufe durchführen, deaktiviert\\n   99              <classname>Zend_Test_PHPUnit_ControllerTestCase</classname> den Exit-Teil des\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit.xml:\\n  102              Dieses Beispiel könnte auch einfacher geschrieben werden -- nicht alle der gezeigten\\n  103              Zusicherungen sind notwendig. Hoffentlich zeigt es, wie einfach es sein kann, die eigene\\n  104:             Anwendung zu testen.\\n  105          </para>\\n  106      </example>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Text_Figlet.xml:\\n  105                          url=\\\"http://www.jave.de/figlet/figfont.txt\\\">hier</ulink> gefunden werden.\\n  106                      Die Smush-Mode Option wird normalerweise nur von Schriftart-Designer verwendet\\n  107:                     um die verschiedenen Layoutmodi mit einer neuen Schriftart zu testen.\\n  108                  </para>\\n  109              </listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Tool-Usage-CLI.xml:\\n   85                  speziellen Umgebungsvariablen. Diese werden im späteren Kapitel \\\"Die CLI Umgebung\\n   86                  anpassen\\\" beschrieben. Die Umgebungsvariablen für das Setzen von include_path,\\n   87:                 ZF_INCLUDE_PATH und ZF_INCLUDE_PATH_PREPEND für zf.php sind die interessantesten.\\n   88              </para>\\n   89          </sect3>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Tool_Framework-Architecture.xml:\\n  150              <filename>Provider.php</filename> enden. Sobald Sie gefunden wurden, werden Sie (durch\\n  151              die <methodname>load()</methodname> Methode von\\n  152:             <classname>Zend_Tool_Framework_Loader_Abstract</classname>) getestet um zu erkennen ob\\n  153              Sie irgendeines der unterstützten Interfaces implementieren. Wenn Sie das tun, wird\\n  154              eine Instanz der gefundenen Klasse instanziiert, und dann dem richtigen Repository\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Translate-SourceCreation.xml:\\n   25              Array-Quelldateien sind reine Arrays. Sie müssen aber manuell definiert werden, da\\n   26              es hierfür keine Tools gibt, die helfen könnten. Weil sie so einfach zu handhaben sind,\\n   27:             ist ihre Verwendung auch der schnellste Weg um zu testen, ob Nachrichten innerhalb des\\n   28              Codes wie erwartet arbeiten. Er ist generell der beste Adapter, um mit Mehrsprachigkeit\\n   29              zu beginnen, wenn man keine diesbezüglichen Kenntnisse hat.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Validate-Barcode.xml:\\n   46          <listitem>\\n   47              <para>\\n   48:                 <emphasis>CODE39</emphasis>: CODE39 ist einer der ältesten vorhandenen Codes.\\n   49              </para>\\n   50  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Validate-Db.xml:\\n    7      <para>\\n    8          <classname>Zend_Validate_Db_RecordExists</classname> und\\n    9:         <classname>Zend_Validate_Db_NoRecordExists</classname> bieten die Möglichkeit zu testen ob\\n   10          ein Eintrag in einer angegebenen Tabelle einer Datenbank, mit einem gegebenen Wert,\\n   11          existiert.\\n   ..\\n   86  \\n   87          <para>\\n   88:             Das oben stehende testet ob eine gegebene Email Adresse in der Datenbanktabelle\\n   89              vorhanden ist. Wenn kein Eintrag gefunden wird der den Wert von\\n   90              <varname>$emailaddress</varname> in der spezifizierten Spalte hat, wird eine\\n   ..\\n  112  \\n  113          <para>\\n  114:             Das oben stehende testet ob ein angegebener Benutzername nicht in der Datenbanktabelle\\n  115              vorhanden ist. Wenn ein Eintrag gefunden wird, der den der von\\n  116              <varname>$username</varname> in der spezifizierten Spalte enthält, dann wird eine\\n  ...\\n  125              <classname>Zend_Validate_Db_RecordExists</classname> und\\n  126              <classname>Zend_Validate_Db_NoRecordExists</classname> bieten auch die Möglichkeit die\\n  127:             Datenbank zu testen, wobei Teile der Tabelle hiervon ausgenommen werden, entweder indem\\n  128              eine where Klausel als String angegeben wird, oder ein Array mit den Schlüsseln \\\"field\\\"\\n  129              und \\\"value\\\".\\n  ...\\n  170              Man kann auch einen String an die Ausnahmeklausel angeben damit man einen anderen\\n  171              Operator als <emphasis>!=</emphasis> verwenden kann. Das kann nützlich sein um bei\\n  172:             geteilten Schlüsseln zu testen.\\n  173          </para>\\n  174  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Validate-WritingValidators.xml:\\n   90              Die Klasse definiert ein Template für Ihre einzige Nachricht bei Prüfungsfehlern, welche\\n   91              den eingebauten magischen Parameter <emphasis>%value%</emphasis> inkludiert. Der Aufruf\\n   92:             von <methodname>_setValue()</methodname> präpariert das Objekt den getesteten Wert\\n   93              automatisch in die Fehlernachricht einzufügen, wenn die Prüfung des Wertes fehlschlägt.\\n   94              Der Aufruf von <methodname>_error()</methodname> spürt den Grund für die fehlgeschlagene\\n   ..\\n  186              <constant>FALSE</constant> zurückgibt. Diese Prüfregeln sind deswegen sequentiell\\n  187              abhängig. Das bedeuted, wenn einer der Tests fehlschlägt, gibt es keinen Grund eine\\n  188:             weitere nachfolgende Prüfregel zu testen. Das muß aber trotzdem nicht der Fall sein. Das\\n  189              folgende Beispiel zeigt wie man eine Klasse schreiben kann die unabhängige Prüfregeln\\n  190              besitzt, wo die Prüfobjekte mehrfache Gründe zurückgeben könnten, warum ein spezieller\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_XmlRpc_Client.xml:\\n   32              aufrufen. Das hierunter gegebene Codebeispiel demonstriert den\\n   33              <acronym>XML-RPC</acronym> Server der Zend Framework Webseite. Es kann benutzen, um\\n   34:             <classname>Zend_XmlRpc</classname>-Komponenten zu testen oder auszuprobieren.\\n   35          </para>\\n   36  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/migration-110.xml:\\n   22              Sie an den Errorcontroller weiter. Man kann mit der Konstante\\n   23              <constant>Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE</constant> auf einen\\n   24:             spezifischen Fehler testen:\\n   25          </para>\\n   26  \\n   ..\\n   90              Verwendung von <classname>Zend_Feed_Reader_Collection_Author</classname>'s\\n   91              <methodname>getValues()</methodname> welche auch ein einfaches Array an Strings\\n   92:             darstellt und die \\\"relevantesten Daten\\\" repräsentiert. Für Autoren wird deren Name\\n   93              angenommen. Jeder Wert in resultierenden Array wird vom \\\"name\\\" Wert abgeleitet welcher\\n   94              jedem Autor angehängt ist (wenn vorhanden). In den meisten Fällen ist diese einfache\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/migration-17.xml:\\n  218                  <para>\\n  219                      Zustätzlich wurde die Signatur der <methodname>useByteString()</methodname>\\n  220:                     Methode geändert. Sie kann nur verwendet werden um zu testen ob die Prüfung\\n  221                      ByteStrings in den erzeugten Meldungen verwendet oder ncht. Um den Wert dieses\\n  222                      Flags zu setzen muß die <methodname>setUseByteString()</methodname> Methode\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/overview.xml:\\n   26          Zugangspunkten. Andere implementieren Client-Bibliotheken um einfach Zugang zu den am\\n   27          meisten verbreiteten Web Services verfügbar zu machen. Was auch immer die eigene Anwendung\\n   28:         benötigt, man findet eine Zend Framework Komponente mit einer durchgehend getesteten Basis,\\n   29          die verwendet werden kann, um die Entwicklungszeit drastisch zu reduzieren.\\n   30      </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/performance-classloading.xml:\\n  260              Klassendateien in nicht-standard Pfaden zu spezifizieren. Jeder Präfix kann mehrere mit\\n  261              Ihm assoziierte Pfade haben. Intern durchläuft der Pluginlader jeden Präfix, und dann\\n  262:             jeden Ihm angehängten Pfad, testet od die Datei existiert und unter diesem Pfad lesbar\\n  263:             ist. Dann lädt er Sie, und testet ob die Klasse nach der er sucht vorhanden ist. Sie\\n  264              man sich vorstellen kann, kann das zu vielen Aufrufe auf das Dateisystem führen.\\n  265          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/performance-database.xml:\\n   87  \\n   88              <para>\\n   89:                 Lasse <constant>EXPLAIN</constant> auf den Abfragen laufen, und teste eine Vielzahl\\n   90:                 von Möglichkeiten bis man die eigenen Indezes auf dem besten und performantesten\\n   91                  Weg trifft -- und dann sollte dieses <acronym>SQL</acronym> als Klasseneigenschaft\\n   92                  oder Konstante fix kodiert werden.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/project-structure.xml:\\n  242                      Anwendungstests. Diese würden hand-geschrieben sein, PHPUnit Tests, Selenium-RC\\n  243                      basierte Tests oder basierend auf anderen Test Frameworks. Standardmäßig kann\\n  244:                     Library Code getestet werden, indem die Verzeichnisstruktur des\\n  245                      <filename>library/</filename> Verzeichnisses vorgegaukelt wird. Zusätzliche\\n  246                      funktionale Tests für die eigene Anwendung können geschrieben werden, indem die\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Auth_Adapter_Ldap.xml:\\n   11              with <acronym>LDAP</acronym> services. Its features include username and domain name\\n   12              canonicalization, multi-domain authentication, and failover capabilities. It has been\\n   13:             tested to work with\\n   14              <ulink\\n   15                  url=\\\"http://www.microsoft.com/windowsserver2003/technologies/directory/activedirectory/\\\">Microsoft\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Feed_Reader.xml:\\n  515              defined <acronym>API</acronym> which is exactly the same regardless of whether the feed\\n  516              in question is <acronym>RSS</acronym>, <acronym>RDF</acronym> or Atom. The same goes for\\n  517:             sub-versions of these standards and we've tested every single\\n  518              <acronym>RSS</acronym> and Atom version. While\\n  519              the underlying feed <acronym>XML</acronym> can differ substantially in terms of the\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Form-QuickStart.xml:\\n  363      // elements present all passed validations\\n  364  } else {\\n  365:     // one or more elements tested failed validations\\n  366  }\\n  367  ]]></programlisting>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Http_Client-Adapters.xml:\\n  615  \\n  616  // inject the http client object ($client) into your object\\n  617: // being tested and then test your object's behavior below\\n  618  ]]></programlisting>\\n  619          </example>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Http_Cookie-Handling.xml:\\n  247  \\n  248          <para>\\n  249:             Additionally, several boolean tester methods are provided:\\n  250  \\n  251              <itemizedlist>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Http_Response.xml:\\n   88      </sect2>\\n   89  \\n   90:     <sect2 id=\\\"zend.http.response.testers\\\">\\n   91          <title>Boolean Tester Methods</title>\\n   92  \\n   ..\\n  121              </itemizedlist>\\n  122  \\n  123:             <example id=\\\"zend.http.response.testers.example-1\\\">\\n  124                  <title>Using the isError() method to validate a response</title>\\n  125  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Loader-Autoloader.xml:\\n  317          <para>\\n  318              In the final case, for <emphasis>production</emphasis>, we'll pin to a specific version\\n  319:             -- 1.7.7, since that was what was available when Quality Assurance tested prior to our\\n  320              release.\\n  321          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Locale-DatesTimes.xml:\\n   11              recognized standard formats, or one of the localized date formats supported by\\n   12              <classname>Zend_Date</classname></link>. Using an existing, pre-defined format offers\\n   13:         advantages, including the use of well-tested code, and the assurance of some degree of\\n   14          portability and interoperability (depending on the standard used). The examples below do not\\n   15          follow these recommendations, since using non-standard date formats would needlessly\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Mail_Read.xml:\\n  443  // check message for client defined flags $IsSpam, $SpamTested\\n  444  if (!$message->hasFlag('$SpamTested')) {\\n  445:     echo 'message has not been tested for spam';\\n  446  } else if ($message->hasFlag('$IsSpam')) {\\n  447      echo 'this message is spam';\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Search_Lucene-QueryLanguage.xml:\\n  145          <para>\\n  146              Multiple character wildcard searches look for 0 or more characters when matching strings\\n  147:             against terms. For example, to search for test, tests or tester, you can use the search:\\n  148          </para>\\n  149  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Service_Rackspace_Servers.xml:\\n  311                      <para>\\n  312                          Confirm the resize of a server. During a resize operation, the original server is saved for a period of time to allow roll\\n  313:                         back if there is a problem. Once the newly resized server is tested and has been confirmed\\n  314                          to be functioning properly, use this operation to confirm the resize. After confirmation,\\n  315                          the original server is removed and cannot be rolled back to. All resizes are automatically\\n  ...\\n  830                          Resize a server. The resize function converts an existing server to a different flavor, in essence, scaling the\\n  831                          server up or down. The original server is saved for a period of time to allow rollback if there\\n  832:                         is a problem. All resizes should be tested and explicitly confirmed, at which time the original\\n  833                          server is removed. All resizes are automatically confirmed after 24 hours if they are not\\n  834                          explicitly confirmed or reverted.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Test-PHPUnit-Db-Testing.xml:\\n   58              <listitem>\\n   59                  <para>\\n   60:                     The database tester collects the information on the database connection and\\n   61                      initial dataset from <methodname>getConnection()</methodname> and\\n   62                      <methodname>getDataSet()</methodname> which are both abstract methods and have\\n   ..\\n   67              <listitem>\\n   68                  <para>\\n   69:                     By default the database tester truncates the tables specified in the given\\n   70                      dataset, and then inserts the data given as initial fixture.\\n   71                  </para>\\n   ..\\n   74              <listitem>\\n   75                  <para>\\n   76:                     When the database tester has finished setting up the database, PHPUnit runs the\\n   77                      test.\\n   78                  </para>\\n   ..\\n   83                      After running the test, <methodname>tearDown()</methodname> is called. Because\\n   84                      the database is wiped in <methodname>setUp()</methodname> before inserting the\\n   85:                     required initial fixture, no actions are executed by the database tester at this\\n   86                      stage.\\n   87                  </para>\\n   ..\\n  196              Because <acronym>PHP</acronym> does not support multiple inheritance it is not possible\\n  197              to use the Controller and Database testcases in conjunction. However you can use the\\n  198:             <classname>Zend_Test_PHPUnit_Db_SimpleTester</classname> database tester in your\\n  199              controller test-case to setup a database enviroment fixture for each new controller\\n  200              test. The Database TestCase in general is only a set of convenience functions which can\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Test-PHPUnit-Testing.xml:\\n   98              automatically disables the exit part of the redirector as it can cause\\n   99              test behavior to differ from the real application. To ensure your controllers can\\n  100:             be properly tested, please make use of the redirector when you need to redirect\\n  101              the user to a different page:\\n  102          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Tool_Framework-Architecture.xml:\\n  150              any other options, will search for files inside the include path\\n  151              that end in <filename>Mainfest.php</filename>, <filename>Tool.php</filename> or\\n  152:             <filename>Provider.php</filename>. Once found, they will be tested (by the\\n  153              <methodname>load()</methodname> method of the\\n  154              <classname>Zend_Tool_Framework_Loader_Abstract</classname>) to determine if\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/module_specs/Zend_Validate-WritingValidators.xml:\\n   85              The class defines a template for its single validation failure message, which includes\\n   86              the built-in magic parameter, <emphasis>%value%</emphasis>. The call to\\n   87:             <methodname>_setValue()</methodname> prepares the object to insert the tested value into\\n   88              the failure message automatically, should the value fail validation. The call to\\n   89              <methodname>_error()</methodname> tracks a reason for validation failure.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/ref/overview.xml:\\n   24          implement client libraries to simply access to the most popular web services available.\\n   25          Whatever your application needs are, you're likely to find a Zend Framework component that\\n   26:         can be used to dramatically reduce development time with a thoroughly tested foundation.\\n   27      </para>\\n   28  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/en/ref/project-structure.xml:\\n  233                      application tests. These could be hand-written, PHPUnit tests, Selenium-RC\\n  234                      based tests or based on some other testing framework. By default, library code\\n  235:                     can be tested by mimicing the directory structure of your\\n  236                      <filename>library/</filename> directory. Additionally, functional tests for\\n  237                      your application could be written mimicing the\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Application-CoreFunctionality-Bootstrap_BootstrapAbstract.xml:\\n   84                          <listitem><para>\\n   85                              <varname>$key</varname>&#160;: <emphasis>requis</emphasis>.\\n   86:                             Option dont on veut tester la présence.\\n   87                          </para></listitem>\\n   88                      </itemizedlist></entry>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Cache-Frontends.xml:\\n  216                  Si vous voulez cacher des valeurs \\\"spéciales\\\" (des booléens avec l'option\\n  217                  \\\"automatic_serialization\\\") ou des chaînes vides, vous ne pouvez pas\\n  218:                 utiliser la construction compacte montrée ci-dessus. Vous devez tester de manière\\n  219                  formelle l'état du cache.\\n  220              </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Controller-ActionController.xml:\\n  253                  </para>\\n  254                  <para>\\n  255:                     Pour tester si un paramètre existe ou non (pratique pour les branchements\\n  256                      logiques), utilisez <methodname>_hasParam($key)</methodname>.\\n  257                  </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Controller-Exceptions.xml:\\n  102                      <methodname>Zend_Controller_Front::dispatch()</methodname> ne commandera pas\\n  103                      l'affichage de la réponse automatiquement. Au lieu de cela, l'objet de réponse\\n  104:                     sera retourné. Vous pouvez alors tester celui-ci pour voir s'il contient des\\n  105                      exceptions, ceci grâce à <methodname>isException()</methodname> et\\n  106                      <methodname>getException()</methodname>. Voyez&#160;:\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Controller-Request.xml:\\n   63              développeur peut simuler l'environnement de requête, y compris le module, le\\n   64              contrôleur, l'action, les paramètres, l'URI, etc., et passe l'objet requête au\\n   65:             contrôleur frontal pour tester une application. Une fois appairés avec\\n   66              <link linkend=\\\"zend.controller.response\\\">l'objet réponse</link>, les tests unitaires\\n   67              élaboré et précis d'application <acronym>MVC</acronym> deviennent possible.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Db_Adapter.xml:\\n 1681              connecté au serveur SGBD grâce à la méthode <methodname>isConnected()</methodname>. Ceci correspond\\n 1682              à une ressource de connexion qui a été initiée et qui n'est pas close. Cette fonction ne\\n 1683:             permet pas actuellement de tester la fermeture de la connexion au niveau du SGBD par\\n 1684              exemple. Cette fonction est utilisée en interne pour fermer la connexion. Elle vous\\n 1685              permet entre autres de fermer plusieurs fois une connexion sans erreurs. C'était déjà le\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Feed-ConsumingRss.xml:\\n  169  \\n  170      <para>\\n  171:         Dans votre code vous pouvez toujours tester si un élément est non-vide au moyen du\\n  172          test suivant&#160;:\\n  173      </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Http_Client-Adapters.xml:\\n  126                      vous vous connectez au même serveur très fréquemment, et que vous êtes sûr que\\n  127                      le serveur est capable de gérer un nombre élevé de connections concurrentes.\\n  128:                     Dans tous les cas vous êtes encouragés à tester l'effet des connections\\n  129                      persistantes à la fois sur l'accélération du client et sur la charge du serveur\\n  130                      avant d'activer cette option.\\n  ...\\n  452  \\n  453          <para>\\n  454:             Il est quelque fois difficile de tester une application qui a besoin d'une\\n  455              connexion <acronym>HTTP</acronym>. Par exemple, une application qui est en charge de lire un flux <acronym>RSS</acronym> aura\\n  456              besoin d'une connexion, qui n'est pas tout le temps disponible.\\n  ...\\n  568              quant à la réponse non redirigeante (200) suivante, elles est définie avec la méthode\\n  569              <methodname>addResponse()</methodname>. Lorsque votre objet client est configuré, vous pouvez\\n  570:             l'injecter dans votre application à tester, et voir le résultat et les\\n  571              comportements.\\n  572          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Http_Cookie-Handling.xml:\\n  293          <para>\\n  294              La vraie valeur ajoutée d'un objet <classname>Zend_Http_Cookie</classname> est sa\\n  295:             méthode match(). Celle-ci teste le cookie en rapport avec un scénario <acronym>HTTP</acronym>, pour savoir\\n  296              ci celui-ci doit être attaché à la requête ou pas. La syntaxe est la suivante :\\n  297              <code>boolean Zend_Http_Cookie-&gt;match(mixed $uri, [boolean $matchSessionCookies, [int\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Http_Response.xml:\\n   89      </sect2>\\n   90  \\n   91:     <sect2 id=\\\"zend.http.response.testers\\\">\\n   92          <title>Méthodes de tests booléennes</title>\\n   93  \\n   94          <para>\\n   95              Une fois qu'un objet <classname>Zend_Http_Response</classname> est instancié, il\\n   96:             fournit plusieurs méthodes qui peuvent être utilisées pour tester le type de la réponse.\\n   97              Elles retournent toutes un booléen <constant>TRUE</constant> ou <constant>FALSE</constant> :\\n   98              <itemizedlist>\\n   ..\\n  118                      </para>\\n  119                  </listitem>\\n  120:             </itemizedlist> <example id=\\\"zend.http.response.testers.example-1\\\">\\n  121                  <title>Utiliser la méthode isError() pour valider une réponse</title>\\n  122  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Json-xml2json.xml:\\n   38          <classname>Zend_Json_Exception</classname>. Il y a plusieurs fichiers <acronym>XML</acronym>, avec différents\\n   39          niveaux de complexité, fournis dans le répertoire tests de Zend Framework. Ils peuvent être\\n   40:         utilisés pour tester la fonctionnalité du dispositif xml2json.\\n   41      </para>\\n   42  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Loader-Autoloader.xml:\\n  313          <para>\\n  314              In the final case, for <emphasis>production</emphasis>, we'll pin to a specific version\\n  315:             -- 1.7.7, since that was what was available when Quality Assurance tested prior to our\\n  316              release.\\n  317          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Search_Lucene-QueryLanguage.xml:\\n  110          <para>\\n  111              La rechercher par joker sur plusieurs caractères recherche pour 0 ou plus caractères quand elle fait correspondre\\n  112:             une chaîne avec les termes de recherche. Par exemple, pour trouver test, tests ou tester, on peut utiliser la recherche :\\n  113              <programlisting language=\\\"querystring\\\"><![CDATA[\\n  114  test*\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Session-AdvancedUsage.xml:\\n  152              d'altération des données dans cet espace. Utilisez <methodname>lock()</methodname> pour attribuer à\\n  153              un espace de nommage spécifique le mode lecture seule,<methodname>unLock()</methodname> pour\\n  154:             attribuer le mode lecture / écriture, et <methodname>isLocked()</methodname> pour tester si un\\n  155              espace de nommage a été auparavant verrouillé. Les verrouillages sont transitoires et ne\\n  156              persistent pas d'une requête à l'autre. Verrouiller un espace de nommage n'a pas d'effet\\n  ...\\n  474  \\n  475          <example id=\\\"zend.session.advanced_usage.testing.example\\\">\\n  476:             <title>Utilisation de PHPUnit pour tester le code écrit avec Zend_Session*</title>\\n  477  \\n  478              <programlisting language=\\\"php\\\"><![CDATA[\\n  479: // tester setExpirationSeconds()\\n  480  require 'tests/Zend/Session/SessionTestHelper.php';\\n  481  // voir aussi SessionTest.php dans trunk/\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Session-BasicUsage.xml:\\n   44              <classname>Zend_Session_Namespace</classname>. L'exemple ci-dessous montre l'utilisation\\n   45              de cet espace de noms par défaut, en montrant comment compter le nombre de fois qu'un\\n   46:             utilisateur a vu une page sur le site Web. Pour tester cet exemple, ajouter le code\\n   47              suivant à votre fichier d'amorçage ZF :\\n   48          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Assertions.xml:\\n  176              Souvent une action va redirigé le visiteur. Plutôt que de suivre cette\\n  177              redirection, <classname>Zend_Test_PHPUnit_ControllerTestCase</classname> vous permet de\\n  178:             tester ces redirections avec un jeu d'assertions :\\n  179          </para>\\n  180  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Bootstrapping.xml:\\n   15  \\n   16      <para>\\n   17:         Si vous voulez tester votre application <acronym>MVC</acronym>, vous devez d'abord l'amorcer\\n   18          (\\\"bootstrap\\\"). Il existe plusieurs manières pour faire ceci, toutes celles-ci s'articulent\\n   19          autour de la propriété publique <varname>$bootstrap</varname>.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Db-Adapter.xml:\\n    6  \\n    7      <para>\\n    8:         Il peut être nécessaire quelques fois de vouloir tester l'application, mais sans base de données\\n    9          réelle physique. <classname>Zend_Test_DbAdapter</classname> offre des possibilités d'utiliser\\n   10          une implémentation de <classname>Zend_Db_Adapter_Abstract</classname> sans avoir à ouvrir une\\n   ..\\n   44  \\n   45      <para>\\n   46:         Bien sûr, INSERT, UPDATE et DELETE peuvent être empilés aussi, mais vous ne pourrez alors tester\\n   47          que <methodname>$stmt->rowCount()</methodname> car ces types de requêtes ne retournent pas de\\n   48          résultats.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Db-Quickstart.xml:\\n  223              Il existe d'autres manière de vérifier que l'état actuel de la base est équivalent à\\n  224              un état attendu. La table \\\"Bugs\\\" de l'exemple connait déja sont état interne, utilisons\\n  225:             ceci à notre avantage. L'exemple suivant teste que la suppression de données dans la table\\n  226              est possible:\\n  227          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Db-Testing.xml:\\n   21  \\n   22          <para>\\n   23:             Notez que tester la logique métier au seul moyen de tests d'intégration comme ceux\\n   24              fournis avec Zend_Test de Zend Framework est une mauvaise pratique. Les tests d'intégration\\n   25              sont là pour prouver le bon fonctionnement de l'assemblage des composants entre eux, ils ne\\n   ..\\n   51              <listitem>\\n   52                  <para>\\n   53:                     Le scénario de test (TestCase) crée à son tour une instance du testeur de base de données\\n   54                      (Database Tester) qui s'occupe de la construction et destruction de la base de données.\\n   55                  </para>\\n   ..\\n   58              <listitem>\\n   59                  <para>\\n   60:                     Le testeur de base de données récupère la connexion à la base et le jeu de données\\n   61                      initiales grâce à <methodname>getConnection()</methodname> et\\n   62                      <methodname>getDataSet()</methodname> qui sont toutes deux des méthodes abstraites\\n   ..\\n   67              <listitem>\\n   68                  <para>\\n   69:                     Par défaut le testeur vide les tables spécifiées dans le jeu de données, puis\\n   70                      peuple la base avec le jeu de données.\\n   71                  </para>\\n   ..\\n   74              <listitem>\\n   75                  <para>\\n   76:                     Lorsque le testeur a fini de monter la base, PHPUnit lance votre test.\\n   77                  </para>\\n   78              </listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit-Testing.xml:\\n    6  \\n    7      <para>\\n    8:         Une fois , votre fichier d'amorçage en place, vous pouvez commencer à tester. Tester\\n    9          est typiquement ce que vous auriez pu faire avec une suite de test PHPUnit (\\\"test suite\\\"),\\n   10          avec quelques petites différences mineures.\\n   ..\\n   12  \\n   13      <para>\\n   14:         Premièrement, vous devez distribuer l'URL à tester en utilisant la méthode\\n   15          <methodname>dispatch()</methodname> de TestCase :\\n   16      </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test-PHPUnit.xml:\\n    7      <para>\\n    8          <classname>Zend_Test_PHPUnit</classname> fournit un TestCase pour les applications <acronym>MVC</acronym>\\n    9:         qui contient des assertions qui permettent de tester toute une variété de responsabilités.\\n   10          La manière la plus facile de comprendre ce qui peut être fait est de regarder l'exemple\\n   11          suivant.\\n   ..\\n  105              Cet exemple pourrait être écrit plus simplement : toutes les assertions ne sont\\n  106              pas nécessaires et sont fournies seulement à titre d'illustration. Cependant, il montre\\n  107:             bien combien il est simple de tester vos applications.\\n  108          </para>\\n  109      </example>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Test.xml:\\n    8          <classname>Zend_Test</classname> fournit les outils pour faciliter les tests unitaires\\n    9          de vos applications Zend Framework. Pour le moment, nous offrons des éléments permettant de\\n   10:         tester les applications <acronym>MVC</acronym> réalisées avec Zend Framework.\\n   11      </para>\\n   12  </sect1>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_Validate-Db.xml:\\n  119          <para>\\n  120              <classname>Zend_Validate_Db_RecordExists</classname> et\\n  121:             <classname>Zend_Validate_Db_NoRecordExists</classname> proposent aussi un moyen de tester\\n  122              la base de données en excluant certaines parties de table, en passant une clause where\\n  123              ou un tableau de paires \\\"champs\\\" \\\"valeur\\\".\\n  ...\\n  126          <para>\\n  127              Lorsqu'un tableau est passé, l'opérateur <emphasis>!=</emphasis> est utilisé et vous\\n  128:             pouvez ainsi tester le reste de la table.\\n  129          </para>\\n  130  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/module_specs/Zend_XmlRpc_Client.xml:\\n   28              Pour appeler une méthode distante, utilisez la méthode <methodname>call()</methodname> de\\n   29              votre instance. Le code suivant montre un exemple avec le serveur XML-RPC du site de\\n   30:             Zend Framework. Vous pouvez l'utiliser pour tester ou explorer les possibilités des\\n   31              composants <classname>Zend_XmlRpc</classname>.\\n   32          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/ref/migration-17.xml:\\n  216                  <para>\\n  217                      De plus la signature de la méthode <methodname>useByteString()</methodname> a changé.\\n  218:                     Elle peut être seulement utilisée pour tester si le validateur prévoie\\n  219                      d'utiliser les chaînes lisibles ou la valeur brute dans les messages générées.\\n  220                      Pour paramétrer la valeur de cette option, utilisez la méthode\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/ref/performance-classloading.xml:\\n  268              interne, le chargeur de plugins boucle à travers chaque préfixe, et ensuite à travers\\n  269              chaque chemin lui étant associé, en testant l'existence du fichier et s'il est\\n  270:             accessible dans ce chemin. Il le charge ensuite, et teste pour voir si la classe\\n  271              recherchée est bien disponible. Comme vous pouvez l'imaginer, tout ceci entraîne des\\n  272              appels aux stats du système de fichiers.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/ref/performance-database.xml:\\n   87  \\n   88              <para>\\n   89:                 Effectuez un <constant>EXPLAIN</constant> sur vos requêtes, et testez plusieurs\\n   90                  approches jusqu'à obtenir un indice le plus performant, ensuite écrivez en dur\\n   91                  votre <acronym>SQL</acronym> en tant que propriété de la classe ou comme\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/tutorials/plugins-usage.xml:\\n   10          propose d'enregistrer des \\\"chemins de préfixes\\\". Le composant va alors utiliser la méthode\\n   11          <methodname>load()</methodname> du PluginLoader en lui passant le nom court du plugin\\n   12:         à charger. Le PluginLoader va ensuite tester chaque chemin de préfixe pour trouver une\\n   13          classe qui corresponde au nom court passé. Les chemins de préfixes sont testés en ordre\\n   14          LIFO (last in, first out) et il trouvera d'abord les chemins de préfixes enregistrés\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/fr/tutorials/view-placeholders-conclusion.xml:\\n   13          <methodname>placeholder()</methodname> pour agréger du contenu et le rendre de manière\\n   14          personnalisée. Expérimentez les et visitez les sections appropriées du manuel pour découvrir\\n   15:         et tester des fonctionnalités supplémentaires qui vous seront sûrement utiles.\\n   16      </para>\\n   17  </sect1>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/ja/module_specs/Zend_Http_Response.xml:\\n   75          </itemizedlist>\\n   76      </sect2>\\n   77:     <sect2 id=\\\"zend.http.response.testers\\\">\\n   78          <title>真偽チェック用のメソッド</title>\\n   79          <para>\\n   ..\\n  102                  </listitem>\\n  103              </itemizedlist>\\n  104:             <example id=\\\"zend.http.response.testers.example-1\\\">\\n  105                  <title>isError() メソッドの使用によるレスポンスの検証</title>\\n  106                  <programlisting language=\\\"php\\\"><![CDATA[\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/ja/module_specs/Zend_Search_Lucene-QueryLanguage.xml:\\n  137          <para>\\n  138              複数文字のワイルドカードは、0 個以上の任意の数の文字に対応します。\\n  139:             たとえば test、tests あるいは tester を探したい場合はこうします。\\n  140          </para>\\n  141  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/ja/module_specs/Zend_Test-PHPUnit-Testing.xml:\\n  101              automatically disables the exit part of the redirector as it can cause\\n  102              test behavior to differ from the real application. To ensure your controllers can\\n  103:             be properly tested, please make use of the redirector when you need to redirect\\n  104              the user to a different page:\\n  105          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/nl/module_specs/Zend_Feed-ConsumingRss.xml:\\n  139  \\n  140      <para>\\n  141:         Je kan in jouw code altijd testen of een element leeg is of niet met:\\n  142      </para>\\n  143      <programlisting role=\\\"php\\\"><![CDATA[\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/nl/module_specs/Zend_Http_Cookie-Handling.xml:\\n  160          </para>\\n  161          <para>\\n  162:             Additionally, several boolean tester methods are provided:\\n  163              <itemizedlist>\\n  164                  <listitem>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/nl/module_specs/Zend_Pdf-Usage.xml:\\n    9      </para>\\n   10      <para>\\n   11:     Er is ook een <filename>test.pdf</filename> bestand dat met dit voorbeeld kan gebruikt worden om te testen.\\n   12      </para>\\n   13  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pl/module_specs/Zend_Validate-WritingValidators.xml:\\n   82              The class defines a template for its single validation failure message, which includes the built-in magic\\n   83              parameter, <code>%value%</code>. The call to <code>_setValue()</code> prepares the object to insert the\\n   84:             tested value into the failure message automatically, should the value fail validation. The call to\\n   85              <code>_error()</code> tracks a reason for validation failure. Since this class only defines one failure\\n   86              message, it is not necessary to provide <code>_error()</code> with the name of the failure message\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Amf-Server.xml:\\n  189              exemplo a seguir para seu arquivo <filename>services-config.xml</filename>. Tenha\\n  190              certeza de atualizar seu ponto de extremidade (endpoint) para coincidir com seu servidor\\n  191:             de testes e que você salve o arquivo.\\n  192          </para>\\n  193  \\n  ...\\n  290          <para>\\n  291              Quando em modo de produção, somente o código da exceção será retornado. Se você\\n  292:             desabilitar o modo de produção - algo que você deve fazer apenas para testes - a maioria\\n  293              dos detalhes de exceção serão retornados: a mensagem de exceção, linha, e\\n  294              pilha de execução (backtrace) serão todos anexados.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Config_Ini.xml:\\n   56              para carregar dados de configuração de um arquivo <acronym>INI</acronym>. Neste\\n   57              exemplo, existem dados de configuração, tanto para um sistema de produção como para um\\n   58:             sistema de testes. Pois os dados de configuração de um sistema de testes são muito\\n   59:             semelhantes aos de produção, a seção de testes herda da seção de produção. Neste caso,\\n   60              a decisão é arbitrária e poderia ter sido escrita de modo inverso, com a seção de\\n   61:             produção herdando da seção de testes, embora isso possa não ser o caso em situações\\n   62              mais complexas. Suponha-se, então, que os dados de configuração a seguir estão\\n   63              contidos em <filename>/path/to/config.ini</filename>:\\n   ..\\n   74  database.params.dbname   = dbname\\n   75  \\n   76: ; Os dados de configuração da seção de testes são herdados\\n   77  ; da produção e substitui os valores conforme necessário\\n   78  [staging : production]\\n   ..\\n   84          <para>\\n   85              Em seguida, suponha que o desenvolvedor do aplicativo necessite dos dados de\\n   86:             configuração de testes do arquivo <acronym>INI</acronym>. É o simples caso de carregar\\n   87:             esses dados especificando o arquivo <acronym>INI</acronym> e a seção de testes:\\n   88          </para>\\n   89  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Config_Writer.xml:\\n  103          <para>\\n  104              Isso criará um arquivo de configuração <acronym>XML</acronym> com as seções de produção\\n  105:             e de testes, onde testes estende produção.\\n  106          </para>\\n  107      </example>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Config_Xml.xml:\\n   36              para carregar dados de configuração de um arquivo <acronym>XML</acronym>. Neste\\n   37              exemplo, existem dados de configuração, tanto para um sistema de produção como para um\\n   38:             sistema de testes. Pois os dados de configuração de um sistema de testes são muito\\n   39:             semelhantes aos de produção, a seção de testes herda da seção de produção. Neste caso,\\n   40              a decisão é arbitrária e poderia ter sido escrita de modo inverso, com a seção de\\n   41:             produção herdando da seção de testes, embora isso possa não ser o caso em situações\\n   42              mais complexas. Suponha-se, então, que os dados de configuração a seguir estão\\n   43              contidos em <filename>/path/to/config.xml</filename>:\\n   ..\\n   73          <para>\\n   74              Em seguida, suponha que o desenvolvedor do aplicativo necessite dos dados de\\n   75:             configuração de testes do arquivo <acronym>XML</acronym>. É o simples caso de carregar\\n   76:             esses dados especificando o arquivo <acronym>XML</acronym> e a seção de testes:\\n   77          </para>\\n   78  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Db_Adapter.xml:\\n  611              O seguinte pseudocódigo de linguagem de definição de dados <acronym>SQL</acronym>\\n  612              descreve as tabelas neste banco de dados de exemplo. Estas tabelas de exemplo são\\n  613:             extensivamente usadas pelos testes unitários automatizados de\\n  614              <classname>Zend_Db</classname>.\\n  615          </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Json-xml2json.xml:\\n   40          dessa profundidade, será lançado um <classname>Zend_Json_Exception</classname>. Existem\\n   41          vários arquivos <acronym>XML</acronym> com vários graus de complexidade fornecidos no\\n   42:         diretório de testes de Zend Framework. Eles podem ser usados para testar a\\n   43          funcionalidade do recurso xml2json.\\n   44      </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/module_specs/Zend_Test.xml:\\n    6  \\n    7      <para>\\n    8:         <classname>Zend_Test</classname> fornece ferramentas para facilitar os testes unitários de\\n    9          suas aplicações Zend Framework. Neste momento, estamos propondo algumas facilidades que\\n   10          permitem a análise de sua aplicação <acronym>MVC</acronym> em Zend Framework.\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/ref/requirements.xml:\\n   35  \\n   36              <para>\\n   37:                 Zend Framework tem uma extensa coleção de testes unitários, que você pode\\n   38                  executar usando PHPUnit 3.4.15 ou posterior.\\n   39              </para>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/pt-br/tutorials/quickstart-create-project.xml:\\n  211              de estilo <acronym>INI</acronym>, você pode referenciar constantes diretamente e\\n  212              expandi-las; <constant>APPLICATION_PATH</constant> é na verdade uma constante.\\n  213:             Adicionalmente note que há várias seções definidas: produção, encenação, teste, e\\n  214              desenvolvimento. As últimas três herdam configurações do ambiente \\\"produção\\\". Este é um\\n  215              modo eficiente de organizar configurações para assegurar que as configurações\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/zh/module_specs/Zend_Form-QuickStart.xml:\\n  314      // elements present all passed validations\\n  315  } else {\\n  316:     // one or more elements tested failed validations\\n  317  }\\n  318  ?>]]></programlisting>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Apc.php:\\n   68       *\\n   69       * @param  string  $id                     cache id\\n   70:      * @param  boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n   71       * @return string cached datas (or false)\\n   72       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/BlackHole.php:\\n   45       *\\n   46       * @param  string $id cache id\\n   47:      * @param  boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n   48       * @return string|false cached datas\\n   49       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/File.php:\\n  191       *\\n  192       * @param string $id cache id\\n  193:      * @param boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n  194       * @return string|false cached datas\\n  195       */\\n  ...\\n  961       *\\n  962       * @param  string  $id                     Cache id\\n  963:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  964       * @return boolean|mixed false (a cache is not available) or \\\"last modified\\\" timestamp (int) of the available cache record\\n  965       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Interface.php:\\n   43       *\\n   44       * @param  string  $id                     Cache id\\n   45:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n   46       * @return string|false cached datas\\n   47       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Libmemcached.php:\\n  159       *\\n  160       * @param  string  $id                     Cache id\\n  161:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  162       * @return string|false cached datas\\n  163       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Memcached.php:\\n  173       *\\n  174       * @param  string  $id                     Cache id\\n  175:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  176       * @return string|false cached datas\\n  177       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Sqlite.php:\\n  108       *\\n  109       * @param  string  $id                     Cache id\\n  110:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  111       * @return string|false Cached datas\\n  112       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Static.php:\\n  133       *\\n  134       * @param  string  $id                     Cache id\\n  135:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  136       * @return string|false cached datas\\n  137       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Test.php:\\n   98       *\\n   99       * @param  string  $id                     Cache id\\n  100:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  101       * @return string Cached datas (or false)\\n  102       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/TwoLevels.php:\\n  225       *\\n  226       * @param  string  $id                     Cache id\\n  227:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  228       * @return string|false cached datas\\n  229       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/WinCache.php:\\n   68       *\\n   69       * @param  string  $id                     cache id\\n   70:      * @param  boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n   71       * @return string cached datas (or false)\\n   72       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/Xcache.php:\\n   85       *\\n   86       * @param  string  $id                     cache id\\n   87:      * @param  boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n   88       * @return string cached datas (or false)\\n   89       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/ZendPlatform.php:\\n   81       *\\n   82       * @param  string  $id                     Cache id\\n   83:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n   84       * @return string Cached data (or false)\\n   85       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Backend/ZendServer.php:\\n   83       *\\n   84       * @param  string  $id                     cache id\\n   85:      * @param  boolean $doNotTestCacheValidity if set to true, the cache validity won't be tested\\n   86       * @return string cached datas (or false)\\n   87       */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Core.php:\\n  290       *\\n  291       * @param  string  $id                     Cache id\\n  292:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  293       * @param  boolean $doNotUnserialize       Do not serialize (even if automatic_serialization is true) => for internal use\\n  294       * @return mixed|false Cached datas\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Frontend/File.php:\\n  169       *\\n  170       * @param  string  $id                     Cache id\\n  171:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  172       * @param  boolean $doNotUnserialize       Do not serialize (even if automatic_serialization is true) => for internal use\\n  173       * @return mixed|false Cached datas\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Frontend/Output.php:\\n   55       *\\n   56       * @param  string  $id                     Cache id\\n   57:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n   58       * @param  boolean $echoData               If set to true, datas are sent to the browser if the cache is hit (simply returned else)\\n   59       * @return mixed True if the cache is hit (false else) with $echoData=true (default) ; string else (datas)\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Cache/Frontend/Page.php:\\n  124       *\\n  125       * @param  array   $options                Associative array of options\\n  126:      * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested\\n  127       * @throws Zend_Cache_Exception\\n  128       * @return void\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Feed/Reader/Extension/FeedAbstract.php:\\n  135       * @return array\\n  136       */\\n  137:     public function toArray() // untested\\n  138      {\\n  139          return $this->_data;\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/File/Transfer/Adapter/Http.php:\\n  186                  }\\n  187  \\n  188:                 // Should never return false when it's tested by the upload validator\\n  189                  if (!move_uploaded_file($content['tmp_name'], $filename)) {\\n  190                      if ($content['options']['ignoreNoFile']) {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Locale/Data/pt.xml:\\n 5413  			<currency type=\\\"XTS\\\">\\n 5414  				<displayName>Código de Moeda de Teste</displayName>\\n 5415: 				<displayName count=\\\"one\\\">Código de moeda de teste</displayName>\\n 5416: 				<displayName count=\\\"other\\\">Códigos de moeda de teste</displayName>\\n 5417  			</currency>\\n 5418  			<currency type=\\\"XXX\\\">\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Pdf/Resource/Image/Png.php:\\n  332  \\n  333          if(!empty($transparencyData)) {\\n  334:             //This is experimental and not properly tested.\\n  335              $imageDictionary->Mask = new Zend_Pdf_Element_Array($transparencyData);\\n  336          }\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Service/Rackspace/Servers.php:\\n  598       * The resize function converts an existing server to a different flavor, in essence, scaling the\\n  599       * server up or down. The original server is saved for a period of time to allow rollback if there\\n  600:      * is a problem. All resizes should be tested and explicitly confirmed, at which time the original\\n  601       * server is removed. All resizes are automatically confirmed after 24 hours if they are not\\n  602       * explicitly confirmed or reverted.\\n  ...\\n  656       * \\n  657       * During a resize operation, the original server is saved for a period of time to allow roll\\n  658:      * back if there is a problem. Once the newly resized server is tested and has been confirmed\\n  659       * to be functioning properly, use this operation to confirm the resize. After confirmation,\\n  660       * the original server is removed and cannot be rolled back to. All resizes are automatically\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Test/PHPUnit/Db/Operation/DeleteAll.php:\\n   27  \\n   28  /**\\n   29:  * Delete All Operation that can be executed on set up or tear down of a database tester.\\n   30   *\\n   31   * @uses       PHPUnit_Extensions_Database_Operation_IDatabaseOperation\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Test/PHPUnit/Db/Operation/Insert.php:\\n   27  \\n   28  /**\\n   29:  * Operation for Inserting on setup or teardown of a database tester.\\n   30   *\\n   31   * @uses       PHPUnit_Extensions_Database_Operation_IDatabaseOperation\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Test/PHPUnit/Db/Operation/Truncate.php:\\n   27  \\n   28  /**\\n   29:  * Operation for Truncating on setup or teardown of a database tester.\\n   30   *\\n   31   * @uses       PHPUnit_Extensions_Database_Operation_IDatabaseOperation\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Test/PHPUnit/Db/SimpleTester.php:\\n   44  {\\n   45      /**\\n   46:      * Creates a new default database tester using the given connection.\\n   47       *\\n   48       * @param PHPUnit_Extensions_Database_DB_IDatabaseConnection $connection\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Text/Figlet.php:\\n  478  \\n  479              // Build the character\\n  480:             // Note: The following code is complex and thoroughly tested.\\n  481              // Be careful when modifying!\\n  482              do {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Barcode/Object/_fonts/RELEASENOTES.TXT:\\n   14  \\n   15  Our apologies for it taking longer to complete the fonts than planned.\\n   16: Beta testers requested a tighter line spacing (less leading) and Jim\\n   17  Lyles redesigned Vera's accents to bring its line spacing to more\\n   18  typical of other fonts.  This took additional time and effort.  Our\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/_files/AtomTestMozillazine.xml:\\n  120        </author>\\n  121        <content type=\\\"text/html\\\" mode=\\\"escaped\\\" xml:lang=\\\"en\\\" xml:base=\\\"http://www.mozillazine.org/\\\">\\n  122:         <![CDATA[<p><a href=\\\"mailto:mscott@mozilla.org\\\" title=\\\"mscott@mozilla.org\\\">Scott MacGregor</a> writes: \\\"The second release candidate of Mozilla Thunderbird 1.5 is now available for download. Mozilla Thunderbird 1.5 RC2 is intended to allow testers to ensure that there are no last-minute problems with the Thunderbird 1.5 code. \\\"</p>\\n  123          <p>\\\"RC2 contains several key bug fixes that were identified during the RC1 testing cycle. There are no new features or enchancements from RC1. Users of Thunderbird 1.5 RC1 will be offered RC 2 through the software update system.\\\"</p>\\n  124          <p>\\\"Thunderbird 1.5 RC2 can be downloaded from the <a href=\\\"http://www.mozilla.org/products/thunderbird/releases/1.5.html\\\"\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Entry/_files/Common/atom.xml:\\n  419  		<published>2009-01-02T14:49:42Z</published>\\n  420  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\" />		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  421: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  422  \\n  423  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Entry/_files/Common/atom_noencodingdefined.xml:\\n  419  		<published>2009-01-02T14:49:42Z</published>\\n  420  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\" />		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  421: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  422  \\n  423  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Entry/_files/Common/rss.xml:\\n  399  		<guid isPermaLink=\\\"false\\\">http://www.norm2782.com/?p=27</guid>\\n  400  		<description><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></description>\\n  401: 			<content:encoded><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  402  <p><span id=\\\"more-27\\\"></span></p>\\n  403  <pre name=\\\"code\\\" class=\\\"php:nogutter\\\">\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Feed/_files/Common/atom.xml:\\n  419  		<published>2009-01-02T14:49:42Z</published>\\n  420  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\" />		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  421: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  422  \\n  423  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Feed/_files/Common/atom_noencodingdefined.xml:\\n  419  		<published>2009-01-02T14:49:42Z</published>\\n  420  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\" />		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  421: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  422  \\n  423  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Feed/_files/Common/atom_rewrittenbydom.xml:\\n  415  		<published>2009-01-02T14:49:42Z</published>\\n  416  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\"/><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\"/><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\"/>		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  417: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  418  \\n  419  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Feed/_files/Common/rss.xml:\\n  399  		<guid isPermaLink=\\\"false\\\">http://www.norm2782.com/?p=27</guid>\\n  400  		<description><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></description>\\n  401: 			<content:encoded><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  402  <p><span id=\\\"more-27\\\"></span></p>\\n  403  <pre name=\\\"code\\\" class=\\\"php:nogutter\\\">\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Integration/_files/wordpress-atom10.xml:\\n  419  		<published>2009-01-02T14:49:42Z</published>\\n  420  		<category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Flex\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"PHP\\\" /><category scheme=\\\"http://www.norm2782.com\\\" term=\\\"Zend Framework\\\" />		<summary type=\\\"html\\\"><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></summary>\\n  421: 		<content type=\\\"html\\\" xml:base=\\\"http://www.norm2782.com/2009/01/amf-server-class-for-wordpress/\\\"><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  422  \\n  423  <p><span id=\\\"more-27\\\"></span></p>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Reader/Integration/_files/wordpress-rss2-dc-atom.xml:\\n  399  		<guid isPermaLink=\\\"false\\\">http://www.norm2782.com/?p=27</guid>\\n  400  		<description><![CDATA[After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup [...]]]></description>\\n  401: 			<content:encoded><![CDATA[<p>After browsing through WordPress&#8217; code I quickly found that there&#8217;s no sane way to create AMF support as a WP plugin. At least not for someone who hasn&#8217;t done any old-skool procedural PHP in years. Instead of writing a plugin, I decided to write a standalone server script. It&#8217;s still very basic and currently setup to work for me. To get it working for your WP setup you should probably make some minor modifications. Click the read more link to check out the code. I&#8217;ve released it under the generous BSD license, so knock yourself out! Use it at your own risk&#8230; I&#8217;m not going to support it. Any updates will be posted in this post. Also, please note that I haven&#8217;t tested it yet. If you access the script directly it should output &#8220;Zend Amf Endpoint&#8221; just fine, but that&#8217;s all I can guarantee at this point <img src='http://www.norm2782.com/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>\\n  402  <p><span id=\\\"more-27\\\"></span></p>\\n  403  <pre name=\\\"code\\\" class=\\\"php:nogutter\\\">\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Filter/CompressTest.php:\\n   54      {\\n   55          if (!extension_loaded('bz2')) {\\n   56:             $this->markTestSkipped('This filter is tested with the bz2 extension');\\n   57          }\\n   58      }\\n   ..\\n  218      {\\n  219          if (!extension_loaded('zlib')) {\\n  220:             $this->markTestSkipped('This filter is tested with the zlib extension');\\n  221          }\\n  222  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Filter/DecompressTest.php:\\n   54      {\\n   55          if (!extension_loaded('bz2')) {\\n   56:             $this->markTestSkipped('This filter is tested with the bz2 extension');\\n   57          }\\n   58      }\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Gdata/GappsOnlineTest.php:\\n  109  \\n  110          // Delete user (uses builtin delete method, convenience delete\\n  111:         // method tested further down)\\n  112          $user->delete();\\n  113  \\n  ...\\n  226  \\n  227          // Delete nickname (uses builtin delete method, convenience delete\\n  228:         // method tested further down)\\n  229          $nickname->delete();\\n  230  \\n  ...\\n  336  \\n  337          // Delete group (uses builtin delete method, convenience delete\\n  338:         // method tested further down)\\n  339          $group->delete();\\n  340  \\n  ...\\n  432          } catch (Zend_Gdata_Gapps_ServiceException $e) {\\n  433              if ($e->hasError(Zend_Gdata_Gapps_Error::ENTITY_DOES_NOT_EXIST)) {\\n  434:                 // Dummy assertion just to say we tested something here.\\n  435                  $this->assertTrue(true);\\n  436              } else {\\n  ...\\n  658  \\n  659          // Delete email list (uses builtin delete method, convenience delete\\n  660:         // method tested further down)\\n  661          $list->delete();\\n  662  \\n  ...\\n  746          } catch (Zend_Gdata_Gapps_ServiceException $e) {\\n  747              if ($e->hasError(Zend_Gdata_Gapps_Error::ENTITY_DOES_NOT_EXIST)) {\\n  748:                 // Dummy assertion just to say we tested something here.\\n  749                  $this->assertTrue(true);\\n  750              } else {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Gdata/SpreadsheetsOnlineTest.php:\\n   53  \\n   54          $spreadsheets = $this->gdata->getSpreadsheets();\\n   55:         $testedContents = false;\\n   56          foreach($spreadsheets as $spreadsheet) {\\n   57              $spreadsheetCount++;\\n   ..\\n   62                  $worksheetCount++;\\n   63                  if ($spreadsheet->getTitle()->getText() == 'PHP Unit Test Sheet') {\\n   64:                     $testedContents = true;\\n   65                      $contentAsCells = $worksheet->getContentsAsCells();\\n   66                      $this->assertEquals('a1', $contentAsCells['A1']['value']);\\n   ..\\n   76          }\\n   77          $this->assertTrue($spreadsheetCount > 1, 'didn\\\\'t get >1 spreadsheet');\\n   78:         $this->assertTrue($testedContents, 'didn\\\\'t test the contents of the worksheet');\\n   79      }\\n   80  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Gdata/WhoTest.php:\\n   67          $this->who->valueString = \\\"Test Value String\\\";\\n   68          $this->who->rel = \\\"http://schemas.google.com/g/2005#event.speaker\\\";\\n   69:         $this->who->email = \\\"testemail@somewhere.domain.invalid\\\";\\n   70  \\n   71          $this->assertEquals(\\\"Test Value String\\\", $this->who->valueString);\\n   72          $this->assertEquals(\\\"http://schemas.google.com/g/2005#event.speaker\\\", $this->who->rel);\\n   73:         $this->assertEquals(\\\"testemail@somewhere.domain.invalid\\\", $this->who->email);\\n   74  \\n   75          $this->assertEquals(0, count($this->who->extensionElements));\\n   ..\\n   82          $this->assertEquals(\\\"Test Value String\\\", $newWho->valueString);\\n   83          $this->assertEquals(\\\"http://schemas.google.com/g/2005#event.speaker\\\", $newWho->rel);\\n   84:         $this->assertEquals(\\\"testemail@somewhere.domain.invalid\\\", $newWho->email);\\n   85  \\n   86          /* try constructing using magic factory */\\n   ..\\n   91          $this->assertEquals(\\\"Test Value String\\\", $newWho2->valueString);\\n   92          $this->assertEquals(\\\"http://schemas.google.com/g/2005#event.speaker\\\", $newWho2->rel);\\n   93:         $this->assertEquals(\\\"testemail@somewhere.domain.invalid\\\", $newWho2->email);\\n   94      }\\n   95  \\n   ..\\n  105          $this->who->valueString = \\\"Test Value String\\\";\\n  106          $this->who->rel = \\\"http://schemas.google.com/g/2005#event.speaker\\\";\\n  107:         $this->who->email = \\\"testemail@somewhere.domain.invalid\\\";\\n  108          $whoXml = $this->who->saveXML();\\n  109          $newWho = new Zend_Gdata_Extension_Who();\\n  ...\\n  113          $this->assertEquals(\\\"Test Value String\\\", $this->who->valueString);\\n  114          $this->assertEquals(\\\"http://schemas.google.com/g/2005#event.speaker\\\", $this->who->rel);\\n  115:         $this->assertEquals(\\\"testemail@somewhere.domain.invalid\\\", $this->who->email);\\n  116      }\\n  117  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Http/_files/response_with_cookies:\\n    4  X-Powered-By: PHP/5.1.6-pl8-gentoo\\n    5  Set-Cookie: foo=bar\\n    6: Set-Cookie: BOFH=Feature+was+not+beta+tested; expires=Thu, 23-Nov-2006 00:31:40 GMT\\n    7  Set-Cookie: time=1164234700\\n    8  Content-Length: 26\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Http/_files/response_with_single_cookie:\\n    3  Server: Apache\\n    4  X-Powered-By: PHP/5.1.6-pl8-gentoo\\n    5: Set-Cookie: BOFH=Feature+was+not+beta+tested; expires=Thu, 23-Nov-2006 00:31:40 GMT\\n    6  Content-Length: 26\\n    7  Keep-Alive: timeout=15, max=100\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Http/Client/StaticTest.php:\\n   28   * This Testsuite includes all Zend_Http_Client tests that do not rely\\n   29   * on performing actual requests to an HTTP server. These tests can be\\n   30:  * executed once, and do not need to be tested with different servers /\\n   31   * client setups.\\n   32   *\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Http/CookieJarTest.php:\\n   92          $this->assertEquals(3, count($jar->getAllCookies()));\\n   93  \\n   94:         $cookie_str = 'foo=bar;BOFH=Feature+was+not+beta+tested;time=1164234700;';\\n   95          $this->assertEquals($cookie_str, $jar->getAllCookies(Zend_Http_CookieJar::COOKIE_STRING_CONCAT));\\n   96      }\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Json/JsonXMLTest.php:\\n   43       * It tests the conversion of a contact list xml into Json format.\\n   44       *\\n   45:      * XML characteristic to be tested: XML containing an array of child elements.\\n   46       *\\n   47       */\\n   48      public function testUsingXML1()\\n   49      {\\n   50:         // Set the XML contents that will be tested here.\\n   51          $xmlStringContents = <<<EOT\\n   52  <?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n   ..\\n  120       * It tests the conversion of book publication xml into Json format.\\n  121       *\\n  122:      * XML characteristic to be tested: XML containing an array of child elements with XML attributes.\\n  123       *\\n  124       */\\n  125      public function testUsingXML2()\\n  126      {\\n  127:         // Set the XML contents that will be tested here.\\n  128          $xmlStringContents = <<<EOT\\n  129  <?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n  ...\\n  178       * It tests the conversion of food menu xml into Json format.\\n  179       *\\n  180:      * XML characteristic to be tested: XML containing an array of child elements.\\n  181       *\\n  182       */\\n  183      public function testUsingXML3()\\n  184      {\\n  185:         // Set the XML contents that will be tested here.\\n  186          $xmlStringContents = <<<EOT\\n  187  <?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\" ?>\\n  ...\\n  263       * It tests the conversion of RosettaNet purchase order xml into Json format.\\n  264       *\\n  265:      * XML characteristic to be tested: XML containing an array of child elements and multiple attributes.\\n  266       *\\n  267       */\\n  268      public function testUsingXML4()\\n  269      {\\n  270:         // Set the XML contents that will be tested here.\\n  271          $xmlStringContents = <<<EOT\\n  272  <?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n  ...\\n  380       * It tests the conversion of TV shows xml into Json format.\\n  381       *\\n  382:      * XML characteristic to be tested: XML containing simple CDATA.\\n  383       *\\n  384       */\\n  385      public function testUsingXML5()\\n  386      {\\n  387:         // Set the XML contents that will be tested here.\\n  388          $xmlStringContents = <<<EOT\\n  389  <?xml version=\\\"1.0\\\"?>\\n  ...\\n  428       * It tests the conversion of demo application xml into Json format.\\n  429       *\\n  430:      * XML characteristic to be tested: XML containing a large CDATA.\\n  431       *\\n  432       */\\n  433      public function testUsingXML6()\\n  434      {\\n  435:         // Set the XML contents that will be tested here.\\n  436          $xmlStringContents = <<<EOT\\n  437  <?xml version=\\\"1.0\\\"?>\\n  ...\\n  512       * It tests the conversion of an invalid xml into Json format.\\n  513       *\\n  514:      * XML characteristic to be tested: XML containing invalid syntax.\\n  515       *\\n  516       */\\n  ...\\n  518      public function testUsingXML7()\\n  519      {\\n  520:         // Set the XML contents that will be tested here.\\n  521          $xmlStringContents = <<<EOT\\n  522  This is an invalid XML file.\\n  ...\\n  555      public function testUsingXML8() {\\n  556  \\n  557:         // Set the XML contents that will be tested here.\\n  558          $xmlStringContents = <<<EOT\\n  559  <?xml version=\\\"1.0\\\"?>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Ldap/Node/OfflineTest.php:\\n  410          $node=Zend_Ldap_Node::fromArray($data);\\n  411  \\n  412:         $newDnString='cn=test+ou=Lab+uid=tester,cn=name,dc=example,dc=org';\\n  413          $node->setDn($newDnString);\\n  414          $this->assertEquals($data['dn'], $node->getCurrentDn()->toString());\\n  415          $this->assertEquals($newDnString, $node->getDn()->toString());\\n  416          $this->assertEquals(array('test'), $node->cn);\\n  417:         $this->assertEquals(array('tester'), $node->uid);\\n  418          $this->assertEquals(array('Lab'), $node->ou);\\n  419  \\n  ...\\n  429  \\n  430          $newDnArray=array(\\n  431:             array('uid' => 'tester'),\\n  432              array('dc' => 'example'),\\n  433              array('dc' => 'org'));\\n  ...\\n  444          $node=Zend_Ldap_Node::fromArray($data);\\n  445  \\n  446:         $newDn=Zend_Ldap_Dn::fromString('cn=test+ou=Lab+uid=tester,cn=name,dc=example,dc=org');\\n  447          $node->setDn($newDn);\\n  448          $this->assertEquals($data['dn'], $node->getCurrentDn()->toString());\\n  449          $this->assertEquals($newDn, $node->getDn());\\n  450          $this->assertEquals(array('test'), $node->cn);\\n  451:         $this->assertEquals(array('tester'), $node->uid);\\n  452          $this->assertEquals(array('Lab'), $node->ou);\\n  453      }\\n  ...\\n  456      {\\n  457          $node=$this->_createTestNode();\\n  458:         $newDnString='cn=test+ou=Lab+uid=tester,cn=name,dc=example,dc=org';\\n  459          $node->rename($newDnString);\\n  460  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Ldap/Node/SchemaTest.php:\\n  203      }\\n  204  \\n  205:     public function testeDirectorySchema()\\n  206      {\\n  207          if ($this->_getLdap()->getRootDse()->getServerType() !==\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Loader/AutoloaderFactoryTest.php:\\n   51          }\\n   52  \\n   53:         // Clear out other autoloaders to ensure those being tested are at the\\n   54          // top of the stack\\n   55          foreach ($this->loaders as $loader) {\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Paginator/Adapter/DbSelectTest.php:\\n  228      {\\n  229          $db = new Zend_Db_Adapter_Pdo_Sqlite(array(\\n  230:             'dbname' => dirname(__FILE__) . '/../_files/testempty.sqlite'\\n  231          ));\\n  232  \\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Pdf/_fonts/RELEASENOTES.TXT:\\n   14  \\n   15  Our apologies for it taking longer to complete the fonts than planned.\\n   16: Beta testers requested a tighter line spacing (less leading) and Jim\\n   17  Lyles redesigned Vera's accents to bring its line spacing to more\\n   18  typical of other fonts.  This took additional time and effort.  Our\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Queue/Adapter/AdapterTest.php:\\n  170      public function testConst()\\n  171      {\\n  172:         $this->markTestSkipped('must be tested in each individual adapter');\\n  173      }\\n  174  \\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/_index23Sample/_files/_1.cfs:\\n    <binary>\\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/_indexSample/_files/_1.cfs:\\n    <binary>\\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/_indexSample/_nonCompoundIndexFiles/_6.fdt:\\n    <binary>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/_indexSource/_files/contributing.patches.html:\\n  129  ><P\\n  130  >&#13;   After you have finished adding/changing the code, TEST it: We will not\\n  131:    accept code that hasn't been carefully tested.\\n  132     When you are absolutely sure the new code doesn't introduce bugs, create a\\n  133     unified diff by running:\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/AllTests.php:\\n   87          $suite->addTestSuite('Zend_Search_Lucene_Index_TermTest');\\n   88          /**\\n   89:          * SegmentWriter class, its subclasses and Writer class are completely tested within\\n   90           * Lucene::addDocument and Lucene::optimize testing\\n   91           */\\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/Index/_files/mergedSegment.cfs.sample:\\n    <binary>\\n\\n~/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/Index/_source/_files/_1.cfs:\\n    <binary>\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/Index/TermsPriorityQueueTest.php:\\n  587                                  new Zend_Search_Lucene_Index_Term('terms', 'contents'),\\n  588                                  new Zend_Search_Lucene_Index_Term('test', 'contents'),\\n  589:                                 new Zend_Search_Lucene_Index_Term('tested', 'contents'),\\n  590                                  new Zend_Search_Lucene_Index_Term('text', 'contents'),\\n  591                                  new Zend_Search_Lucene_Index_Term('th', 'contents'),\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/Search23Test.php:\\n   85                                    '(title:do) (pathkeyword:it path:it modified:it contents:it) (pathkeyword:right path:right modified:right contents:right)',\\n   86                                    '(contents:test contents:text)',\\n   87:                                   '(contents:test contents:tested)',\\n   88                                    '(contents:test contents:text)',\\n   89                                    '(contents:amazon contents:email)',\\n   90                                    // ....\\n   91                                    '((contents:test) (contents:text^0.5))',\\n   92:                                   '((contents:test) (contents:text^0.5833) (contents:latest^0.1667) (contents:left^0.1667) (contents:list^0.1667) (contents:meet^0.1667) (contents:must^0.1667) (contents:next^0.1667) (contents:post^0.1667) (contents:sect^0.1667) (contents:task^0.1667) (contents:tested^0.1667) (contents:that^0.1667) (contents:tort^0.1667))',\\n   93                                    '((pathkeyword:\\\"jakarta apache\\\"~10) (path:\\\"jakarta apache\\\"~10) (modified:\\\"jakarta apache\\\"~10) (contents:\\\"jakarta apache\\\"~10))',\\n   94                                    '(contents:business contents:but contents:buy contents:buying contents:by)',\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Search/Lucene/SearchTest.php:\\n   86                                    '(title:do) (path:it modified:it contents:it) (path:right modified:right contents:right)',\\n   87                                    '(contents:test contents:text)',\\n   88:                                   '(contents:test contents:tested)',\\n   89                                    '(contents:test contents:text)',\\n   90                                    '(contents:amazon contents:email)',\\n   91                                    // ....\\n   92                                    '((contents:test) (contents:text^0.5))',\\n   93:                                   '((contents:test) (contents:text^0.5833) (contents:latest^0.1667) (contents:left^0.1667) (contents:list^0.1667) (contents:meet^0.1667) (contents:must^0.1667) (contents:next^0.1667) (contents:post^0.1667) (contents:sect^0.1667) (contents:task^0.1667) (contents:tested^0.1667) (contents:that^0.1667) (contents:tort^0.1667))',\\n   94                                    '((path:\\\"jakarta apache\\\"~10) (modified:\\\"jakarta apache\\\"~10) (contents:\\\"jakarta apache\\\"~10))',\\n   95                                    '(contents:business contents:but contents:buy contents:buying contents:by)',\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Service/Technorati/TestCase.php:\\n   64          }\\n   65  \\n   66:         // This test is unnecessary. PHP type hinting is well tested, and will throw\\n   67          // catchable fatal errors on invalid argument types. Do nothing here.\\n   68      }\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Service/Twitter/_files/statuses.home_timeline.page.json:\\n  703        \\\"screen_name\\\":\\\"grmpyprogrammer\\\",\\n  704        \\\"location\\\":\\\"Milton, Ontario, Canada\\\",\\n  705:       \\\"description\\\":\\\"Grumpy web developer and tester, @gtaphp organizer, running @truenorthphp, just waiting for people to START WRITING TESTS\\\",\\n  706        \\\"url\\\":\\\"http:\\\\/\\\\/www.littlehart.net\\\\/atthekeyboard\\\",\\n  707        \\\"entities\\\":{\\n  ...\\n 1042        \\\"screen_name\\\":\\\"grmpyprogrammer\\\",\\n 1043        \\\"location\\\":\\\"Milton, Ontario, Canada\\\",\\n 1044:       \\\"description\\\":\\\"Grumpy web developer and tester, @gtaphp organizer, running @truenorthphp, just waiting for people to START WRITING TESTS\\\",\\n 1045        \\\"url\\\":\\\"http:\\\\/\\\\/www.littlehart.net\\\\/atthekeyboard\\\",\\n 1046        \\\"entities\\\":{\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Service/Twitter/_files/statuses.user_timeline.mwop.json:\\n 1018          \\\"screen_name\\\":\\\"grmpyprogrammer\\\",\\n 1019          \\\"location\\\":\\\"Milton, Ontario, Canada\\\",\\n 1020:         \\\"description\\\":\\\"Grumpy web developer and tester, @gtaphp organizer, running @truenorthphp, just waiting for people to START WRITING TESTS\\\",\\n 1021          \\\"url\\\":\\\"http:\\\\/\\\\/www.littlehart.net\\\\/atthekeyboard\\\",\\n 1022          \\\"entities\\\":{\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Service/Twitter/TwitterTest.php:\\n   72       * If used correctly, tests will be fast, efficient, and focused on\\n   73       * Zend_Service_Twitter's behaviour only. No other dependencies need be\\n   74:      * tested. The Twitter API Changelog should be regularly reviewed to\\n   75       * ensure the component is synchronised to the API.\\n   76       *\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Test/PHPUnit/Db/Integration/AbstractTestCase.php:\\n   98          $fooDataTable = $dataSet->getTable(\\\"foo\\\");\\n   99  \\n  100:         $tester = new Zend_Test_PHPUnit_Db_SimpleTester($this->getConnection());\\n  101:         $tester->setUpDatabase($dataSet);\\n  102  \\n  103          $fooTable = $this->createFooTable();\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Validate/File/MimeTypeTest.php:\\n  276          if ($goodEnvironment) {\\n  277              /**\\n  278:              * The tester's environment has magic files that are properly read by PHP\\n  279               * This prevents the test from being relevant in the environment\\n  280               */\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/View/Helper/FormRadioTest.php:\\n  496        * @group ZF-11620\\n  497        */\\n  498:      public function testeparatorCanRendersAsHtml()\\n  499       {\\n  500           $this->view->doctype('HTML4_STRICT');\\n\\n/Users/jean/Projects/mercur/vendor/zendframework/zftool/docs/DIAGNOSTICS.md:\\n  101  \\n  102  The returned array should contain pairs of a `label => check`. The label can be any string and will only be\\n  103: used as a description of the tested requirement. The `check` can be a callable, a function or a string, which\\n  104  will automatically be expanded. The following chapter describes all available methods of declaring checks.\\n  105  \\n\\n618 matches across 277 files\\n\\n\\nSearching 25580 files for \\\".js.js\\\" (case sensitive)\\n\\nUnable to open ~/Projects/mercur\\n\\n/Users/jean/Projects/mercur/module/Sac/view/sac/layout/components/header.phtml:\\n   20          $this->inlineScript()->offsetSetFile(1, '/mercur/plugins/jquery-1.9.1.min.js');\\n   21          $this->inlineScript()->offsetSetFile(2, '/mercur/plugins/json2.js');\\n   22:         $this->inlineScript()->offsetSetFile(11, '/mercur/plugins/spin.min.js.js');\\n   23  		$this->inlineScript()->offsetSetFile(12, '/mercur/plugins/uploadify/jquery.uploadify-3.1.min.js');\\n   24          $this->inlineScript()->offsetSetFile(21, '/mercur/js/classes.min.js');\\n\\n1 match in 1 file\\n\\n\\nSearching 25590 files for \\\"sendticket\\\" (case sensitive)\\n\\nUnable to open ~/Projects/mercur\\n\\n/Users/jean/Projects/mercur/data/cache/module-config-cache.496fe9daf9baed5ab03314f04518b928.php:\\n  775          ),\\n  776        ),\\n  777:       'sendticket' => \\n  778        array (\\n  779          'type' => 'Literal',\\n  780          'options' => \\n  781          array (\\n  782:           'route' => '/sendticket',\\n  783            'defaults' => \\n  784            array (\\n\\n/Users/jean/Projects/mercur/module/Sac/config/module.config.php:\\n   25                  )\\n   26              ),\\n   27:             'sendticket' => array(\\n   28                  'type' => 'Literal',\\n   29                  'options' => array(\\n   30:                     'route' => '/sendticket',\\n   31                      'defaults' => array(\\n   32                          '__NAMESPACE__' => 'Sac\\\\Controller',\\n\\n/Users/jean/Projects/mercur/public/mercur/js/script.mercur.js:\\n   20      'retrieve-password' : '/restrito/recuperar-minha-senha',\\n   21      'login' : '/minhamercur/login',\\n   22:     'send-chat-message' : '/interacao/sendticket',\\n   23      'filter-downloads' : '/downloads/filterAjax',\\n   24      'filter-events' : '/eventos/filter',\\n\\n/Users/jean/Projects/mercur/public/mercur/js/script.mercur.min.js:\\n    1: var routes={search:\\\"/search\\\",\\\"filter-products\\\":\\\"/categoriaAjax\\\",\\\"filter-applications\\\":\\\"/filter\\\",\\\"where-to-find\\\":\\\"/find\\\",\\\"send-contact\\\":\\\"/sendContact\\\",\\\"load-products-list\\\":\\\"/loadProductsList\\\",\\\"load-applications-list\\\":\\\"/getAplications\\\",\\\"load-cities-list\\\":\\\"/loadCities\\\",\\\"faq-search\\\":\\\"/search\\\",\\\"representantes-search\\\":\\\"/search\\\",\\\"evaluate-faq\\\":\\\"/evaluatefaq\\\",\\\"open-bibliografia\\\":\\\"/getBibliografia\\\",\\\"register-newsletter\\\":\\\"/index/registrar\\\",\\\"retrieve-password\\\":\\\"/minhamercur/recuperar\\\",login:\\\"/minhamercur/login\\\",\\\"send-chat-message\\\":\\\"/sendticket\\\",\\\"filter-downloads\\\":\\\"/downloads/filterAjax\\\",\\\"filter-events\\\":\\\"/eventos/filter\\\",\\\"filter-articles\\\":\\\"/artigos/filter\\\",\\\"edit-profile\\\":\\\"/minhamercur/perfil/save\\\",\\\"edit-password\\\":\\\"/minhamercur/savepassword\\\",\\\"filter-magazines\\\":\\\"/minhamercur/jornal/filter\\\",\\\"filter-phones\\\":\\\"/minhamercur/telefones/filtro\\\",\\\"request-access\\\":\\\"/restrito/salvar-requisicao-acesso\\\"};jQuery(function(){\\\"use strict\\\";function a(){function f(){b.width()>=768?($(\\\".overlay-box:visible\\\").length||e.removeClass(\\\"overflow\\\"),d.removeClass(\\\"toggled\\\"),c.removeClass(\\\"responsive\\\").addClass(\\\"default\\\"),c.find(\\\".hidden, .onView\\\").removeClass(\\\"onView hidden\\\")):c.removeClass(\\\"default\\\").addClass(\\\"responsive\\\")}var b=$(window),c=$(\\\"#menu\\\"),d=$(\\\"#header\\\"),e=$(\\\"html\\\");f()}function b(){function f(){var a;clearTimeout(site.timeout.setSection),$(\\\"html, body\\\").is(\\\":animated\\\")&&($(\\\"html, body\\\").stop(!0),site.scrolling=!1),$(\\\".fixed-menu-link.selected\\\").removeClass(\\\"selected\\\"),$(\\\".fixed-menu-link[data-section=\\\"+d+\\\"]\\\").addClass(\\\"selected\\\"),a=e?$(\\\".topic[data-section=\\\"+d+\\\"]\\\"):$(\\\".topic[data-section=\\\"+d+\\\"]\\\"),site.scrolling?site.scrolling=!1:(site.scrolling=!0,$(\\\"html, body\\\").animate({scrollTop:a.offset().top},function(){setTimeout(function(){site.scrolling=!1},10)}))}function g(){$(\\\".tab-menu-link.selected, .tab-content.selected\\\").removeClass(\\\"selected\\\"),$(\\\".tab-menu-link[data-tab=\\\"+d+\\\"], [data-tab=\\\"+d+\\\"]\\\").addClass(\\\"selected\\\")}var b,c,d,e;return site.hash=location.hash.replace(\\\"#!/\\\",\\\"\\\"),c=site.hash.split(\\\"/\\\"),d=c[0],site.hash?(b=$(\\\"#fixed-menu\\\"),b.length&&f(),b=$(\\\".tab-menu\\\"),b.length&&g(),void 0):!1}function c(){function f(){var a=$(window),c=$(\\\"#footer\\\");c.offset().top-a.scrollTop()<=a.height()?b.addClass(\\\"static\\\"):b.removeClass(\\\"static\\\")}function g(){var a=$(window),c=$(\\\"#content\\\");c.offset().top-a.scrollTop()<=0?b.addClass(\\\"fixed\\\"):b.removeClass(\\\"fixed\\\"),clearTimeout(site.timeout.setSection),site.scrolling||(site.timeout.setSection=setTimeout(function(){$(\\\".topic\\\").each(function(){var a=$(this),b=$(window).height(),c=$(window).scrollTop(),e=a.offset().top+a.outerHeight(!0);return e-b/2>c?(d!==a.data(\\\"section\\\")&&(site.scrolling=!0,window.location=$(\\\".fixed-menu-link[data-section=\\\"+a.data(\\\"section\\\")+\\\"]\\\").attr(\\\"href\\\")),!1):void 0})},100))}var b,c,d,e;site.hash=location.hash.replace(\\\"#!/\\\",\\\"\\\"),c=site.hash.split(\\\"/\\\"),d=c[0],e=c[1],b=$(\\\".top-button\\\"),b.length&&b.is(\\\":visible\\\")&&f(),b=$(\\\"#fixed-menu\\\"),b.length&&g()}$(window).on(\\\"resize\\\",a),$(window).on(\\\"hashchange\\\",b),$(window).on(\\\"scroll\\\",c),$(window).triggerHandler(\\\"resize\\\"),$(window).triggerHandler(\\\"hashchange\\\"),$(window).triggerHandler(\\\"scroll\\\"),$(\\\"body\\\").on(\\\"click\\\",\\\"a[data-anchor]\\\",function(a){a.preventDefault();var c=($(this),$(this).data(\\\"anchor\\\"));$(\\\"body, html\\\").animate({scrollTop:$(c).offset().top})}),$(\\\"#banners .swipe\\\").each(function(){var a=$(this);a.Swipe({speed:400,auto:8e3,continuous:!0,disableScroll:!1,stopPropagation:!1})}),$(\\\"#banners\\\").on(\\\"click\\\",\\\".banner-arrow\\\",function(a){a.preventDefault();var b=$(this),c=b.closest(\\\".banner\\\").find(\\\".swipe\\\").data(\\\"Swipe\\\");b.is(\\\".prev\\\")?c.prev():b.is(\\\".next\\\")&&c.next()}),$(\\\"#header\\\").on(\\\"mouseenter focusin\\\",\\\"#menu.default .main-menu-link\\\",function(){clearTimeout(site.timeout.menu);var a=$(this);site.timeout.menu=setTimeout(function(){$(\\\".main-menu-item\\\").removeClass(\\\"onView\\\"),a.closest(\\\".main-menu-item\\\").addClass(\\\"onView\\\")},200)}),$(\\\"#header\\\").on(\\\"mouseleave\\\",\\\"#menu.default .main-menu\\\",function(){clearTimeout(site.timeout.menu),$(\\\".main-menu-item\\\").removeClass(\\\"onView\\\")}),$(\\\"#header\\\").on(\\\"focusout\\\",\\\"#menu.default .submenu-item:last-child a:last\\\",function(){clearTimeout(site.timeout.menu);var a=$(this);a.closest(\\\".main-menu-item\\\").removeClass(\\\"onView\\\")}),$(\\\"#header\\\").on(\\\"click\\\",\\\"#menu.responsive .main-menu-link\\\",function(a){var b=$(this),c=b.closest(\\\".main-menu-item\\\");b.siblings(\\\".submenu-bar\\\"),c.is(\\\".no-sub\\\")||(a.preventDefault(),c.toggleClass(\\\"onView\\\"),$(\\\".main-menu-item\\\").not(c).toggleClass(\\\"hidden\\\"))}),$(\\\"#header\\\").on(\\\"click\\\",\\\"#menu.responsive .submenu-link\\\",function(a){var b=$(this),c=b.closest(\\\".submenu-item\\\"),d=b.closest(\\\".main-menu-item\\\").find(\\\".main-menu-link\\\");b.siblings(\\\".submenu-lv2\\\"),c.is(\\\".no-sub\\\")||(a.preventDefault(),c.toggleClass(\\\"onView\\\"),$(\\\".submenu-item\\\").not(c).toggleClass(\\\"hidden\\\"),d.toggleClass(\\\"hidden\\\"))}),$(\\\"body\\\").on(\\\"click\\\",\\\".accessibility-menu-link\\\",function(a){var c,b=$(this);if(b.is(\\\".menu\\\"))a.preventDefault(),c=$(\\\"#menu\\\");else{if(!b.is(\\\".content\\\"))return;a.preventDefault(),c=$(\\\"#content\\\")}$(\\\"body, html\\\").animate({scrollTop:c.offset().top}),c.attr(\\\"tabindex\\\",0).focus().removeAttr(\\\"tabindex\\\")}),$(\\\"body\\\").on(\\\"click\\\",\\\".top-button\\\",function(a){a.preventDefault(),$(\\\"body, html\\\").animate({scrollTop:0}),$(\\\".accessibility-menu-link\\\").first().focus()}),$(\\\"body\\\").on(\\\"click\\\",\\\".trigger-nav\\\",function(a){a.preventDefault(),$(\\\"html\\\").toggleClass(\\\"overflow\\\"),$(\\\"#header\\\").toggleClass(\\\"toggled\\\")}),$(\\\"body\\\").on(\\\"click\\\",\\\".media-gallery .carousel-link\\\",function(a){a.preventDefault();var b=$(this),c=b.data(\\\"media-src\\\"),d=b.data(\\\"media-type\\\");b.attr(\\\"title\\\"),$(\\\".carousel-link\\\").removeClass(\\\"selected\\\"),b.addClass(\\\"selected\\\"),\\\"youtube\\\"===d||\\\"vimeo\\\"===d?$(\\\".media-gallery .stage\\\").html('<div class=\\\"video-container\\\"><iframe src=\\\"'+c+'?wmode=transparent\\\" width=\\\"600\\\" height=\\\"450\\\" frameborder=\\\"0\\\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div>'):($(\\\".media-gallery .stage\\\").html('<img src=\\\"'+c+'\\\" alt=\\\"\\\">'),$(\\\".media-gallery .stage img\\\").hide().on(\\\"load\\\",function(){$(this).fadeIn()}))}),$(\\\"body\\\").on(\\\"click\\\",\\\".media-gallery .nav a\\\",function(a){a.preventDefault();var b=$(this);b.is(\\\".prev\\\")?$(\\\".carousel-link.selected\\\").parent().prev().children().trigger(\\\"click\\\"):$(\\\".carousel-link.selected\\\").parent().next().children().trigger(\\\"click\\\")}),$(\\\"body\\\").on(\\\"click\\\",\\\" .button.reload\\\",function(a){a.preventDefault(),Recaptcha.reload()}),$(\\\"body\\\").on(\\\"click\\\",\\\".button.listen\\\",function(a){a.preventDefault(),Recaptcha.switch_type(\\\"audio\\\")}),$(\\\"body\\\").on(\\\"click\\\",\\\".button.see\\\",function(a){a.preventDefault(),Recaptcha.switch_type(\\\"image\\\")}),$(\\\"body\\\").on(\\\"open-modal\\\",\\\".modal-trigger\\\",function(a){a.preventDefault();var d,f,b=$(this),c=b.data(\\\"modal\\\"),e={modal:c};if(\\\"register-newsletter\\\"===c)f=b.data(\\\"register-newsletter\\\"),e.structure=markups.modal[c].replace(/\\\\{mensagem\\\\}/,f.mensagem);else if(\\\"open-bibliografia\\\"===c)f=b.data(\\\"open-bibliografia\\\"),e.structure=markups.modal[c].replace(/\\\\{texto\\\\}/,f.bibliografia.texto);else if(\\\"retrieve-password\\\"===c)f=b.data(\\\"retrieve-password\\\"),e.structure=markups.modal[c].replace(/\\\\{mensagem\\\\}/,f.mensagem);else if(\\\"edit-password\\\"===c)f=b.data(\\\"edit-password\\\"),e.structure=markups.modal[c].replace(/\\\\{mensagem\\\\}/,f.mensagem);else if(\\\"request-access\\\"===c)f=b.data(\\\"request-access\\\"),e.structure=markups.modal[c].replace(/\\\\{mensagem\\\\}/,f.mensagem);else{if(\\\"gallery\\\"===c)return $(\\\".thumbs-link\\\").removeClass(\\\"selected\\\"),b.addClass(\\\"selected\\\"),f={thumbs:b.closest(\\\".thumbs-list\\\").clone(),type:b.data(\\\"media-type\\\"),src:b.data(\\\"media-src\\\"),srcBig:b.data(\\\"media-src-big\\\"),title:b.attr(\\\"title\\\"),model:\\\"\\\"},e.structure=markups.modal[c],d=new Modal(e),d.show(),f.box=$(\\\".overlay-box.\\\"+c),f.model=\\\"youtube\\\"===f.type||\\\"vimeo\\\"===f.type?'<div class=\\\"video-container\\\"><iframe src=\\\"'+f.src+'?wmode=transparent\\\" width=\\\"600\\\" height=\\\"450\\\" frameborder=\\\"0\\\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div>':'<a href=\\\"'+f.srcBig+'\\\" title=\\\"'+f.title+'\\\" target=\\\"_blank\\\"><img src=\\\"'+f.src+'\\\" alt=\\\"\\\"></a>',f.thumbs.removeClass(\\\"thumbs-list\\\").addClass(\\\"carousel\\\"),$(\\\".modal-trigger\\\",f.thumbs).removeClass(\\\"modal-trigger\\\").removeAttr(\\\"data-modal\\\"),$(\\\".thumbs-item\\\",f.thumbs).removeClass(\\\"thumbs-item\\\").addClass(\\\"carousel-item\\\"),$(\\\".thumbs-link\\\",f.thumbs).removeClass(\\\"thumbs-link\\\").addClass(\\\"carousel-link\\\"),f.box.find(\\\".media-gallery\\\").append(f.thumbs),f.box.find(\\\".stage\\\").append(f.model),!1;e.structure=markups.modal[c]}d=new Modal(e),d.show()}),$(\\\"body\\\").on(\\\"send-form\\\",\\\".form-trigger\\\",function(){var d,b=$(this),c=b.closest(\\\".form\\\").data(\\\"action\\\"),e={data:{},debug:1,validate:1,trigger:b,action:c,url:routes[c]};e.spin={lines:10,length:0,width:5,radius:5,corners:1,rotate:0,direction:1,color:\\\"#FFF\\\",speed:2,trail:60,shadow:!1,hwaccel:!1,className:\\\"spinner\\\",top:\\\"auto\\\",left:\\\"auto\\\"},\\\"search\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-products\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-applications\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"where-to-find\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"send-contact\\\"===c?($.extend(e.data,{geral:{recaptcha_challenge_field:$(\\\"input[name=recaptcha_challenge_field]\\\").val()}}),e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}):\\\"load-products-list\\\"===c?(e.target=$(\\\"select[name=produto]\\\"),e.success=function(a,b){var h,i,j,c=b.status,d=b.mensagem,e=a.target,f=this.alert,g=this.enableTrigger;if(c){for(h=b.produtos,i=\\\"\\\",j=0;j<h.length;j+=1)i+=\\\"<option>\\\"+h[j]+\\\"</option>\\\";e.html(i).trigger(\\\"keyup\\\")}else f({message:d,status:c});g()}):\\\"load-applications-list\\\"===c?(e.target=$(\\\"select[name=aplicacao]\\\"),e.success=function(a,b){var h,i,j,c=b.status,d=b.mensagem,e=a.target,f=this.alert,g=this.enableTrigger;if(c){for(h=b.produtos,i=\\\"\\\",j=0;j<h.length;j+=1)i+=\\\"<option>\\\"+h[j]+\\\"</option>\\\";e.html(i).trigger(\\\"keyup\\\")}else f({message:d,status:c});g()}):\\\"load-cities-list\\\"===c?(e.target=$(\\\"select[name=cidade]\\\"),e.success=function(a,b){var h,i,j,c=b.status,d=b.mensagem,e=a.target,f=this.alert,g=this.enableTrigger;if(c){for(h=b.cidades,i=\\\"\\\",j=0;j<h.length;j+=1)i+=\\\"<option>\\\"+h[j]+\\\"</option>\\\";e.html(i).trigger(\\\"keyup\\\")}else f({message:d,status:c});g()}):\\\"faq-search\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"representantes-search\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"send-curriculum\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"evaluate-faq\\\"===c?($.extend(e.data,{avaliacao:b.is(\\\".positive\\\"),faq_id:b.closest(\\\".form\\\").data(\\\"id\\\")}),e.success=function(a,b){var c=b.status,d=b.mensagem,f=(a.bullet.el,a.form),g=this.alert,h=this.enableTrigger;c?f.find(\\\".form-trigger\\\").remove():h(),g({message:d,status:c})}):\\\"open-bibliografia\\\"===c?e.success=function(a,b){var g,c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?($(\\\"body\\\").append('<div class=\\\"modal-trigger bibliografia\\\"></div>'),g=$(\\\".modal-trigger.bibliografia\\\").data(\\\"modal\\\",\\\"open-bibliografia\\\").data(\\\"open-bibliografia\\\",b),g.trigger(\\\"open-modal\\\"),g.remove()):e({message:d,status:c}),f()}:\\\"register-newsletter\\\"===c?e.success=function(a,b){var h,c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger,g=this.clearFields;c?($(\\\"body\\\").append('<div class=\\\"modal-trigger newsletter\\\"></div>'),h=$(\\\".modal-trigger.newsletter\\\").data(\\\"modal\\\",\\\"register-newsletter\\\").data(\\\"register-newsletter\\\",b),h.trigger(\\\"open-modal\\\"),h.remove(),g()):e({message:d,status:c}),f()}:\\\"retrieve-password\\\"===c?e.success=function(a,b){var g,c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?($(\\\"body\\\").append('<div class=\\\"modal-trigger password\\\"></div>'),g=$(\\\".modal-trigger.password\\\").data(\\\"modal\\\",\\\"retrieve-password\\\").data(\\\"retrieve-password\\\",b),g.trigger(\\\"open-modal\\\"),g.remove()):e({message:d,status:c}),f()}:\\\"login\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"send-chat-message\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-downloads\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-articles\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-events\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"edit-profile\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;e({message:d,status:c}),f()}:\\\"edit-password\\\"===c?e.success=function(a,b){var h,c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger,g=this.clearFields;c?($(\\\"body\\\").append('<div class=\\\"modal-trigger edit-password\\\"></div>'),h=$(\\\".modal-trigger.edit-password\\\").data(\\\"modal\\\",\\\"edit-password\\\").data(\\\"edit-password\\\",b),h.trigger(\\\"open-modal\\\"),h.remove(),g()):e({message:d,status:c}),f()}:\\\"filter-magazines\\\"===c?e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}:\\\"filter-phones\\\"===c?(e.spin.color=\\\"#09121D\\\",e.success=function(a,b){var c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger;c?window.location=b.url:(e({message:d,status:c}),f())}):\\\"request-access\\\"===c&&(e.success=function(a,b){var h,c=b.status,d=b.mensagem,e=this.alert,f=this.enableTrigger,g=this.clearFields;c?($(\\\"body\\\").append('<div class=\\\"modal-trigger request-access\\\"></div>'),h=$(\\\".modal-trigger.request-access\\\").data(\\\"modal\\\",\\\"request-access\\\").data(\\\"request-access\\\",b),h.trigger(\\\"open-modal\\\"),h.remove(),g()):e({message:d,status:c}),f()}),d=new Form(e),d.send()}),$(\\\".file-upload\\\").each(function(){var a=this.id,b=$(\\\"#\\\"+a),c={id:$(\\\"#\\\"+a).data(\\\"upload-id\\\"),multi:$(\\\"#\\\"+a).data(\\\"upload-multi\\\"),extensions:$(\\\"#\\\"+a).data(\\\"upload-extensions\\\"),limit:$(\\\"#\\\"+a).data(\\\"upload-limit\\\")||999};b.closest(\\\".button\\\").on(\\\"click\\\",function(a){a.preventDefault()}),b.uploadify({swf:site.url+\\\"/mercur/plugins/uploadify/flash/uploadify.swf\\\",uploader:site.url+\\\"/mercur/plugins/uploadify/uploadify.php\\\",width:\\\"100%\\\",height:\\\"100%\\\",auto:!1,multi:c.multi,queueID:c.id,fileTypeExts:c.extensions,queueSizeLimit:c.limit,removeCompleted:!1,itemTemplate:'				<div id=\\\"${fileID}\\\" class=\\\"uploadify-queue-item animate\\\">					<a href=\\\"javascript:$(\\\\'#${instanceID}\\\\').uploadify(\\\\'cancel\\\\', \\\\'${fileID}\\\\')\\\" class=\\\"uploadify-cancel animate\\\" title=\\\"Remover\\\">X</a>					<span class=\\\"uploadify-filename\\\">${fileName} (${fileSize})</span>					<div class=\\\"uploadify-progress\\\">						<div class=\\\"uploadify-progress-bar animate\\\"></div>					</div>				</div>			',onUploadProgress:function(a,b,c){var f=Math.round(100*b/c),g=$(\\\"#\\\"+a.id);g.find(\\\".uploadify-progress-bar\\\").css(\\\"width\\\",f+\\\"%\\\")},onSelect:function(b){var d=$(\\\"#\\\"+a),e=d.closest(\\\".form\\\");e.removeData(\\\"uploaded\\\"),1==c.limit&&(d.uploadify(\\\"disable\\\",!0),d.closest(\\\".field\\\").find(\\\".placeholder-input\\\").val(b.name).trigger(\\\"keyup\\\")),d.closest(\\\".upload-box\\\").before('<input type=\\\"hidden\\\" class=\\\"ipt-upload placeholder-input\\\" name=\\\"anexo\\\" data-anexo=\\\"'+b.id+'\\\" data-upload=\\\"true\\\" autocomplete=\\\"off\\\">')},onCancel:function(a){var b=$(\\\"#\\\"+a.id);b.remove(),$(\\\"input[data-anexo=\\\"+a.id+\\\"]\\\").remove()},onUploadStart:function(a){var b=$(\\\"#\\\"+a.id);b.find(\\\".uploadify-progress\\\").show(),b.find(\\\".uploadify-cancel\\\").hide()},onQueueComplete:function(){var c=$(\\\"#\\\"+a).closest(\\\".form\\\"),d=c.find(\\\".form-trigger\\\").last();c.data(\\\"uploaded\\\",!0),d.trigger(\\\"click\\\")},onUploadSuccess:function(a,b){var d=$(\\\"input[data-anexo=\\\"+a.id+\\\"]\\\");d.val(b.replace(\\\"\\\\n\\\",\\\"\\\"))}})})});var site={timeout:{},xhr:{},scrolling:!1},markups={fieldAlert:'<div class=\\\"field-alert\\\"></div>',formAlert:'<div class=\\\"form-alert closable-box {status}\\\"><div class=\\\"form-alert-helper\\\"><a href=\\\"#\\\" class=\\\"close-button\\\" title=\\\"Fechar\\\"></a><p>{message}</p></div></div>',fieldBlocker:'<div class=\\\"field-blocker {loader}\\\"></div>',modal:{\\\"register-newsletter\\\":'            <div class=\\\"overlay-box register-newsletter\\\">                <div class=\\\"container\\\">                    <div class=\\\"overlay-title title-bar\\\">                        <h2 class=\\\"second-header\\\">Confirma\\\\xe7\\\\xe3o de cadastro</h2>                        <a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>                    </div>                    <div class=\\\"text-box\\\"><p>{mensagem}</p></div>                </div>            </div>        ',\\\"open-bibliografia\\\":'			<div class=\\\"overlay-box open-bibliografia\\\">				<div class=\\\"container\\\">					<div class=\\\"overlay-title title-bar\\\">						<h2 class=\\\"second-header\\\">Bibliografia</h2>						<a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>					</div>					<div class=\\\"text-box small\\\">{texto}</div>				</div>			</div>		',login:'			<div class=\\\"overlay-box login\\\">				<div class=\\\"container\\\">					<form id=\\\"login\\\" class=\\\"form login\\\" data-action=\\\"login\\\">						<div class=\\\"overlay-title title-bar\\\">							<h2 class=\\\"second-header\\\">\\\\xc1rea restrita</h2>							<a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>						</div>						<div class=\\\"text-box\\\">							<p>Preencha os campos abaixo com seu e-mail e senha de acesso. Depois, clique no bot\\\\xe3o entrar.</p>						</div>						<div class=\\\"field-block\\\" data-key=\\\"geral\\\">							<fieldset class=\\\"field w50p\\\">								<div class=\\\"field-text\\\">E-mail</div>								<label class=\\\"placeholder animate\\\">									<input type=\\\"email\\\" name=\\\"email\\\" class=\\\"placeholder-input\\\" data-required=\\\"true\\\" data-validate=\\\"email\\\" autocomplete=\\\"off\\\" />									<div class=\\\"placeholder-text\\\">Digite aqui seu e-mail</div>								</label>							</fieldset>							<fieldset class=\\\"field w50p\\\">								<div class=\\\"field-text\\\">Senha</div>								<label class=\\\"placeholder animate\\\">									<input type=\\\"password\\\" name=\\\"senha\\\" class=\\\"placeholder-input\\\" data-required=\\\"true\\\" autocomplete=\\\"off\\\" />									<div class=\\\"placeholder-text\\\">Digite aqui sua senha</div>								</label>							</fieldset>						</div>						<div class=\\\"form-options\\\">							<a href=\\\"#\\\" class=\\\"form-swap link default animate\\\" data-form=\\\"#password\\\" title=\\\"Esqueci minha senha\\\" data-form=\\\"password\\\">Esqueci minha senha</a>							<button class=\\\"form-trigger button type1 right ph5 pw20 animate\\\" title=\\\"Entrar\\\"><span class=\\\"button-bullet\\\">Entrar</span></button>						</div>						<div class=\\\"clear\\\"></div>					</form>					<form id=\\\"password\\\" class=\\\"form login\\\" data-action=\\\"retrieve-password\\\">						<div class=\\\"overlay-title title-bar\\\">							<h2 class=\\\"second-header\\\">Esqueci minha senha</h2>							<a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>						</div>						<div class=\\\"text-box\\\">							<p>Se voc\\\\xea esqueceu sua senha, insira seu e-mail no campo abaixo e clique em recuperar senha.<br>Em breve, enviaremos para o seu e-mail um link para cadastrar uma nova senha de acesso.</p>						</div>						<div class=\\\"field-block\\\" data-key=\\\"geral\\\">							<fieldset class=\\\"field default\\\">								<p class=\\\"field-text\\\">E-mail</p>								<label class=\\\"placeholder animate\\\">									<input type=\\\"email\\\" name=\\\"email\\\" class=\\\"placeholder-input\\\" data-required=\\\"true\\\" data-validate=\\\"email\\\" autocomplete=\\\"off\\\" />									<div class=\\\"placeholder-text\\\">Digite aqui seu e-mail</div>								</label>							</fieldset>						</div>						<div class=\\\"form-options\\\">							<a href=\\\"#\\\" class=\\\"form-swap link default animate\\\" data-form=\\\"#login\\\" title=\\\"Fazer login\\\" data-form=\\\"login\\\">Fazer login</a>							<button class=\\\"form-trigger button type1 right ph5 pw20 animate\\\" title=\\\"Recuperar senha\\\"><span class=\\\"button-bullet\\\">Recuperar senha</span></button>						</div>						<div class=\\\"clear\\\"></div>					</form>				</div>			</div>		',\\\"retrieve-password\\\":'            <div class=\\\"overlay-box retrieve-password\\\">                <div class=\\\"container\\\">                    <div class=\\\"overlay-title title-bar\\\">                        <h2 class=\\\"second-header\\\">Esqueci minha senha</h2>                        <a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>                    </div>                    <div class=\\\"text-box\\\"><p>{mensagem}</p></div>                </div>            </div>        ',\\\"edit-password\\\":'            <div class=\\\"overlay-box register-newsletter\\\">                <div class=\\\"container\\\">                    <div class=\\\"overlay-title title-bar\\\">                        <h2 class=\\\"second-header\\\">Cadastrar nova senha</h2>                        <a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>                    </div>                    <div class=\\\"text-box\\\"><p>{mensagem}</p></div>                </div>            </div>        ',\\\"request-access\\\":'            <div class=\\\"overlay-box request-access\\\">                <div class=\\\"container\\\">                    <div class=\\\"overlay-title title-bar\\\">                        <h2 class=\\\"second-header\\\">Solicita\\\\xe7\\\\xe3o de acesso</h2>                        <a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>                    </div>                    <div class=\\\"text-box\\\"><p>{mensagem}</p></div>                </div>            </div>        ',gallery:'			<div class=\\\"overlay-box full gallery\\\">				<div class=\\\"container\\\">					<div class=\\\"overlay-title title-bar\\\">						<h2 class=\\\"second-header\\\">Galeria</h2>						<a href=\\\"#\\\" class=\\\"button type2 pw10 ph5 close-modal close-button animate\\\" title=\\\"Fechar\\\">Fechar</a>                    </div>                    <div class=\\\"media-gallery\\\">                        <div class=\\\"nav\\\">                            <a href=\\\"#\\\" class=\\\"prev animate\\\" title=\\\"Anterior\\\"></a>                            <a href=\\\"#\\\" class=\\\"next animate\\\" title=\\\"Pr\\\\xf3ximo\\\"></a>                        </div>                        <div class=\\\"stage\\\"></div>                    </div>				</div>			</div>		'}};\\n\\n6 matches across 4 files\\n\",\n  556  			\"settings\":\n  557  			{\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/CHANGELOG:\n  106   * [30900] fixed getUriPrefix() when requested is forwarded from a secure one (closes #4723)\n  107   * [30790] fixed logging of PHP errors to the WDT when error messages include a \"%\" character\n  108:  * [30563] fixed sfWebController::redirect method does not respect HTTP specification (closes #8952, patch from rande)\n  109   * [30530] fixed path when a project is created on Windows and used on Linux (closes #8835)\n  110   * [30529] fixed Swift_PropelSpool when the message is stored in a GLOB column (closes #8869, #8558, patch from netounet)\n  ...\n  167   * [28974] fixed merging of short syntax model definitions (refs #8449)\n  168   * [28962] fixed a warning on lighttpd (closes #8417)\n  169:  * [28961] fixed sfWebController \"redirect\" method redirects a wrong place when there are more than two GET parameters (closes #8083)\n  170   * [28958] fixed problem with return values for preDelete behavior for SfPropelBehaviorSymfonyBehaviors (closes #7872)\n  171   * [28903] Adding missing arguments to embedRelation() (closes #8222)\n  ...\n  254   * [25036] fixed php notices when test:* tasks are run outside of a command applications\n  255   * [24993] updated checking for logged trace to be a bit more responsible (closes #7817)\n  256:  * [24992] added test coverage for testing browser redirects (refs #7823)\n  257   * [24986] patched class manipulator to work with source that uses an eol other than PHP_EOL (closes #7694)\n  258   * [24976] added translation for \"Back To List\" for German and Polish (fixes #7819)\n  ...\n  373   * [23984] not setting status header for servers in cgi-sapi mode (fixes #3191)\n  374   * [23977] fixed image saving for Doctrine\n  375:  * [23968] fixed i18n functional test not using deprectated redirect checking\n  376   * [23967] corrected problem with validation when i18n is used. i18n should not be taken into account when the object is new (fixes #7486, patch by Dejan.Spasic)\n  377:  * [23954] updated phpdoc to reflect the actual possibilities for redirect parameters (refs #6082)\n  378:  * [23953] made empty redirect check faster and type tolerant (fixes #6082)\n  379   * [23951] fixed file validator on certain mac os configurations (closes #6641)\n  380   * [23950] fixed doctrine modules when dealing with multiple primary keys (closes #7571)\n  ...\n  397   * [23896] switched phing external to 2.3.3 tag instead of its revision in the trunk\n  398   * [23892] added Countable and Iterator interface to DOM CSS selector\n  399:  * [23888] reporting error on empty url for sfWebController#redirect (fixes #6082, patch by ThijsFeryn )\n  400   * [23887] fixed Phing autoloading in upgrade task (fixes #7577, patch by Stefan.Koopmanschap)\n  401   * [23882] sfI18N now correctly rejects invalid dates when using a culture that has the dot as separator, and correctly respects am/pm markers (fixes #7582)\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/action/sfAction.class.php:\n  104  \n  105    /**\n  106:    * Redirects current action to the default 404 error action (with browser redirection).\n  107     *\n  108     * This method stops the current code flow.\n  109     */\n  110:   public function redirect404()\n  111    {\n  112:     return $this->redirect('/'.sfConfig::get('sf_error_404_module').'/'.sfConfig::get('sf_error_404_action'));\n  113    }\n  114  \n  115    /**\n  116:    * Forwards current action to a new one (without browser redirection).\n  117     *\n  118     * This method stops the action. So, no code is executed after a call to this method.\n  ...\n  135  \n  136    /**\n  137:    * If the condition is true, forwards current action to a new one (without browser redirection).\n  138     *\n  139     * This method stops the action. So, no code is executed after a call to this method.\n  ...\n  153  \n  154    /**\n  155:    * Unless the condition is true, forwards current action to a new one (without browser redirection).\n  156     *\n  157     * This method stops the action. So, no code is executed after a call to this method.\n  ...\n  171  \n  172    /**\n  173:    * Redirects current request to a new URL.\n  174     *\n  175     * 2 URL formats are accepted :\n  ...\n  184     * @throws sfStopException\n  185     */\n  186:   public function redirect($url, $statusCode = 302)\n  187    {\n  188      // compatibility with url_for2() style signature\n  ...\n  192      }\n  193  \n  194:     $this->getController()->redirect($url, 0, $statusCode);\n  195  \n  196      throw new sfStopException();\n  ...\n  198  \n  199    /**\n  200:    * Redirects current request to a new URL, only if specified condition is true.\n  201     *\n  202     * This method stops the action. So, no code is executed after a call to this method.\n  ...\n  208     * @throws sfStopException\n  209     *\n  210:    * @see redirect\n  211     */\n  212:   public function redirectIf($condition, $url, $statusCode = 302)\n  213    {\n  214      if ($condition) {\n  215        // compatibility with url_for2() style signature\n  216        $arguments = func_get_args();\n  217:       call_user_func_array(array($this, 'redirect'), array_slice($arguments, 1));\n  218      }\n  219    }\n  220  \n  221    /**\n  222:    * Redirects current request to a new URL, unless specified condition is true.\n  223     *\n  224     * This method stops the action. So, no code is executed after a call to this method.\n  ...\n  230     * @throws sfStopException\n  231     *\n  232:    * @see redirect\n  233     */\n  234:   public function redirectUnless($condition, $url, $statusCode = 302)\n  235    {\n  236      if (!$condition) {\n  237        // compatibility with url_for2() style signature\n  238        $arguments = func_get_args();\n  239:       call_user_func_array(array($this, 'redirect'), array_slice($arguments, 1));\n  240      }\n  241    }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/config/config/settings.yml:\n   18      i18n:                   false       # Enable interface translation. Set to false if your application should not be translated.\n   19      compressed:             false       # Enable PHP response compression. Set to true to compress the outgoing HTML via the PHP handler.\n   20:     check_lock:             false       # Enable the application lock system triggered by the clear-cache and disable tasks. Set to true to have all requests to disabled applications redirected to the sfConfig::get('sf_symfony_lib_dir')/exception/data/unavailable.php page.\n   21  \n   22      # Form security secret (CSRF protection)\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/controller/sfWebController.class.php:\n   11  \n   12  /**\n   13:  * sfWebController provides web specific methods to sfController such as, url redirection.\n   14   *\n   15   * @package    symfony\n   ..\n  143  \n  144    /**\n  145:    * Redirects the request to another URL.\n  146     *\n  147     * @param string $url        An associative array of URL parameters or an internal URI as a string\n  148:    * @param int    $delay      A delay in seconds before redirecting. This is only needed on\n  149     *                           browsers that do not support HTTP headers\n  150     * @param int    $statusCode The status code\n  ...\n  152     * @throws InvalidArgumentException If the url argument is null or an empty string\n  153     */\n  154:   public function redirect($url, $delay = 0, $statusCode = 302)\n  155    {\n  156      if (empty($url)) {\n  157:       throw new InvalidArgumentException('Cannot redirect to an empty URL.');\n  158      }\n  159  \n  ...\n  163  \n  164      if (sfConfig::get('sf_logging_enabled')) {\n  165:       $this->dispatcher->notify(new sfEvent($this, 'application.log', array(sprintf('Redirect to \"%s\"', $url))));\n  166      }\n  167  \n  168:     // redirect\n  169      $response = $this->context->getResponse();\n  170      $response->clearHttpHeaders();\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/mailer/sfMailer.class.php:\n   33      $realtimeTransport = null,\n   34      $force             = false,\n   35:     $redirectingPlugin = null;\n   36  \n   37    /**\n   ..\n  112        $this->address = $options['delivery_address'];\n  113  \n  114:       $transport->registerPlugin($this->redirectingPlugin = new Swift_Plugins_RedirectingPlugin($this->address));\n  115      }\n  116  \n  ...\n  205  \n  206      if (sfMailer::SINGLE_ADDRESS == $this->strategy) {\n  207:       $this->redirectingPlugin->setRecipient($address);\n  208      }\n  209    }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/admin/parts/batchAction.php:\n    6        $this->getUser()->setFlash('error', 'You must at least select one item.');\n    7  \n    8:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n    9      }\n   10  \n   ..\n   12        $this->getUser()->setFlash('error', 'You must select an action to execute on the selected items.');\n   13  \n   14:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   15      }\n   16  \n   ..\n   34      }\n   35  \n   36:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   37    }\n   38  \n   ..\n   53  \n   54      $this->getUser()->setFlash('notice', 'The selected items have been deleted successfully.');\n   55:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   56    }\n   57  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/admin/parts/deleteAction.php:\n    9      }\n   10  \n   11:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   12    }\n   13  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/admin/parts/filterAction.php:\n    6        $this->setFilters($this->configuration->getFilterDefaults());\n    7  \n    8:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n    9      }\n   10  \n   ..\n   15        $this->setFilters($this->filters->getValues());\n   16  \n   17:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   18      }\n   19  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/admin/parts/processFormAction.php:\n   27          $this->getUser()->setFlash('notice', $notice.' You can add another one below.');\n   28  \n   29:         $this->redirect('@<?php echo $this->getUrlForAction('new') ?>');\n   30        } else {\n   31          $this->getUser()->setFlash('notice', $notice);\n   32  \n   33:         $this->redirect(array('sf_route' => '<?php echo $this->getUrlForAction('edit') ?>', 'sf_subject' => $<?php echo $this->getSingularName() ?>));\n   34        }\n   35      } else {\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/default/parts/deleteAction.php:\n   11  \n   12  <?php if (isset($this->params['route_prefix']) && $this->params['route_prefix']): ?>\n   13:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   14  <?php else: ?>\n   15:     $this->redirect('<?php echo $this->getModuleName() ?>/index');\n   16  <?php endif; ?>\n   17    }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/data/generator/sfDoctrineModule/default/parts/processFormAction.php:\n    6  \n    7  <?php if (isset($this->params['route_prefix']) && $this->params['route_prefix']): ?>\n    8:       $this->redirect('@<?php echo $this->getUrlForAction('edit') ?>?<?php echo $this->getPrimaryKeyUrlParams() ?>);\n    9  <?php else: ?>\n   10:       $this->redirect('<?php echo $this->getModuleName() ?>/edit?<?php echo $this->getPrimaryKeyUrlParams() ?>);\n   11  <?php endif; ?>\n   12      }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/test/functional/ActionRedirectTest.php:\n   15  $browser = new sfTestFunctional(new sfBrowser());\n   16  \n   17: $browser->get('/articles/redirectToShow')\n   18    ->with('response')->begin()\n   19:     ->isRedirected()\n   20    ->end()\n   21:   ->followRedirect()\n   22    ->with('request')->begin()\n   23      ->isParameter('module', 'articles')\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/test/functional/AdminGenBrowser.class.php:\n  125        click('Save', array('article' => $info))->\n  126          with('response')->begin()->\n  127:           isRedirected()->\n  128:           followRedirect()->\n  129          end()->\n  130          with('doctrine')->begin()->\n  ...\n  183      $this->\n  184          with('response')->begin()->\n  185:           isRedirected()->\n  186:           followRedirect()->\n  187          end()->\n  188          with('doctrine')->begin()->\n  ...\n  221        ->click('Save')->\n  222          with('response')->begin()->\n  223:           isRedirected()->\n  224:           followRedirect()->\n  225          end()\n  226      ;\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfDoctrinePlugin/test/functional/fixtures/apps/frontend/modules/articles/actions/actions.class.php:\n   16    }\n   17  \n   18:   public function executeRedirectToShow()\n   19    {\n   20:     $this->redirect('article', Doctrine_Core::getTable('Article')->createQuery()->fetchOne());\n   21    }\n   22  \n   ..\n   48        $article = $this->form->save();\n   49  \n   50:       $this->redirect('articles/edit?id='.$article->get('id'));\n   51      }\n   52  \n   ..\n   60      $article->delete();\n   61  \n   62:     $this->redirect('articles/index');\n   63    }\n   64  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/admin/parts/batchAction.php:\n    6        $this->getUser()->setFlash('error', 'You must at least select one item.');\n    7  \n    8:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n    9      }\n   10  \n   ..\n   12        $this->getUser()->setFlash('error', 'You must select an action to execute on the selected items.');\n   13  \n   14:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   15      }\n   16  \n   ..\n   34      }\n   35  \n   36:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   37    }\n   38  \n   ..\n   57      }\n   58  \n   59:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   60    }\n   61  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/admin/parts/deleteAction.php:\n    9      $this->getUser()->setFlash('notice', 'The item was deleted successfully.');\n   10  \n   11:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   12    }\n   13  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/admin/parts/filterAction.php:\n    6        $this->setFilters($this->configuration->getFilterDefaults());\n    7  \n    8:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n    9      }\n   10  \n   ..\n   15        $this->setFilters($this->filters->getValues());\n   16  \n   17:       $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   18      }\n   19  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/admin/parts/processFormAction.php:\n   12          $this->getUser()->setFlash('notice', $notice.' You can add another one below.');\n   13  \n   14:         $this->redirect('@<?php echo $this->getUrlForAction('new') ?>');\n   15        } else {\n   16          $this->getUser()->setFlash('notice', $notice);\n   17  \n   18:         $this->redirect(array('sf_route' => '<?php echo $this->getUrlForAction('edit') ?>', 'sf_subject' => $<?php echo $this->getSingularName() ?>));\n   19        }\n   20      } else {\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/default/parts/deleteAction.php:\n   11  \n   12  <?php if (isset($this->params['route_prefix']) && $this->params['route_prefix']): ?>\n   13:     $this->redirect('@<?php echo $this->getUrlForAction('list') ?>');\n   14  <?php else: ?>\n   15:     $this->redirect('<?php echo $this->getModuleName() ?>/index');\n   16  <?php endif; ?>\n   17    }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/data/generator/sfPropelModule/default/parts/processFormAction.php:\n    6  \n    7  <?php if (isset($this->params['route_prefix']) && $this->params['route_prefix']): ?>\n    8:       $this->redirect('@<?php echo $this->getUrlForAction('edit') ?>?<?php echo $this->getPrimaryKeyUrlParams() ?>);\n    9  <?php else: ?>\n   10:       $this->redirect('<?php echo $this->getModuleName() ?>/edit?<?php echo $this->getPrimaryKeyUrlParams() ?>);\n   11  <?php endif; ?>\n   12      }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/tasks/system/ExecTask.php:\n   76  \n   77      /**\n   78:      * If spawn is set then [unix] programs will redirect stdout and add '&'.\n   79       * @var boolean\n   80       */\n   ..\n  148  \n  149          // If neither output nor error are being written to file\n  150:         // then we'll redirect error to stdout so that we can dump\n  151          // it to screen below.\n  152  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/crud/crudBrowser.class.php:\n  235        end()->\n  236        with('response')->begin()->\n  237:         isRedirected()->\n  238:         followRedirect()->\n  239        end()->\n  240        with('request')->begin()->\n  ...\n  291        end()->\n  292        with('response')->begin()->\n  293:         isRedirected()->\n  294:         followRedirect()->\n  295        end()->\n  296        with('response')->begin()->\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/fixtures/apps/frontend/modules/attachment/actions/actions.class.php:\n   22          $this->form->save();\n   23  \n   24:         $this->redirect('attachment/ok');\n   25        }\n   26      }\n   ..\n   37      )\n   38      {\n   39:       $this->redirect('attachment/ok');\n   40      }\n   41  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/fixtures/apps/frontend/modules/choice/actions/actions.class.php:\n   35          $this->form->save();\n   36  \n   37:         $this->redirect('choice/ok');\n   38        }\n   39      }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/fixtures/apps/frontend/modules/i18n/actions/actions.class.php:\n   35          $movie = $this->form->save();\n   36  \n   37:         $this->redirect('i18n/movie?id='.$movie->getId());\n   38        }\n   39      }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/fixtures/apps/frontend/modules/unique/actions/actions.class.php:\n   21          $this->form->save();\n   22  \n   23:         $this->redirect('unique/ok');\n   24        }\n   25      }\n   ..\n   36          $this->form->save();\n   37  \n   38:         $this->redirect('unique/edit');\n   39        }\n   40      }\n   ..\n   56          $this->form->save();\n   57  \n   58:         $this->redirect('unique/ok');\n   59        }\n   60      }\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/formTest.php:\n   30    click('submit', array('attachment' => array('name' => $name, 'file' => $fileToUpload)))->\n   31    with('response')->begin()->\n   32:     isRedirected()->\n   33:     followRedirect()->\n   34    end()->\n   35    with('response')->begin()->\n   ..\n   68  \n   69    with('response')->begin()->\n   70:     isRedirected()->\n   71:     followRedirect()->\n   72    end()->\n   73    with('response')->begin()->\n   ..\n   99    click('submit', array('category' => array('name' => 'foo')))->\n  100    with('response')->begin()->\n  101:     isRedirected()->\n  102:     followRedirect()->\n  103    end()->\n  104    with('response')->begin()->\n  ...\n  159    click('submit')->\n  160    with('response')->begin()->\n  161:     isRedirected()->\n  162:     followRedirect()->\n  163    end()->\n  164    with('response')->begin()->\n  ...\n  177    click('submit', array('article' => array('title' => 'foo', 'category_id' => 1)))->\n  178    with('response')->begin()->\n  179:     isRedirected()->\n  180:     followRedirect()->\n  181    end()->\n  182    with('response')->begin()->\n  ...\n  195    click('submit', array('article' => array('title' => 'foo', 'category_id' => 2)))->\n  196    with('response')->begin()->\n  197:     isRedirected()->\n  198:     followRedirect()->\n  199    end()->\n  200    with('response')->begin()->\n  ...\n  231    click('submit', array('article' => array('title' => 'foo bar', 'category' => array('name' => 'Category foo'))))->\n  232    with('response')->begin()->\n  233:     isRedirected()->\n  234:     followRedirect()->\n  235    end()->\n  236    with('response')->begin()->\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/i18nTest.php:\n   81    click('submit', array('movie' => array('director' => 'Robert Aldrich', 'en' => array('title' => 'The Dirty Dozen'), 'fr' => array('title' => 'Les Douze Salopards'))))->\n   82    with('response')->begin()->\n   83:     isRedirected()->\n   84:     followRedirect()->\n   85    end()->\n   86    with('response')->begin()->\n   ..\n  103    click('submit', array('movie' => array('director' => 'Robert Aldrich (1)', 'en' => array('title' => 'The Dirty Dozen (1)'), 'fr' => array('title' => 'Les Douze Salopards (1)'))))->\n  104    with('response')->begin()->\n  105:     isRedirected()->\n  106:     followRedirect()->\n  107    end()->\n  108    with('response')->begin()->\n  ...\n  141    end()->\n  142    with('response')->begin()->\n  143:     isRedirected()->\n  144:     followRedirect()->\n  145    end()->\n  146    with('response')->begin()->\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/response/sfWebResponse.class.php:\n   57      '305' => 'Use Proxy',\n   58      '306' => '(Unused)',\n   59:     '307' => 'Temporary Redirect',\n   60      '400' => 'Bad Request',\n   61      '401' => 'Unauthorized',\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/test/sfTesterResponse.class.php:\n  348  \n  349    /**\n  350:    * Tests if the current request has been redirected.\n  351     *\n  352:    * @param  bool $boolean  Flag for redirection mode\n  353     *\n  354     * @return sfTestFunctionalBase|sfTester\n  355     */\n  356:   public function isRedirected($boolean = true)\n  357    {\n  358      if ($location = $this->response->getHttpHeader('location')) {\n  359:       $boolean ? $this->tester->pass(sprintf('page redirected to \"%s\"', $location)) : $this->tester->fail(sprintf('page redirected to \"%s\"', $location));\n  360      } else {\n  361:       $boolean ? $this->tester->fail('page redirected') : $this->tester->pass('page not redirected');\n  362      }\n  363  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/util/sfBrowserBase.class.php:\n  501  \n  502    /**\n  503:    * Follow redirects?\n  504     *\n  505:    * @throws sfException If request was not a redirect\n  506     *\n  507     * @return sfBrowserBase\n  508     */\n  509:   public function followRedirect()\n  510    {\n  511      if (null === $this->getResponse()->getHttpHeader('Location')) {\n  512:       throw new LogicException('The request was not redirected.');\n  513      }\n  514  \n  ...\n  887    public function fixUri($uri)\n  888    {\n  889:     // remove absolute information if needed (to be able to do follow redirects, click on links, ...)\n  890      if (0 === strpos($uri, 'http')) {\n  891        // detect secure request\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/vendor/swiftmailer/classes/Swift/Plugins/RedirectingPlugin.php:\n   10  \n   11  /**\n   12:  * Redirects all email to a single recipient.\n   13   * @package Swift\n   14   * @subpackage Plugins\n   15   * @author Fabien Potencier\n   16   */\n   17: class Swift_Plugins_RedirectingPlugin\n   18    implements Swift_Events_SendListener\n   19  {\n   ..\n   26  \n   27    /**\n   28:    * Create a new RedirectingPlugin.\n   29     * @param int $recipient\n   30     */\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/test/functional/fixtures/apps/frontend/modules/browser/actions/actions.class.php:\n   41    }\n   42  \n   43:   public function executeRedirect1()\n   44    {\n   45:     $this->redirect('browser/redirectTarget1');\n   46    }\n   47  \n   48:   public function executeRedirectTarget1()\n   49    {\n   50    }\n   51  \n   52:   public function executeRedirect2()\n   53    {\n   54:     $this->redirect('browser/redirectTarget2');\n   55    }\n   56  \n   57:   public function executeRedirectTarget2()\n   58    {\n   59      return $this->renderText('ok');\n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/test/functional/sfTestBrowserTest.php:\n  236  \n  237  $b\n  238:   ->getAndCheck('browser', 'redirect1', null, 302)\n  239  \n  240:   ->followRedirect()\n  241  \n  242    ->with('request')->begin()\n  243      ->isParameter('module', 'browser')\n  244:     ->isParameter('action', 'redirectTarget1')\n  245    ->end()\n  246  \n  247    ->with('response')->isStatusCode(200)\n  248  \n  249:   ->getAndCheck('browser', 'redirect2', null, 302)\n  250  \n  251:   ->followRedirect()\n  252  \n  253    ->with('request')->begin()\n  254      ->isParameter('module', 'browser')\n  255:     ->isParameter('action', 'redirectTarget2')\n  256    ->end()\n  257  \n\n/Users/jean/Projects/mercur/library/symfony-1.4.16/test/unit/controller/sfWebControllerTest.php:\n  165  }\n  166  \n  167: // ->redirect()\n  168: $t->diag('->redirect()');\n  169: $controller->redirect('module/action?id=1#photos');\n  170  $response = $context->getResponse();\n  171: $t->like($response->getContent(), '~http\\://localhost/index.php/\\?module=module&amp;action=action&amp;id=1#photos~', '->redirect() adds a refresh meta in the content');\n  172: $t->like($response->getHttpHeader('Location'), '~http\\://localhost/index.php/\\?module=module&action=action&id=1#photos~', '->redirect() adds a Location HTTP header');\n  173  \n  174: // Test null url argument for ->redirect()\n  175  try {\n  176:   $controller->redirect(null);\n  177:   $t->fail('->redirect() throw an InvalidArgumentException when the url argument is null');\n  178  } catch (InvalidArgumentException $iae) {\n  179:   $t->pass('->redirect() throw an InvalidArgumentException when the url argument is null');\n  180  } catch (Exception $e) {\n  181:   $t->fail('->redirect() throw an InvalidArgumentException when the url argument is null. '.get_class($e).' was received');\n  182  }\n  183  \n  184: // Test empty string url argument for ->redirect()\n  185  try {\n  186:   $controller->redirect('');\n  187:   $t->fail('->redirect() throw an InvalidArgumentException when the url argument is an empty string');\n  188  } catch (InvalidArgumentException $iae) {\n  189:   $t->pass('->redirect() throw an InvalidArgumentException when the url argument is an empty string');\n  190  } catch (Exception $e) {\n  191:   $t->fail('->redirect() throw an InvalidArgumentException when the url argument is an empty string. '.get_class($e).' was received');\n  192  }\n  193  \n\n/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Controller/DashboardController.php:\n   30          $cache->optimize();\n   31  \n   32:         return $this->redirect()->toRoute('ack');\n   33      }\n   34  \n\n/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/HttpClient.php:\n   48      protected $persist_referers = false;\n   49      protected $debug = false;\n   50:     protected $handle_redirects = true;\n   51:     protected $max_redirects = 5;\n   52      protected $headers_only = false;\n   53:     protected $strict_redirects = false;\n   54  \n   55      // * Basic authorization variables:\n   ..\n   66      // * Tracker variables:\n   67  \n   68:     protected $redirect_count = 0;\n   69  \n   70      // --- Constructor / destructor:\n   ..\n  404      }\n  405  \n  406:     public function setHandleRedirects($boolean)\n  407      {\n  408:         // Specify if the client should automatically follow redirected requests.\n  409          // Enabled by default.\n  410:         $this->handle_redirects = $boolean;\n  411      }\n  412  \n  413:     public function setStrictRedirects($boolean)\n  414      {\n  415:         // Specify if the client should check for a 301, 302, or 307 status code before handling a redirect.\n  416          // Disabled default.\n  417:         $this->strict_redirects = $boolean;\n  418      }\n  419  \n  420:     public function setMaxRedirects($num)\n  421      {\n  422:         // Set the maximum number of redirects allowed before the client\n  423:         // gives up (mainly to prevent infinite loops). Defaults to 5 redirects.\n  424:         $this->max_redirects = $num;\n  425      }\n  426  \n  ...\n  724          }\n  725  \n  726:         // * Finally, if handle_redirects and a redirect is sent, do that:\n  727:         $redirect_status_codes = array(301, 302, 307);\n  728:         if ($this->handle_redirects) {\n  729:             if (!$this->strict_redirects || in_array($this->status, $redirect_status_codes)) {\n  730:                 if (++$this->redirect_count >= $this->max_redirects) {\n  731:                     $this->errormsg = 'Number of redirects exceeded maximum ('.$this->max_redirects.')';\n  732                      $this->debug($this->errormsg);\n  733:                     $this->redirect_count = 0;\n  734  \n  735                      return false;\n  ...\n  739                  $location .= isset($this->headers['uri']) ? $this->headers['uri'] : '';\n  740                  if ($location) {\n  741:                     $this->debug(\"Following redirect to: $location\" . (@$url['host'] ? \", host: \".$url['host'] : ''));\n  742                      $url = parse_url($location);\n  743                      if (@$url['scheme']) $this->scheme = $url['scheme'];\n\n/Users/jean/Projects/mercur/module/Mercur/Module.php:\n   76  \n   77                  $controller = $e->getTarget();\n   78:                 $controller->plugin('redirect')->toRoute('maintenance');\n   79  \n   80                  return false;\n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/AplicacoesController.php:\n   40          $aplicacao = $model->onlyAvailable()->toObject()->getOne(array('id' => $id));\n   41          if (empty($aplicacao)) {\n   42:             return $this->redirect()->toRoute('aplicacoes', array());\n   43          }\n   44          $image = $aplicacao->seekMyFirstPhotos();\n   ..\n   69                  $list = \\AckCore\\Model\\Aplicacao::Factory($list);\n   70              } else {\n   71:                 return $this->redirect()->toRoute('aplicacoes');\n   72              }\n   73          } else {\n   74:             return $this->redirect()->toRoute('aplicacoes');\n   75          }\n   76  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/ArtigosController.php:\n   55          $artigo = $model->onlyAvailable()->toObject()->getOne(array('id' => $id));\n   56          if (empty($artigo)) {\n   57:             return $this->redirect()->toRoute('home/artigos', array());\n   58          }\n   59          $image = $artigo->getCover();\n   ..\n   85                  $list = $modelArtigos->getByCategoriaAndTermo($parametros['categoria'], $parametros['termo']);\n   86              } else {\n   87:                 return $this->redirect()->toRoute('home/artigos');\n   88              }\n   89          } else {\n   90:             return $this->redirect()->toRoute('home/artigos');\n   91          }\n   92  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/EventosController.php:\n   40          $evento = $model->onlyAvailable()->toObject()->getOne(array('id' => $id));\n   41          if (empty($evento)) {\n   42:             return $this->redirect()->toRoute('home/default', array('controller' => 'eventos','action' => 'index'));\n   43          }\n   44          $image = $evento->getCover();\n   ..\n   73  \n   74              } else {\n   75:                 return $this->redirect()->toRoute('home/eventos');\n   76              }\n   77          } else {\n   78:             return $this->redirect()->toRoute('home/eventos');\n   79          }\n   80  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/FaleconoscoController.php:\n  142      {\n  143          if (!isset($_SESSION['nome'])) {\n  144:             return $this->redirect()->toRoute('home/default', array('controller' => 'faleconosco'));\n  145          }\n  146  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/JornalController.php:\n   34          $row = $model->onlyAvailable()->toObject()->getOne(array('id' => $id));\n   35          if (empty($row)) {\n   36:             return $this->redirect()->toRoute('home/paginator', array('controller' => 'jornal'));\n   37         }\n   38          $this->viewModel->setVariables(array('row' => $row));\n   ..\n   99  \n  100              } else {\n  101:                 return $this->redirect()->toRoute('home/paginator', array('controller' =>'jornal'));\n  102              }\n  103          } else {\n  104:             return $this->redirect()->toRoute('home/paginator', array('controller' =>'jornal'));\n  105          }\n  106  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/MessagesController.php:\n   18  \n   19          if (!defined('MAINTENANCE')) {\n   20:             $this->redirect()->toRoute('home');\n   21  \n   22              return;\n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php:\n  107  \n  108          if (empty($token)) {\n  109:             return $this->redirect()->toRoute('home/default', array('controller' => 'ondeencontrar'));\n  110          }\n  111  \n  ...\n  125  \n  126          if (empty($pesquisa)) {\n  127:             return $this->redirect()->toRoute('home/default', array('controller' => 'ondeencontrar'));\n  128          }\n  129  \n  ...\n  205              $list = \\AckCore\\Model\\Empresa::Factory($list);\n  206          } else {\n  207:             return $this->redirect()->toRoute('home/default', array('controller' => 'ondeencontrar'));\n  208          }\n  209  \n  ...\n  229              $list = \\AckCore\\Model\\Empresa::Factory($list);\n  230          } else {\n  231:             return $this->redirect()->toRoute('home/default', array('controller' => 'ondeencontrar'));\n  232          }\n  233  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/ProdutosController.php:\n   35  \n   36          if (!($this->params('id'))) {\n   37:             return $this->redirect()->toRoute('home/default', array('controller' => 'produtos', 'action' => 'listar'));\n   38          }\n   39  \n\n/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/ReleasesController.php:\n   47          $release = $model->onlyAvailable()->toObject()->getOne(array('id' => $id));\n   48          if (empty($release)) {\n   49:             return $this->redirect()->toRoute('home/releases', array());\n   50          }\n   51          $image = $release->getCover();\n   ..\n   77                  $list = $modelReleases->getByCategoriaAndTermo($parametros['categoria'], $parametros['termo']);\n   78              } else {\n   79:                 return $this->redirect()->toRoute('home/releases');\n   80              }\n   81          } else {\n   82:             return $this->redirect()->toRoute('home/releases');\n   83          }\n   84  \n\n/Users/jean/Projects/mercur/module/Restrito/Module.php:\n   61          if(!$auth->hasIdentity() and ($matchedRoute == \"restrito\" or $matchedRoute == \"restrito/default\" or $matchedRoute == \"restrito/paginator\" or $matchedRoute == \"restrito/paginator-action\"))\n   62  \n   63:             return $controller->redirect()->toRoute(\"home\");\n   64      }\n   65  }\n\n/Users/jean/Projects/mercur/module/Restrito/src/Restrito/Controller/AuthController.php:\n   49                  );\n   50          } else {\n   51:             return $this->redirect()->toRoute('home');\n   52          }\n   53  \n   ..\n   63          $auth->clearIdentity();\n   64  \n   65:         return $this->redirect()->toRoute('home');\n   66      }\n   67  \n   ..\n  106              #requisição normal, mostra a tela para o usuario adicionar uma nova senha\n  107              if (!$this->params()->fromRoute('chave')) {\n  108:                 return $this->redirect()->toRoute('home');\n  109              } else {\n  110                  $id = $encrypt->decrypt(base64_decode($this->params()->fromRoute('chave')));\n  ...\n  112                  $usuario = $model->getOne(array('id' => $id));\n  113                  if (empty($usuario)) {\n  114:                     return $this->redirect()->toRoute('home');\n  115                  }\n  116                  #Salvo o usuario em sessão para ser usado na recuperação da senha\n\n/Users/jean/Projects/mercur/module/Restrito/src/Restrito/Controller/IndexController.php:\n   38              return $this->viewModel;\n   39          } else {\n   40:             return $this->redirect()->toRoute('restrito/default', array('controller' => 'perfil'));\n   41          }\n   42      }\n\n/Users/jean/Projects/mercur/module/Restrito/src/Restrito/Controller/MuralController.php:\n   28              return $this->viewModel;\n   29          } else {\n   30:             return $this->redirect()->toRoute('restrito/default', array('controller' => 'perfil'));\n   31          }\n   32      }\n   ..\n   42  \n   43              if (empty($recado) || !$recado->hasPermissionToSee($role['id'])) {\n   44:                 return $this->redirect()->toRoute('restrito/default', array('controller' => 'mural'));\n   45              }\n   46  \n   ..\n   49              return $this->viewModel;\n   50          } else {\n   51:             return $this->redirect()->toRoute('restrito/default', array('controller' => 'perfil'));\n   52          }\n   53      }\n\n/Users/jean/Projects/mercur/module/Restrito/src/Restrito/Controller/TelefonesController.php:\n   26              return $this->viewModel;\n   27          } else {\n   28:             return $this->redirect()->toRoute('restrito/default', array('controller' => 'perfil'));\n   29          }\n   30      }\n   ..\n   44              return $this->viewModel;\n   45          } else {\n   46:             return $this->redirect()->toRoute('restrito/default', array('controller' => 'perfil'));\n   47          }\n   48      }\n\n/Users/jean/Projects/mercur/module/Sac/src/Sac/Controller/InteracaoController.php:\n  106              $store->update(array('status_id' => 4), 'sac_atendimento')->where('sac_atendimento.id = '.$id)->run();\n  107  \n  108:             return $this->redirect()->toRoute('sac', array('codigo' => $this->params()->fromRoute('codigo')));\n  109  \n  110          }\n\n",
			"settings":
			{
				"buffer_size": 375018,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 189.0,
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"SETTINGSU",
				"Preferences: Settings - User"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"SETTING",
				"Preferences: Settings - User"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"setting use",
				"Preferences: Settings - User"
			],
			[
				"REMOV",
				"Package Control: Remove Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"select colro",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"select",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"open ",
				"Github: Open File"
			],
			[
				"KEY",
				"Preferences: Key Bindings - Default"
			],
			[
				"KEYB",
				"Preferences: Key Bindings - User"
			],
			[
				"selectcolor",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"addfo",
				"Project: Add Folder"
			],
			[
				"colro",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"selectcolo",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"colors",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"settings user",
				"Preferences: Settings - User"
			],
			[
				"intsl",
				"Package Control: Install Package"
			],
			[
				"color",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				":w",
				":w - Save"
			],
			[
				"colorschem",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"settings defaut",
				"Preferences: Settings - Default"
			],
			[
				"settings",
				"Preferences: Settings - User"
			],
			[
				"settingsus",
				"Preferences: Settings - User"
			],
			[
				":u",
				"Snippet: use"
			],
			[
				"PHP Code Sniffer: ",
				"PHP Code Sniffer: Turn Execute On Save On"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control:in",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"9hWjJoIGbbRB"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": true,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jean/Projects/blog",
		"/Users/jean/Projects/blog/config",
		"/Users/jean/Projects/blog/config/autoload",
		"/Users/jean/Projects/blog/module",
		"/Users/jean/Projects/blog/module/SiteJean",
		"/Users/jean/Projects/blog/module/SiteJean/src",
		"/Users/jean/Projects/blog/module/SiteJean/src/SiteJean/Db",
		"/Users/jean/Projects/blog/module/SiteJean/view",
		"/Users/jean/Projects/blog/module/SiteJean/view/site-jean",
		"/Users/jean/Projects/blog/module/SiteJean/view/site-jean/dashboard",
		"/Users/jean/Projects/blog/module/SiteJean/view/site-jean/index",
		"/Users/jean/Projects/blog/module/SiteJean/view/site-jean/layout",
		"/Users/jean/Projects/blog/module/SiteJean/view/site-jean/layout/components",
		"/Users/jean/Projects/blog/public"
	],
	"file_history":
	[
		"/private/var/folders/l9/wgyk99yd5qx_yvbdswsd8j9w0000gn/T/fz3temp-1/uploadify-old.php",
		"/Users/jean/Projects/cub/public/plugins/uploads/uploadify.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/system/io/ConsoleReader.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/DataAbstraction/config.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/task/sfFilesystem.class.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/System.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/database/sfMySQLDatabase.class.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/yaml/sfYaml.php",
		"/Users/jean/Projects/snippet/sublime/son.sublime-snippet",
		"/Users/jean/Projects/mercur/module/Mercur/view/mercur/produtos/visualizar.phtml",
		"/Users/jean/Projects/mercur/vendor/zendframework/zenddiagnostics/src/ZendDiagnostics/Check/CheckInterface.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Service_StrikeIron-AdvancedUses.xml",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/module_specs/Zend_Test-PHPUnit-Db-Quickstart.xml",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/test/unit/sfEventDispatcherTest.class.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/event_dispatcher/sfEventDispatcher.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/tasks/ext/ScpSendTask.php",
		"/Users/jean/Projects/mercur/vendor/phpmailer/phpmailer/examples/sendmail.phps",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Gdata/Calendar/Extension/SendEventNotifications.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/event_dispatcher/sfEvent.php",
		"/Users/jean/Projects/mercur/.DS_Store",
		"/Users/jean/Projects/mercur/docs/xml/produtos.xml",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/Product.php",
		"/Users/jean/Projects/mercur/.git/hooks/pre-rebase.sample",
		"/Users/jean/Projects/mercur/phpunit.xml",
		"/Users/jean/Projects/mercur/README.md",
		"/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/TextUI/ResultPrinter.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Service/WindowsAzure/RetryPolicyTest.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Feed/Pubsubhubbub/_files/testRawPostData.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/ref/performance-introduction.xml",
		"/Users/jean/Projects/mercur/module/MercurAcl/src/MercurAcl/Model/Roles.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Ldap/Node/RootDse.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/test/functional/fixtures/apps/backend_compat/config/backend_compatConfiguration.class.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Cloud/Infrastructure/Adapter/_files/RackspaceTest_testCreateInstance.response",
		"/Users/jean/Projects/mercur/vendor/phpunit/phpunit-mock-objects/Tests/_files/StaticMockTestClass.php",
		"/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Extensions/TicketListener.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zend-developer-tools/src/ZendDeveloperTools/Collector/TimeCollector.php",
		"/Users/jean/Projects/mercur/test/MercurTest/TestImage.php",
		"/Users/jean/Projects/mercur/email/Thumbs.db",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Test/PHPUnit/Db/Integration/SqLiteIntegrationTest.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Stdlib/SplQueue.php",
		"/Users/jean/Projects/mercur/.git/description",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterFilter.php",
		"/Users/jean/Projects/mercur/vendor/phpunit/phpunit/Tests/_files/ExceptionInTest.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/helper/I18NHelper.php",
		"/Users/jean/Projects/mercur/.git/index",
		"/Users/jean/Projects/mercur/docs/alterations.sql",
		"/Users/jean/Projects/mercur/public/index.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Tool/Project/Context/Zf/PublicIndexFile.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Tool/Project/Context/Zf/PublicImagesDirectory.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Filter/_files/publickey.pem",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework/library/Zend/Feed/PubSubHubbub/Publisher.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Feed/Pubsubhubbub.php",
		"/Users/jean/Projects/mercur/.git/hooks/post-update.sample",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Controller/AtendimentoController.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/HtmlElements/Automator.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/HtmlElements/ListHeaderEntry.php",
		"/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/DownloadsController.php",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/layout/components/footerElements.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/layout/components/filters_template.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/layout/components/footer.phtml",
		"/Users/jean/Projects/mercur/module/Galeria/src/Galeria/Controller/DownloadController.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Date/DateObject.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/ProdutoCodigos.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/ProductsModelos.php",
		"/Users/jean/Projects/mercur/.gitignore",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php",
		"/Users/jean/Projects/mercur/module/Galeria/src/Galeria/Service/InterpreterService.php",
		"/Users/jean/Projects/mercur/vendor/composer/include_paths.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/lib/plugins/sfPropelPlugin/lib/vendor/phing/tasks/system/condition/IsTrueCondition.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/documentation/manual/de/tutorials/lucene-index-structure.xml",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/licenses/LICENSE.ICU",
		"/Users/jean/Projects/mercur/LICENSE.txt",
		"/Users/jean/Projects/mercur/vendor/autoload.php",
		"/Users/jean/Projects/mercur/module/Mercur/view/mailer/ackNewUser.phtml",
		"/Users/jean/Projects/mercur/.git/HEAD",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Validate/HexTest.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/HtmlElementManager.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/HtmlElements/Elements.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/HtmlElements/ElementAbstract.php",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/modulos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/default/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/logs/elements.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/orcamentos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/produtos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/servicos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/setores/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/subinstitucional/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/usuarios/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/institucional/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/filtrositens/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/enderecos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/View/Helper/SideColumn.php",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/destaquesprodutos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/empresas/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Controller/EmpresasController.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Controller/DestaquesProdutosController.php",
		"/Users/jean/Projects/mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterAbstract.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/library/Zend/Tool/Project/Context/Zf/SearchIndexesDirectory.php",
		"/Users/jean/Projects/mercur/library/symfony-1.4.16/data/bin/sandbox_installer.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/Empresas.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/Empresa.php",
		"/Users/jean/Projects/mercur/vendor/phpunit/phpunit/PHPUnit/Framework/Constraint/JsonMatches/ErrorMessageProvider.php",
		"/Users/jean/Projects/mercur/public/mercur/plugins/recaptcha/example-mailhide.php",
		"/Users/jean/Projects/mercur/.git/info/exclude",
		"/Users/jean/Projects/mercur/.git/config",
		"/Users/jean/Projects/snippet/atom/sublime/colsFromObjects.cson",
		"/Users/jean/Projects/mercur/composer.json",
		"/Users/jean/Projects/mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/DestaquesProdutos.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Model/DestaquesProduto.php",
		"/Users/jean/Projects/mercur/module/AckCore/src/AckCore/Controller/DestaquesController.php",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/tests/Zend/Ldap/Node/RootDseTest.php",
		"/Users/jean/Projects/mercur/vendor/symfony/yaml/Symfony/Component/Yaml/Exception/DumpException.php",
		"/Users/jean/Projects/mercur/module/MercurAck/src/MercurAck/Controller/NewsletterController.php",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/institucional/element_old.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/itensinstitucional/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/logs/elements.phtml2",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/catalogo/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/categoriasdeprodutos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/conteudos/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/abas/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/aplicacao/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/atendimento/element.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/config/module.config.php",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/layout/components/filtersContainer.phtml",
		"/Users/jean/Projects/mercur/module/AckCore/view/ack-core/layout/components/breadCrumbs.phtml",
		"/Users/jean/Projects/mercur/vendor/zendframework/zendframework1/.git/objects/pack/pack-c5322efecc7dda9377bfd1e23a6c556098146b47.idx",
		"/Users/jean/Projects/mercur/.git/objects/pack/pack-8b477051609134ef8c793c4d8b90793304153f43.idx"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"/Users/jean/Prblogojects/\n ,/Users/jean/Projects/mercur",
			"/Users/jean/Projects/blog\n ,/Users/jean/Projects/mercur",
			"/Users/jean/Projects/mercur\n ,/Users/jean/Projects/mercur",
			"/Users/jean/Projects/mercur/module",
			"/Users/jean/Projects/mercur",
			"/Users/jean/Projects/mercur/module",
			"/Users/jean/Projects/mercur",
			"/Users/jean/Projects/mercur/module",
			"/Users/jean/Projects/mercur/vendor/system",
			"/Users/jean/Projects/mercur",
			"/Users/jean/Projects/ikro/docs/html"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"redirect",
			"header",
			"redirect",
			"url",
			"site",
			"GET",
			"cate",
			"id",
			"mensagem",
			"acao",
			"#",
			"sendticket",
			"send",
			".js.js",
			"modo-de",
			"teste",
			"TESTE",
			"`mercur`.",
			"downloads",
			"<fieldset class=\"field checkboxGruop\">",
			"col",
			"  if ($this->hasSubconfigKey()) {\n\n            $config['whitelist'] = $config[$this->getSubconfigKey()]['whitelist'];\n            $config['blacklist'] = $config[$this->getSubconfigKey()]['blacklist'];\n        }",
			"subconfigKey",
			"context",
			"getCustomConfig",
			"wh",
			"isAllowed",
			"setControllerConfig",
			"getIdent",
			"GETfACTORYoF",
			"GETfACTORY",
			"getIdentity",
			"getServiceManager",
			"InterpreterForm::getInstance()->setControllerConfig",
			"setControllerConfig",
			"AckView",
			"render",
			"setContro",
			"\">",
			"cityName",
			"remove",
			"removeA",
			"invokables",
			"excluir",
			"\"",
			"email",
			"removernewsletter",
			"'newsletter' => array(\n            'type'    => 'Segment',\n             'priority' => 666,\n             'options' => array(\n                'route'    => '/newsletter[/:action][/:id][/:params]',\n                'constraints' => array(\n                    'action'     => '[a-zA-Z][a-zA-Z0-9_-]*',\n                    'id'     => '[0-9]+',\n                    'params' => '(.*)'\n                ),\n                'defaults' => array(\n                    '__NAMESPACE__' => 'Mercur\\Controller',\n                    'controller' => 'Newsletter',\n                    'action' => 'index'\n                ),\n            ),\n        ),",
			"newsletter",
			"();",
			"set",
			"invokab",
			"response",
			"newsletter",
			"\"",
			"ion create",
			"getActionMeaningfulData",
			"getScoppedData",
			"parametros",
			"list",
			"invokables",
			"unity",
			"ondeEncontrarBolsa",
			"ondeencontrarbolsa",
			"pluralizer",
			"RequestFacade",
			"modo",
			"ir para o site da mercur",
			"PasswordUtils",
			"generate",
			"photo",
			"ack-core",
			"cidade",
			"pesquisa",
			"currentCategory",
			"$category",
			"category",
			"currentCategory",
			"category",
			"ver",
			"category",
			"getMyCategory",
			"caret_extra_bottom",
			"1",
			"-big",
			"ion excluir(",
			"ion excluir",
			"removeAc",
			"delete",
			"remove",
			"ack-core/plugins/",
			"loadCities",
			"currentId",
			"diversi",
			"redes",
			"\"",
			"jornal",
			"\"",
			"ack-core/images",
			"recuperar",
			"currentCi",
			"current",
			"currCity",
			"city",
			"dump",
			"dubmp",
			"n",
			"categoryData",
			"getScoppedData",
			"filters",
			"currcity",
			"getCidadeId",
			"categoryData",
			"toData",
			"date",
			"getDATA",
			"include",
			"Destaques",
			"manual",
			"Manual da marca",
			"toObject",
			"RETURNoBJ",
			"RETURNoBJE",
			" {",
			"cacheOperacao",
			"ion getOne(",
			"ion get(",
			"ion get"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"//",
			"",
			"InterpreterForm::getInstance()->setCustomConfig",
			"AckCore",
			"'",
			"$currentCategory",
			"plugins/",
			"currentRouteId",
			"'",
			"img/ack",
			"images",
			"'",
			"colloda",
			"user_array",
			"user-array",
			"$data",
			"annex",
			"video",
			"",
			"0",
			"<?= youtubeThumb($currProduto['videos'][$videosId]['arquivo'],'p',true)  ?> ",
			"<?= youtubeThumb($currCategoria['videos'][$videosId]['arquivo'],'p',true)  ?>",
			"http://www.youtube.com/embed/<?= youtubeThumb($currCategoria['videos'][$videosId]['arquivo'],'p',true)  ?>",
			"http://www.youtube.com/embed/<?= youtubeThumb($currProduto['videos'][0]['arquivo'],'p',true)  ?>",
			"http://www.youtube.com/embed/<?= youtubeThumb(currNotice['videos'][0]['arquivo'],'p',true)  ?>",
			"http://www.youtube.com/embed/<?= youtubeThumb($video['arquivo'],'p',true)  ?>",
			"'arquivo'",
			"<?= youtubeThumb($video['arquivo']) ?>",
			"$foto",
			"$video",
			"$dados[\"tamanhoCrop\"]=false;",
			"$produtos",
			"",
			"_'.System_Language::current()",
			"dadosJSON[\"categorias_montadoras\"",
			"_'.System_Language::current()",
			"$this->data",
			"id",
			"$data",
			"string",
			" $_SESSION['auth_ack']",
			"_fileName",
			"$coordinate1['lat']",
			"$coordinate2['lat']",
			"$this->soapGiulian",
			"Orçamento",
			"$dadosOrcamento",
			"orcamentos_app",
			"48",
			"usuarioapp",
			"orcamento",
			"orcamentos",
			"orcamento",
			"orcamentos",
			"usuario",
			"usuarios",
			"usuario",
			"usuarios",
			"47",
			"usuario",
			"usuarios",
			"usuarios_app",
			"47",
			"dadosItem",
			"Servico",
			"Servicos",
			"Servico",
			"servico"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/jean/Projects/blog/config/autoload/local.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 540,
						"regions":
						{
						},
						"selection":
						[
							[
								413,
								413
							]
						],
						"settings":
						{
							"rulers":
							[
								85,
								11.9,
								12.2
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"capture_register": false,
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"repeat_data":
								[
									"vi",
									"dw",
									"mode_normal",
									null
								],
								"sequence": "",
								"xpos": 12
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 375018,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										199,
										207
									],
									[
										902,
										910
									],
									[
										1944,
										1952
									],
									[
										134732,
										134740
									],
									[
										134803,
										134811
									],
									[
										134911,
										134919
									],
									[
										134956,
										134964
									],
									[
										198114,
										198122
									],
									[
										198270,
										198278
									],
									[
										208704,
										208712
									],
									[
										208740,
										208748
									],
									[
										227309,
										227317
									],
									[
										227501,
										227509
									],
									[
										227529,
										227537
									],
									[
										239769,
										239777
									],
									[
										239888,
										239896
									],
									[
										250515,
										250523
									],
									[
										250707,
										250715
									],
									[
										250735,
										250743
									],
									[
										336598,
										336606
									],
									[
										337098,
										337106
									],
									[
										337115,
										337123
									],
									[
										337657,
										337665
									],
									[
										338096,
										338104
									],
									[
										338356,
										338364
									],
									[
										338418,
										338426
									],
									[
										338897,
										338905
									],
									[
										339324,
										339332
									],
									[
										339395,
										339403
									],
									[
										339512,
										339520
									],
									[
										339562,
										339570
									],
									[
										339753,
										339761
									],
									[
										339993,
										340001
									],
									[
										340237,
										340245
									],
									[
										340397,
										340405
									],
									[
										340570,
										340578
									],
									[
										340737,
										340745
									],
									[
										340856,
										340864
									],
									[
										341111,
										341119
									],
									[
										341158,
										341166
									],
									[
										341399,
										341407
									],
									[
										341497,
										341505
									],
									[
										341751,
										341759
									],
									[
										341798,
										341806
									],
									[
										342044,
										342052
									],
									[
										342666,
										342674
									],
									[
										343015,
										343023
									],
									[
										343107,
										343115
									],
									[
										343329,
										343337
									],
									[
										343635,
										343643
									],
									[
										343778,
										343786
									],
									[
										343988,
										343996
									],
									[
										344052,
										344060
									],
									[
										344329,
										344337
									],
									[
										344497,
										344505
									],
									[
										344535,
										344543
									],
									[
										344688,
										344696
									],
									[
										345013,
										345021
									],
									[
										345240,
										345248
									],
									[
										345365,
										345373
									],
									[
										345578,
										345586
									],
									[
										345838,
										345846
									],
									[
										346162,
										346170
									],
									[
										346337,
										346345
									],
									[
										346691,
										346699
									],
									[
										346863,
										346871
									],
									[
										347297,
										347305
									],
									[
										347396,
										347404
									],
									[
										347756,
										347764
									],
									[
										347902,
										347910
									],
									[
										348256,
										348264
									],
									[
										348325,
										348333
									],
									[
										348372,
										348380
									],
									[
										348708,
										348716
									],
									[
										348746,
										348754
									],
									[
										348912,
										348920
									],
									[
										348950,
										348958
									],
									[
										349128,
										349136
									],
									[
										349166,
										349174
									],
									[
										349428,
										349436
									],
									[
										349474,
										349482
									],
									[
										349656,
										349664
									],
									[
										349791,
										349799
									],
									[
										350092,
										350100
									],
									[
										350319,
										350327
									],
									[
										350444,
										350452
									],
									[
										350567,
										350575
									],
									[
										350897,
										350905
									],
									[
										351217,
										351225
									],
									[
										351392,
										351400
									],
									[
										351742,
										351750
									],
									[
										351914,
										351922
									],
									[
										352344,
										352352
									],
									[
										352443,
										352451
									],
									[
										352799,
										352807
									],
									[
										352945,
										352953
									],
									[
										353283,
										353291
									],
									[
										353469,
										353477
									],
									[
										353762,
										353770
									],
									[
										353798,
										353806
									],
									[
										353957,
										353965
									],
									[
										353993,
										354001
									],
									[
										354298,
										354306
									],
									[
										354405,
										354413
									],
									[
										354679,
										354687
									],
									[
										354963,
										354971
									],
									[
										355261,
										355269
									],
									[
										355384,
										355392
									],
									[
										355509,
										355517
									],
									[
										355818,
										355826
									],
									[
										355850,
										355858
									],
									[
										355981,
										355989
									],
									[
										356013,
										356021
									],
									[
										356208,
										356216
									],
									[
										356240,
										356248
									],
									[
										356390,
										356398
									],
									[
										356422,
										356430
									],
									[
										356637,
										356645
									],
									[
										356669,
										356677
									],
									[
										356884,
										356892
									],
									[
										356916,
										356924
									],
									[
										357162,
										357170
									],
									[
										357194,
										357202
									],
									[
										357598,
										357606
									],
									[
										357630,
										357638
									],
									[
										357943,
										357951
									],
									[
										357975,
										357983
									],
									[
										358115,
										358123
									],
									[
										358147,
										358155
									],
									[
										358400,
										358408
									],
									[
										358642,
										358650
									],
									[
										358710,
										358718
									],
									[
										358829,
										358837
									],
									[
										358999,
										359007
									],
									[
										359068,
										359076
									],
									[
										359172,
										359180
									],
									[
										359217,
										359225
									],
									[
										359378,
										359386
									],
									[
										359454,
										359462
									],
									[
										359553,
										359561
									],
									[
										359709,
										359717
									],
									[
										359877,
										359885
									],
									[
										360141,
										360149
									],
									[
										360312,
										360320
									],
									[
										360437,
										360445
									],
									[
										360688,
										360696
									],
									[
										360729,
										360737
									],
									[
										360747,
										360755
									],
									[
										360817,
										360825
									],
									[
										360897,
										360905
									],
									[
										360938,
										360946
									],
									[
										360956,
										360964
									],
									[
										361026,
										361034
									],
									[
										361242,
										361250
									],
									[
										361290,
										361298
									],
									[
										361427,
										361435
									],
									[
										361560,
										361568
									],
									[
										361608,
										361616
									],
									[
										361745,
										361753
									],
									[
										361915,
										361923
									],
									[
										361945,
										361953
									],
									[
										361979,
										361987
									],
									[
										362189,
										362197
									],
									[
										362370,
										362378
									],
									[
										362459,
										362467
									],
									[
										362505,
										362513
									],
									[
										362542,
										362550
									],
									[
										362690,
										362698
									],
									[
										362821,
										362829
									],
									[
										362995,
										363003
									],
									[
										363041,
										363049
									],
									[
										363076,
										363084
									],
									[
										363235,
										363243
									],
									[
										363377,
										363385
									],
									[
										363679,
										363687
									],
									[
										363920,
										363928
									],
									[
										363964,
										363972
									],
									[
										364052,
										364060
									],
									[
										364197,
										364205
									],
									[
										364332,
										364340
									],
									[
										364433,
										364441
									],
									[
										364521,
										364529
									],
									[
										364600,
										364608
									],
									[
										364739,
										364747
									],
									[
										364814,
										364822
									],
									[
										364890,
										364898
									],
									[
										364963,
										364971
									],
									[
										365076,
										365084
									],
									[
										365113,
										365121
									],
									[
										365222,
										365230
									],
									[
										365238,
										365246
									],
									[
										365281,
										365289
									],
									[
										365360,
										365368
									],
									[
										365411,
										365419
									],
									[
										365449,
										365457
									],
									[
										365511,
										365519
									],
									[
										365540,
										365548
									],
									[
										365609,
										365617
									],
									[
										365650,
										365658
									],
									[
										365757,
										365765
									],
									[
										366018,
										366026
									],
									[
										366390,
										366398
									],
									[
										366728,
										366736
									],
									[
										366990,
										366998
									],
									[
										367103,
										367111
									],
									[
										367411,
										367419
									],
									[
										367708,
										367716
									],
									[
										367823,
										367831
									],
									[
										368133,
										368141
									],
									[
										368365,
										368373
									],
									[
										368480,
										368488
									],
									[
										368728,
										368736
									],
									[
										369069,
										369077
									],
									[
										369305,
										369313
									],
									[
										369454,
										369462
									],
									[
										369719,
										369727
									],
									[
										369954,
										369962
									],
									[
										370142,
										370150
									],
									[
										370374,
										370382
									],
									[
										370606,
										370614
									],
									[
										370883,
										370891
									],
									[
										371253,
										371261
									],
									[
										371553,
										371561
									],
									[
										371669,
										371677
									],
									[
										372039,
										372047
									],
									[
										372262,
										372270
									],
									[
										372398,
										372406
									],
									[
										372647,
										372655
									],
									[
										372967,
										372975
									],
									[
										373301,
										373309
									],
									[
										373596,
										373604
									],
									[
										373837,
										373845
									],
									[
										374046,
										374054
									],
									[
										374345,
										374353
									],
									[
										374556,
										374564
									],
									[
										374907,
										374915
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"rulers":
							[
								85,
								-0.1,
								0.2
							],
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": true,
								"action": null,
								"action_count": "",
								"capture_register": false,
								"mode": "mode_insert",
								"motion": null,
								"motion_count": "",
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"repeat_data":
								[
									"vi",
									"c",
									"mode_insert",
									[
										0,
										1,
										"mode_visual"
									]
								],
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "jeanAir.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"systemcoreface",
				"mercur/vendor/system/1.8/System/Core/Facade.php"
			],
			[
				".hta",
				"mercur/public/.htaccess"
			],
			[
				"produtosvi",
				"mercur/module/Mercur/view/mercur/produtos/visualizar.phtml"
			],
			[
				"sqlfiltros",
				"mercur/module/Mercur/src/Mercur/Controller/Helper/SqlFiltros.php"
			],
			[
				"downloadscont",
				"mercur/module/Mercur/src/Mercur/Controller/DownloadsController.php"
			],
			[
				"interpreterfor",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php"
			],
			[
				"altera",
				"mercur/docs/alterations.sql"
			],
			[
				"publicidnex.ph",
				"mercur/public/index.php"
			],
			[
				"downloadscontr",
				"mercur/module/Mercur/src/Mercur/Controller/DownloadsController.php"
			],
			[
				"produtosv",
				"mercur/module/Mercur/view/mercur/produtos/visualizar.phtml"
			],
			[
				"interpreterfi",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterFilter.php"
			],
			[
				"listhead",
				"mercur/vendor/system/1.8/System/HtmlElements/ListHeaderEntry.php"
			],
			[
				"automator",
				"mercur/vendor/system/1.8/System/HtmlElements/Automator.php"
			],
			[
				"interpreterfr",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php"
			],
			[
				"side",
				"mercur/module/AckCore/src/AckCore/View/Helper/SideColumn.php"
			],
			[
				"empresascontr",
				"mercur/module/AckCore/src/AckCore/Controller/EmpresasController.php"
			],
			[
				"config.php",
				"mercur/vendor/system/1.8/System/DataAbstraction/config.php"
			],
			[
				"destaquespro",
				"mercur/module/AckCore/src/AckCore/Controller/DestaquesProdutosController.php"
			],
			[
				"ack-coreconteudoselement.",
				"mercur/module/AckCore/view/ack-core/conteudos/element.phtml"
			],
			[
				"interpreterfil",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterFilter.php"
			],
			[
				"interpreterab",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterAbstract.php"
			],
			[
				"interpreterfo",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php"
			],
			[
				"newslettercontr",
				"mercur/module/MercurAck/src/MercurAck/Controller/NewsletterController.php"
			],
			[
				"tableab",
				"mercur/vendor/system/1.8/System/Db/TableAbstract.php"
			],
			[
				"elementa",
				"mercur/vendor/system/1.8/System/HtmlElements/ElementAbstract.php"
			],
			[
				"htmlelement",
				"mercur/module/AckCore/src/AckCore/HtmlElementManager.php"
			],
			[
				"permissions.php",
				"mercur/module/AckCore/src/AckCore/Model/Permissions.php"
			],
			[
				"facade",
				"mercur/module/AckCore/src/AckCore/Facade.php"
			],
			[
				"interpreterform",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterForm.php"
			],
			[
				"interpreterfilter",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterFilter.php"
			],
			[
				"superiorlistmenu.phtml",
				"mercur/module/AckCore/view/ack-core/layout/components/superiorListMenu.phtml"
			],
			[
				"interpreterabstract",
				"mercur/vendor/system/1.8/System/DataAbstraction/Service/InterpreterAbstract.php"
			],
			[
				"ondeencontrarfil",
				"mercur/module/Mercur/view/mercur/ondeencontrar/filtro.phtml"
			],
			[
				"whereto",
				"mercur/module/Mercur/src/Mercur/Model/WhereToFind.php"
			],
			[
				"alteration.",
				"mercur/docs/alterations.sql"
			],
			[
				"string",
				"mercur/vendor/jean-carlo-machado/devil-php-utilities/src/DevilPhpUtilities/String.php"
			],
			[
				"codigos",
				"mercur/module/AckCore/src/AckCore/Model/ProdutoCodigos.php"
			],
			[
				"product.php",
				"mercur/module/AckCore/src/AckCore/Model/Product.php"
			],
			[
				"ondeencontrarcontro",
				"mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php"
			],
			[
				"scriptmer",
				"mercur/public/mercur/js/script.mercur.js"
			],
			[
				"newslettercont",
				"mercur/module/Mercur/src/Mercur/Controller/NewsletterController.php"
			],
			[
				"newsletters",
				"mercur/module/MercurAck/src/MercurAck/Model/CategoriasNewsletters.php"
			],
			[
				"mercurack/model/newsletters",
				"mercur/module/MercurAck/src/MercurAck/Model/Newsletters.php"
			],
			[
				"tableabstract",
				"mercur/vendor/system/1.8/System/Db/TableAbstract.php"
			],
			[
				"ackneslettercontr",
				"mercur/module/MercurAck/src/MercurAck/Controller/NewsletterController.php"
			],
			[
				"mercurindexindex",
				"mercur/module/Mercur/view/mercur/index/index.phtml"
			],
			[
				"newsletters.php",
				"mercur/module/MercurAck/src/MercurAck/Model/Newsletters.php"
			],
			[
				"newsletter",
				"mercur/module/Mercur/src/Mercur/Controller/NewsletterController.php"
			],
			[
				"unsub",
				"mercur/module/Mercur/view/mercur/newsletter/unsubscribe.phtml"
			],
			[
				"errorinde",
				"mercur/module/Mercur/view/mercur/error/index.phtml"
			],
			[
				"mercurackmodule.conf",
				"mercur/module/MercurAck/config/module.config.php"
			],
			[
				"categoriasnewsletters",
				"mercur/module/MercurAck/src/MercurAck/Model/CategoriasNewsletters.php"
			],
			[
				"son.subl",
				"snippet/sublime/son.sublime-snippet"
			],
			[
				"scriptme",
				"mercur/public/mercur/js/script.mercur.js"
			],
			[
				"mercurackconfig..",
				"mercur/module/MercurAck/config/module.config.php"
			],
			[
				"integracaomdou",
				"mercur/module/Integracao/Module.php"
			],
			[
				"script.mercur",
				"mercur/public/mercur/js/script.mercur.js"
			],
			[
				"alterat",
				"mercur/docs/alterations.sql"
			],
			[
				"jornalind",
				"mercur/module/Mercur/view/mercur/jornal/index.phtml"
			],
			[
				"ondeencontrarfilt",
				"mercur/module/Mercur/view/mercur/ondeencontrar/filtro.phtml"
			],
			[
				"states",
				"mercur/module/AckLocale/src/AckLocale/Model/States.php"
			],
			[
				"onde",
				"mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php"
			],
			[
				"mercurmodelprodu",
				"mercur/module/AckCore/src/AckCore/Model/Products.php"
			],
			[
				"script.js",
				"mercur/public/mercur/js/script.mercur.js"
			],
			[
				"ondeecncontro",
				"mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php"
			],
			[
				"head.phtml",
				"mercur/module/AckCore/view/ack-core/layout/components/header.phtml"
			],
			[
				"footer.phtml",
				"mercur/module/AckCore/view/ack-core/layout/components/footer.phtml"
			],
			[
				"plura",
				"mercur/module/AckCore/src/AckCore/View/Helper/Pluralizer.php"
			],
			[
				"falecon",
				"mercur/module/Mercur/src/Mercur/Controller/FaleconoscoController.php"
			],
			[
				"contatocontro",
				"mercur/module/AckContact/src/AckContact/Controller/ContatosController.php"
			],
			[
				"noticiascontro",
				"mercur/module/Mercur/src/Mercur/Controller/NoticiasController.php"
			],
			[
				"jornalcontro",
				"mercur/module/Mercur/src/Mercur/Controller/JornalController.php"
			],
			[
				"institucionalcontr",
				"mercur/module/AckCore/src/AckCore/Controller/InstitucionalController.php"
			],
			[
				"seloscontr",
				"mercur/module/AckCore/src/AckCore/Controller/SelosController.php"
			],
			[
				"usuarioscontro",
				"mercur/module/AckCore/src/AckCore/Controller/UsuariosController.php"
			],
			[
				"tablerow",
				"mercur/vendor/system/1.8/System/Mvc/Controller/TableRowAutomatorAbstract.php"
			],
			[
				"usuariosmercur",
				"mercur/module/MercurAck/src/MercurAck/Controller/UsuariosMercurController.php"
			],
			[
				"solicitacaodeusuarioaprovada",
				"mercur/module/Mercur/view/mailer/solicitacaodeusuarioaprovada.phtml"
			],
			[
				"usuariosolicitadoacessoaminhamercur",
				"mercur/module/Mercur/view/mailer/usuariosolicitadoacessoaminhamercur.phtml"
			],
			[
				"systemobjectpas",
				"mercur/vendor/system/1.8/System/Object/Password.php"
			],
			[
				"emailusuariocadastrado",
				"mercur/module/Mercur/view/mailer/usuariocadastrado.phtml"
			],
			[
				"mercurusua",
				"mercur/module/MercurAck/src/MercurAck/Model/MercurUsuarios.php"
			],
			[
				"restrito",
				"mercur/module/Mercur/src/Mercur/Controller/RestritoController.php"
			],
			[
				"roles.php",
				"mercur/module/MercurAcl/src/MercurAcl/Model/Roles.php"
			],
			[
				"noticiasinde",
				"mercur/module/Mercur/view/mercur/noticias/index.phtml"
			],
			[
				"aplicacoesvi",
				"mercur/module/Mercur/view/mercur/aplicacoes/visualizar.phtml"
			],
			[
				"mainmn",
				"mercur/module/Mercur/view/mercur/layout/components/mainMenu.phtml"
			],
			[
				"dashboardele",
				"mercur/module/AckCore/view/ack-core/dashboard/elements.phtml"
			],
			[
				"institucionalinde",
				"mercur/module/Mercur/view/mercur/institucional/index.phtml"
			],
			[
				"image.php",
				"mercur/vendor/system/1.8/System/HtmlElements/Image.php"
			],
			[
				"faleconoscoin",
				"mercur/module/Mercur/view/mercur/faleconosco/index.phtml"
			],
			[
				"institucionalind",
				"mercur/module/Mercur/view/mercur/institucional/index.phtml"
			],
			[
				"institucionalcontro",
				"mercur/module/Mercur/src/Mercur/Controller/InstitucionalController.php"
			],
			[
				"menu.config",
				"mercur/module/AckCore/config/menu.config.php"
			],
			[
				"templatescontro",
				"mercur/module/MercurAck/src/MercurAck/Controller/TemplatesController.php"
			],
			[
				"mainmnu",
				"mercur/module/Mercur/view/mercur/layout/components/mainMenu.phtml"
			],
			[
				"noticiaselement",
				"mercur/module/AckNews/view/ack-news/noticias/element.phtml"
			],
			[
				"mercur/view/helper/breadcrumbs.php",
				"mercur/module/Mercur/src/Mercur/View/Helper/BreadCrumbs.php"
			],
			[
				"noticiasvia",
				"mercur/module/Mercur/view/mercur/noticias/visualizar.phtml"
			],
			[
				"noticiasind",
				"mercur/module/Mercur/view/mercur/noticias/index.phtml"
			],
			[
				"newrow.",
				"mercur/module/AckNews/src/AckNews/Model/NewRow.php"
			],
			[
				"noticiasvi",
				"mercur/module/Mercur/view/mercur/noticias/visualizar.phtml"
			],
			[
				"news.php",
				"mercur/module/AckNews/src/AckNews/Model/News.php"
			],
			[
				"noticiascon",
				"mercur/module/Mercur/src/Mercur/Controller/NoticiasController.php"
			],
			[
				"newr",
				"mercur/module/AckNews/src/AckNews/Model/NewRow.php"
			],
			[
				"noticiasin",
				"mercur/module/Mercur/view/mercur/noticias/index.phtml"
			],
			[
				"/1.8/system/object/encryption.php",
				"mercur/vendor/system/1.8/System/Object/Encryption.php"
			],
			[
				"module.php",
				"mercur/module/AckCache/Module.php"
			],
			[
				"tablerowautoma",
				"mercur/vendor/system/1.8/System/Mvc/Controller/TableRowAutomatorAbstract.php"
			],
			[
				"noticiasvisua",
				"mercur/module/Mercur/view/mercur/noticias/visualizar.phtml"
			],
			[
				"representantescontro",
				"mercur/module/AckSales/src/AckSales/Controller/RepresentantesController.php"
			],
			[
				"htmlelmeentsimage",
				"mercur/vendor/system/1.8/System/HtmlElements/Image.php"
			],
			[
				"noticias.phtml",
				"mercur/module/Mercur/view/mercur/noticias/index.phtml"
			],
			[
				"ondecontrarfil",
				"mercur/module/Mercur/view/mercur/ondeencontrar/filtro.phtml"
			],
			[
				"ondeencontrarcontr",
				"mercur/module/Mercur/src/Mercur/Controller/OndeencontrarController.php"
			],
			[
				"representantescontr",
				"mercur/module/AckSales/src/AckSales/Controller/RepresentantesController.php"
			],
			[
				"mainmenu",
				"mercur/module/Mercur/view/mercur/layout/components/mainMenu.phtml"
			],
			[
				"representative.php",
				"mercur/module/AckSales/src/AckSales/Model/Representative.php"
			],
			[
				"busca.phtml",
				"mercur/module/Mercur/view/mercur/representantes/busca.phtml"
			],
			[
				"representanteseleme",
				"mercur/module/AckSales/view/ack-sales/representantes/element.phtml"
			],
			[
				"representantescon",
				"mercur/module/AckSales/src/AckSales/Controller/RepresentantesController.php"
			],
			[
				"scriptmercur",
				"mercur/public/mercur/js/script.mercur.js"
			],
			[
				"ablerowautomatorabstractcomponents/enviarimagemajax.php",
				"mercur/vendor/system/1.8/System/Mvc/Controller/TableRowAutomatorAbstractComponents/enviarImagemAjax.php"
			],
			[
				"ack52layer.php",
				"mercur/vendor/system/1.8/System/Legacy/Ack52Layer.php"
			],
			[
				"tablerowautomatorabstractcomponents/enviarimagemajax.php",
				"mercur/vendor/system/1.8/System/Mvc/Controller/TableRowAutomatorAbstractComponents/enviarImagemAjax.php"
			],
			[
				"script.mer",
				"mercur/public/js/site/script.mercur.js"
			],
			[
				"restritocontr",
				"mercur/module/Mercur/src/Mercur/Controller/RestritoController.php"
			],
			[
				"restritocontroller",
				"mercur/module/Mercur/src/Mercur/Controller/RestritoController.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"vagrant",
				"~/Projects/vagrant/docs/jean-laptop.sublime-project"
			],
			[
				"cub",
				"~/Projects/cub/docs/jeanAir.sublime-project"
			],
			[
				"ACKSKE",
				"~/Projects/AckSkeleton/docs/jeanAir.sublime-project"
			],
			[
				"ackSke",
				"~/Projects/AckSkeleton/docs/jeanAir.sublime-project"
			],
			[
				"vatr",
				"~/Projects/vagrant/vagrant.sublime-workspace"
			],
			[
				"irko",
				"~/Projects/ikro/docs/ikro.sublime-project"
			],
			[
				"skeleton",
				"~/Projects/skeleton/docs/jeanAir.sublime-project"
			],
			[
				"imgst",
				"~/Projects/imgstock/docs/jeanAir.sublime-project"
			],
			[
				"ikro",
				"~/Projects/ikro/docs/ikro.sublime-project"
			],
			[
				"",
				"~/Projects/devil-easy-git/docs/jeanAir.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 867.0
	},
	"selected_group": 0,
	"settings":
	{
		"vintage":
		{
		}
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 354.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
